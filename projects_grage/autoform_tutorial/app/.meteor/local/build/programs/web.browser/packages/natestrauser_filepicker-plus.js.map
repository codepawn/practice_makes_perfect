)]}'
{"version":3,"file":"/packages/natestrauser:filepicker-plus.js","sources":["natestrauser:filepicker-plus/client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yC;AACA,oD;AACA,wC;AACA,uI;AACA,oD;;AAEA,Y;AACA,2D;AACA,iD;AACA,iC;;AAEA,+E;AACA,uB;AACA,U;;AAEA,qC;AACA,uD;AACA,8C;AACA,+B;AACA,W;AACA,U;;AAEA,gC;AACA,sD;AACA,wC;AACA,4D;AACA,+C;AACA,iD;;AAEA,8B;AACA,qE;AACA,M;AACA,U;AACA,0C;AACA,4E;AACA,O;AACA,K;AACA,G;AACA,E;;AAEA,wE;AACA,e;AACA,4C;AACA,4D;AACA,qD;AACA,wC;AACA,oB;AACA,qC;AACA,sI;AACA,4D;AACA,I;AACA,6C;AACA,kF;AACA,yC;AACA,iD;AACA,G;AACA,a;AACA,G;;AAEA,+D;AACA,e;AACA,mB;AACA,qC;AACA,sI;AACA,4D;AACA,I;AACA,kD;AACA,G;AACA,a;AACA,G","sourcesContent":["loadFilePicker = function(key, callback){\n  //todo - shift arguements to support just callback\n  if(typeof filepicker === \"undefined\"){\n    if(!key && Meteor.settings && Meteor.settings.public && Meteor.settings.public.filepicker && Meteor.settings.public.filepicker.key)\n        key = Meteor.settings.public.filepicker.key;\n\n    if(key){\n        // Functions to run after the script tag has loaded\n        var filepickerLoadCallback = function() {\n          filepicker.setKey(key);\n\n          if (Object.prototype.toString.call(callback) === \"[object Function]\")\n            callback();\n        };\n\n        // If the script doesn't load\n        var filepickerErrorCallback = function(error) {\n          if(typeof console !== \"undefined\") {\n            console.log(error);\n          }\n        };\n\n        // Generate a script tag\n        var script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = \"//api.filepicker.io/v1/filepicker.js\";\n        script.onload = filepickerLoadCallback;\n        script.onerror = filepickerErrorCallback;\n\n        // Load the script tag\n        document.getElementsByTagName('head')[0].appendChild(script);\n      \n    }else{\n      if(typeof console !== \"undefined\") {\n        console.log(\"filepicker-plus - tried to load but key not supplied\");\n      }\n    }\n  }\n};\n\nUI.registerHelper(\"filepickerIdToImageUrl\", function(imageId, options) {\n  var url = \"\";\n  if(!imageId && options.hash.placehold_it){\n    url = \"http://placehold.it/\"+options.hash.placehold_it; \n  }else if(!imageId && options.hash.placeholder_url){\n    url = options.hash.placeholder_url; \n  }else if(imageId){\n    var domain = \"www.filepicker.io\";\n    if(Meteor.settings && Meteor.settings.public && Meteor.settings.public.filepicker && Meteor.settings.public.filepicker.cdn_domain)\n      domain = Meteor.settings.public.filepicker.cdn_domain;\n    \n    url = \"//\"+domain+\"/api/file/\" + imageId;\n    var convertOptions = _.omit(options.hash, ['placehold_it','placeholder_url']);\n    if(_.keys(convertOptions).length > 0)\n      url += \"/convert?\"+$.param(convertOptions);\n  }\n  return url;\n});\n\nUI.registerHelper(\"filepickerIdToUrl\", function(filepickerId) {\n  var url = \"\";\n  if(filepickerId){\n    var domain = \"www.filepicker.io\";\n    if(Meteor.settings && Meteor.settings.public && Meteor.settings.public.filepicker && Meteor.settings.public.filepicker.cdn_domain)\n      domain = Meteor.settings.public.filepicker.cdn_domain;\n    \n    url = \"//\"+domain+\"/api/file/\" + filepickerId;\n  }\n  return url;\n});"]}