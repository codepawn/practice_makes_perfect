)]}'
{"version":3,"sources":["summernote:summernote/dist/summernote.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,G;AACA,kD;AACA,yB;AACA,E;AACA,gB;AACA,wD;AACA,+D;AACA,E;AACA,0B;AACA,G;AACA,qB;AACA,qB;AACA,mD;AACA,4C;AACA,gC;AACA,U;AACA,8B;AACA,2B;AACA,G;AACA,gB;AACA,E;;;AAGA,gC;AACA,O;AACA,sC;AACA,M;AACA,iC;AACA,oC;AACA,sB;AACA,M;AACA,gC;AACA,O;AACA,kD;AACA,+D;AACA,mC;AACA,6B;AACA,c;AACA,sC;AACA,c;AACA,S;AACA,uB;AACA,6E;AACA,S;AACA,uB;AACA,O;AACA,4B;AACA,qB;AACA,8C;AACA,S;AACA,O;AACA,mB;AACA,M;AACA,G;;AAEA,qD;AACA,O;AACA,sC;AACA,M;AACA,6B;AACA,sB;AACA,M;AACA,gC;AACA,O;AACA,8C;AACA,iD;;AAEA,mB;AACA,kE;AACA,qC;AACA,qB;AACA,yB;AACA,8C;AACA,0B;AACA,W;AACA,S;AACA,O;AACA,E;AACA,iB;AACA,M;AACA,G;;AAEA,gE;;AAEA,K;AACA,8C;AACA,I;AACA,6B;AACA,sB;AACA,K;AACA,6C;AACA,sF;AACA,kC;AACA,2B;AACA,sB;AACA,qB;AACA,uB;AACA,wD;;AAEA,wE;AACA,iF;;AAEA,qB;;AAEA,mC;AACA,I;;AAEA,K;AACA,sB;AACA,I;AACA,0C;AACA,I;AACA,e;AACA,8B;AACA,K;AACA,e;AACA,uE;AACA,oD;AACA,wF;AACA,oG;AACA,4E;AACA,sD;AACA,0E;AACA,2C;AACA,+B;AACA,wF;AACA,qC;AACA,6C;AACA,I;;AAEA,K;AACA,qB;AACA,I;AACA,2C;AACA,I;AACA,e;AACA,6B;AACA,K;AACA,2B;AACA,+B;AACA,+B;AACA,+B;AACA,Q;AACA,M;;AAEA,uC;AACA,6B;AACA,M;;AAEA,oC;AACA,sC;AACA,mD;AACA,Q;AACA,M;;AAEA,0B;AACA,kB;AACA,M;;AAEA,4B;AACA,mB;AACA,M;;AAEA,4B;AACA,0B;AACA,sC;AACA,Q;AACA,M;;AAEA,iC;AACA,8B;AACA,oC;AACA,Q;AACA,M;;AAEA,6B;AACA,e;AACA,M;;AAEA,sB;;AAEA,O;AACA,oC;AACA,M;AACA,+B;AACA,O;AACA,sC;AACA,gC;AACA,uC;AACA,M;;AAEA,O;AACA,qC;AACA,M;AACA,qD;AACA,0C;AACA,M;AACA,yB;AACA,8B;AACA,kC;AACA,mC;AACA,oC;AACA,qC;AACA,O;AACA,oC;AACA,kC;AACA,c;AACA,8C;AACA,iD;AACA,sC;AACA,sC;AACA,Q;AACA,M;;AAEA,O;AACA,kG;AACA,0B;AACA,uB;AACA,O;AACA,uC;AACA,wB;AACA,4B;AACA,sC;AACA,mC;AACA,S;AACA,O;AACA,sB;AACA,M;;AAEA,O;AACA,gC;AACA,+B;AACA,uB;AACA,O;AACA,yD;AACA,4B;AACA,gE;AACA,sE;AACA,kB;AACA,M;;AAEA,Y;AACA,a;AACA,e;AACA,iB;AACA,a;AACA,iB;AACA,iB;AACA,e;AACA,e;AACA,yB;AACA,yB;AACA,iC;AACA,wC;AACA,M;AACA,O;;AAEA,K;AACA,qB;AACA,I;AACA,e;AACA,I;AACA,e;AACA,6B;AACA,K;AACA,2B;AACA,O;AACA,0C;AACA,M;AACA,2B;AACA,O;AACA,iC;AACA,sB;AACA,M;;AAEA,O;AACA,yC;AACA,M;AACA,2B;AACA,O;AACA,iC;AACA,qC;AACA,M;;AAEA,O;AACA,0D;AACA,M;AACA,2B;AACA,O;AACA,oC;AACA,8C;AACA,M;;AAEA,O;AACA,iD;AACA,M;AACA,2B;AACA,O;AACA,iC;AACA,4B;AACA,M;;AAEA,O;AACA,4B;AACA,O;AACA,uC;AACA,gE;AACA,8B;AACA,yB;AACA,sB;AACA,S;AACA,O;AACA,M;;AAEA,O;AACA,oF;AACA,O;AACA,sC;AACA,gE;AACA,gC;AACA,uB;AACA,S;AACA,O;AACA,kB;AACA,M;;AAEA,O;AACA,wD;AACA,O;AACA,2C;AACA,2C;AACA,M;;AAEA,O;AACA,0B;AACA,M;AACA,mC;AACA,sC;AACA,O;AACA,oC;AACA,2B;AACA,8C;AACA,4B;AACA,Y;AACA,M;AACA,E;AACA,O;AACA,wD;AACA,2E;AACA,O;AACA,sC;AACA,4D;AACA,8B;AACA,sC;AACA,O;AACA,oB;AACA,M;AACA,E;AACA,O;AACA,8C;AACA,M;AACA,mC;AACA,iE;AACA,uB;AACA,O;AACA,0C;AACA,uC;AACA,8B;AACA,8C;AACA,+B;AACA,iC;AACA,kC;AACA,gB;AACA,kC;AACA,S;AACA,oB;AACA,0B;AACA,M;AACA,E;AACA,O;AACA,gE;AACA,M;AACA,mC;AACA,iE;AACA,O;AACA,oC;AACA,uB;AACA,gE;AACA,qD;AACA,O;AACA,qB;AACA,M;;AAEA,O;AACA,qD;AACA,M;AACA,2B;AACA,O;AACA,mC;AACA,uB;;AAEA,gE;AACA,6C;AACA,mC;AACA,S;AACA,O;;AAEA,qB;AACA,M;;AAEA,O;AACA,yB;AACA,2B;AACA,O;AACA,uC;AACA,oC;AACA,sC;;AAEA,4B;AACA,M;;AAEA,O;AACA,yB;AACA,2B;AACA,O;AACA,uC;AACA,oC;AACA,sC;;AAEA,4B;AACA,M;;AAEA,E;AACA,kE;AACA,oE;AACA,4C;AACA,sE;AACA,O;;;AAGA,2C;AACA,sC;;AAEA,K;AACA,oB;AACA,I;AACA,kB;AACA,I;AACA,e;AACA,4B;AACA,K;AACA,0B;AACA,O;AACA,yB;AACA,M;AACA,sD;AACA,M;AACA,yB;AACA,wB;AACA,O;AACA,sC;AACA,uD;AACA,M;;AAEA,O;AACA,8B;AACA,M;AACA,4D;AACA,M;AACA,yB;AACA,wB;AACA,O;AACA,2C;AACA,6D;AACA,M;;AAEA,O;AACA,+B;AACA,M;AACA,kD;AACA,M;AACA,8B;AACA,uB;AACA,uC;AACA,qC;AACA,oC;AACA,qC;AACA,oC;AACA,oC;AACA,mC;AACA,mC;AACA,O;AACA,8C;AACA,qB;;AAEA,iB;AACA,gD;AACA,0D;AACA,2C;AACA,2D;AACA,U;;AAEA,gB;AACA,kD;AACA,kE;AACA,oD;AACA,gD;AACA,8C;AACA,6C;AACA,U;;AAEA,qB;AACA,c;AACA,4C;AACA,kE;AACA,U;AACA,gB;AACA,kD;AACA,kE;AACA,iD;AACA,+C;AACA,iD;AACA,+C;AACA,mD;AACA,+C;AACA,6C;AACA,4C;AACA,U;AACA,O;AACA,M;;AAEA,O;AACA,4D;AACA,M;AACA,e;AACA,+B;AACA,uB;AACA,O;AACA,gD;AACA,8F;;AAEA,4B;AACA,oB;AACA,O;;AAEA,kB;AACA,yD;AACA,0B;AACA,c;AACA,gF;AACA,O;;AAEA,sC;AACA,M;;AAEA,O;AACA,iC;AACA,M;AACA,6D;AACA,M;AACA,+B;AACA,yB;AACA,O;AACA,kD;AACA,wC;AACA,8B;AACA,gE;AACA,Q;AACA,M;;AAEA,O;AACA,qB;AACA,M;AACA,M;AACA,M;AACA,yB;AACA,uD;AACA,O;AACA,kC;AACA,yC;AACA,M;;AAEA,O;AACA,8C;AACA,kF;AACA,O;AACA,kC;AACA,sE;AACA,M;;AAEA,kC;AACA,6B;AACA,qB;AACA,O;;AAEA,yD;AACA,6E;AACA,M;;AAEA,wC;;AAEA,sC;AACA,yC;AACA,M;;AAEA,8C;;AAEA,oC;AACA,sC;AACA,6B;AACA,6B;AACA,8B;AACA,iC;AACA,M;;AAEA,kC;AACA,iE;AACA,M;;AAEA,kC;AACA,iE;AACA,M;;AAEA,wD;;AAEA,2C;AACA,oE;AACA,M;;AAEA,2C;;AAEA,wC;AACA,wD;AACA,M;;AAEA,wC;AACA,uD;AACA,M;;AAEA,4C;;AAEA,O;AACA,wD;AACA,M;AACA,0B;AACA,0B;AACA,wB;AACA,O;AACA,oD;AACA,2C;AACA,6C;AACA,M;;AAEA,O;AACA,kD;AACA,M;AACA,yB;AACA,oD;AACA,uB;AACA,O;AACA,qD;AACA,6B;;AAEA,wB;AACA,+D;AACA,4C;AACA,O;AACA,0B;AACA,uD;AACA,wC;AACA,O;AACA,sB;AACA,M;;AAEA,O;AACA,qC;AACA,6D;AACA,O;AACA,qD;;AAEA,O;AACA,yB;AACA,M;AACA,6D;AACA,M;AACA,yB;AACA,O;AACA,sC;AACA,yB;AACA,qC;AACA,O;;AAEA,oC;AACA,M;;AAEA,O;AACA,4C;AACA,M;AACA,yB;AACA,wB;AACA,O;AACA,mC;AACA,iC;;AAEA,sB;AACA,oB;AACA,kF;AACA,6C;AACA,oB;AACA,O;;AAEA,mB;AACA,M;;AAEA,O;AACA,+D;AACA,O;AACA,4C;AACA,+C;AACA,mC;AACA,O;AACA,M;;AAEA,O;AACA,0C;AACA,M;AACA,yB;AACA,kD;AACA,O;AACA,0C;AACA,oB;AACA,wC;AACA,wC;;AAEA,+B;AACA,O;AACA,kB;AACA,M;;AAEA,O;AACA,2E;AACA,M;AACA,yB;AACA,kD;AACA,O;AACA,qD;AACA,6B;;AAEA,oB;AACA,8C;AACA,wC;AACA,wC;;AAEA,+B;AACA,O;AACA,kB;AACA,M;;AAEA,O;AACA,iE;AACA,M;AACA,yB;AACA,6D;AACA,O;AACA,8C;AACA,+B;;AAEA,yB;AACA,oC;AACA,8B;AACA,6B;AACA,S;;AAEA,wB;AACA,S;AACA,uB;AACA,M;;AAEA,O;AACA,2C;AACA,O;AACA,8C;AACA,yC;AACA,+C;AACA,M;;AAEA,O;AACA,sD;AACA,M;AACA,0B;AACA,0B;AACA,O;AACA,kD;AACA,0C;AACA,gD;AACA,uD;AACA,O;AACA,8C;AACA,M;;AAEA,O;AACA,2D;AACA,M;AACA,yB;AACA,6D;AACA,O;AACA,0C;AACA,+B;;AAEA,qB;AACA,oB;AACA,kC;AACA,yB;AACA,oC;AACA,O;AACA,mB;AACA,M;;AAEA,O;AACA,mD;AACA,M;AACA,yB;AACA,oD;AACA,O;AACA,0C;AACA,+B;;AAEA,qB;AACA,oB;AACA,kC;AACA,yB;AACA,gC;AACA,O;AACA,mB;AACA,M;;AAEA,O;AACA,+B;AACA,M;AACA,yB;AACA,oD;AACA,O;AACA,gD;AACA,2B;AACA,6B;;AAEA,gD;AACA,iC;AACA,gD;AACA,oC;AACA,S;AACA,8E;AACA,0C;AACA,S;AACA,e;;AAEA,yB;AACA,M;;AAEA,O;AACA,8B;AACA,M;AACA,yB;AACA,uC;AACA,+B;AACA,O;AACA,6C;AACA,mC;AACA,kD;;AAEA,yC;AACA,gC;;AAEA,qB;AACA,M;;AAEA,O;AACA,kC;AACA,M;AACA,yB;AACA,mD;AACA,O;AACA,kD;AACA,sE;AACA,iB;AACA,wC;AACA,c;AACA,iC;AACA,O;AACA,kB;AACA,M;;AAEA,O;AACA,uB;AACA,M;AACA,yB;AACA,iC;AACA,O;AACA,oD;AACA,4C;AACA,gC;AACA,S;AACA,kB;AACA,M;;AAEA,O;AACA,yD;AACA,M;AACA,mC;AACA,wB;AACA,O;AACA,4C;AACA,gC;AACA,M;;AAEA,O;AACA,0D;AACA,M;AACA,mC;AACA,wB;AACA,O;AACA,6C;AACA,qD;AACA,M;;AAEA,O;AACA,oD;AACA,M;AACA,mC;AACA,wB;AACA,O;AACA,wC;AACA,+D;AACA,M;;AAEA,O;AACA,2D;AACA,M;AACA,yB;AACA,6B;AACA,wB;AACA,O;AACA,kD;AACA,yC;AACA,mC;AACA,uB;AACA,S;AACA,+B;AACA,O;;AAEA,kB;AACA,M;;AAEA,O;AACA,6D;AACA,M;AACA,yB;AACA,6B;AACA,wB;AACA,O;AACA,mD;AACA,yC;AACA,iE;AACA,uB;AACA,S;AACA,+B;AACA,O;;AAEA,kB;AACA,M;;AAEA,O;AACA,kC;AACA,M;AACA,yB;AACA,O;AACA,oC;AACA,qB;AACA,6C;AACA,oB;AACA,O;AACA,oB;AACA,M;;AAEA,uC;AACA,mE;AACA,M;;AAEA,O;AACA,qC;AACA,M;AACA,mC;AACA,yC;AACA,8B;AACA,O;AACA,yD;AACA,uB;;AAEA,+B;AACA,qC;AACA,sB;AACA,S;;AAEA,qC;AACA,sC;AACA,2C;AACA,uD;AACA,kC;AACA,c;AACA,0B;AACA,0D;AACA,O;;AAEA,c;AACA,mB;AACA,sB;AACA,Q;AACA,M;;AAEA,O;AACA,iC;AACA,M;AACA,mC;AACA,yC;AACA,8B;AACA,O;AACA,yD;AACA,uB;;AAEA,oD;AACA,qC;AACA,sB;AACA,S;;AAEA,qC;AACA,0C;AACA,2C;AACA,mD;AACA,mB;AACA,c;AACA,0B;AACA,+E;AACA,O;;AAEA,c;AACA,mB;AACA,sB;AACA,Q;AACA,M;;AAEA,O;AACA,wD;AACA,M;AACA,oC;AACA,oC;AACA,wB;AACA,O;AACA,iD;AACA,4E;AACA,M;;AAEA,O;AACA,gE;AACA,O;AACA,mC;AACA,wB;AACA,O;AACA,2C;AACA,kF;AACA,oB;AACA,O;;AAEA,6D;AACA,0D;AACA,iF;AACA,oB;AACA,O;;AAEA,mB;AACA,M;;AAEA,O;AACA,4B;AACA,M;AACA,mC;AACA,6B;AACA,8B;AACA,O;AACA,iD;AACA,qB;AACA,0B;AACA,uB;AACA,S;;AAEA,iC;AACA,O;;AAEA,kB;AACA,M;;AAEA,O;AACA,6B;AACA,M;AACA,mC;AACA,6B;AACA,8B;AACA,O;AACA,iD;AACA,qB;AACA,0B;AACA,uB;AACA,S;;AAEA,iC;AACA,O;;AAEA,kB;AACA,M;;AAEA,O;AACA,kD;AACA,M;AACA,2B;AACA,wB;AACA,O;AACA,wC;AACA,gC;AACA,qB;AACA,O;;AAEA,6D;AACA,oD;AACA,M;;AAEA,O;AACA,wB;AACA,M;AACA,wC;AACA,sC;AACA,gC;AACA,yC;AACA,O;AACA,iF;AACA,6B;;AAEA,qB;AACA,uB;;AAEA,2C;AACA,gB;AACA,S;;AAEA,+C;AACA,4D;AACA,wD;AACA,+C;AACA,O;AACA,M;;AAEA,O;AACA,6B;AACA,M;AACA,uD;AACA,M;AACA,6C;AACA,yB;AACA,O;AACA,oD;AACA,4D;AACA,kD;AACA,M;;AAEA,O;AACA,6B;AACA,M;AACA,sD;AACA,M;AACA,6C;AACA,0C;AACA,O;AACA,uD;AACA,6B;AACA,2D;AACA,sD;AACA,sE;AACA,gB;AACA,mD;AACA,S;AACA,O;AACA,qB;AACA,M;;AAEA,O;AACA,wB;AACA,M;AACA,6B;AACA,M;AACA,mC;AACA,gC;AACA,yE;AACA,sE;AACA,iD;AACA,O;AACA,+C;AACA,6E;AACA,uE;;AAEA,kB;AACA,8E;AACA,qC;AACA,4B;AACA,6C;AACA,wC;AACA,S;AACA,O;;AAEA,oB;AACA,+B;AACA,kD;AACA,c;AACA,4D;AACA,yE;AACA,qD;;AAEA,sC;AACA,uC;AACA,kC;AACA,S;;AAEA,qB;AACA,O;AACA,M;;AAEA,O;AACA,wB;AACA,M;AACA,0B;AACA,M;AACA,sC;AACA,mC;AACA,gC;AACA,yE;AACA,sE;AACA,iD;AACA,O;AACA,qD;AACA,iC;AACA,8D;;AAEA,8B;AACA,oB;AACA,0C;AACA,yC;AACA,O;;AAEA,uD;AACA,kC;AACA,2C;AACA,S;;AAEA,0B;AACA,uB;AACA,gE;AACA,oB;AACA,S;AACA,M;;AAEA,O;AACA,kB;AACA,M;AACA,2B;AACA,gC;AACA,uB;AACA,O;AACA,iD;AACA,kC;AACA,qD;AACA,wD;AACA,qD;AACA,qD;AACA,2D;;AAEA,+B;AACA,8B;AACA,oD;AACA,gC;AACA,c;AACA,gC;AACA,yC;AACA,O;;AAEA,qD;AACA,4D;AACA,yC;AACA,qC;AACA,S;;AAEA,iE;AACA,+C;AACA,oD;AACA,O;;AAEA,c;AACA,yB;AACA,4B;AACA,Q;AACA,M;;AAEA,sC;AACA,8C;AACA,M;;AAEA,sC;AACA,2C;AACA,M;;AAEA,O;AACA,qB;AACA,M;AACA,wD;AACA,M;AACA,yB;AACA,qC;AACA,O;AACA,iD;AACA,gD;AACA,qE;;AAEA,mC;AACA,2B;AACA,uB;AACA,mB;AACA,iE;AACA,yC;AACA,S;;AAEA,uD;AACA,8C;AACA,S;AACA,O;;AAEA,+B;AACA,M;;AAEA,O;AACA,0B;AACA,M;AACA,yB;AACA,6B;AACA,O;AACA,6C;AACA,oB;AACA,8C;AACA,gB;AACA,S;;AAEA,qC;AACA,qB;AACA,sB;AACA,O;AACA,M;;AAEA,O;AACA,sB;AACA,M;AACA,0C;AACA,M;AACA,yB;AACA,+B;AACA,gC;AACA,O;AACA,6C;AACA,mE;AACA,oB;AACA,O;;AAEA,qC;;AAEA,+B;AACA,mD;AACA,O;;AAEA,4D;AACA,iC;AACA,mB;;AAEA,qB;AACA,M;;AAEA,oD;;AAEA,O;AACA,4B;AACA,0D;AACA,O;AACA,mD;AACA,kE;AACA,4B;AACA,0C;AACA,O;AACA,iB;AACA,M;;AAEA,O;AACA,mB;AACA,M;AACA,oC;AACA,M;AACA,4B;AACA,0C;AACA,O;AACA,mD;AACA,gC;;AAEA,6B;AACA,+D;AACA,4E;AACA,oC;AACA,kF;AACA,kD;AACA,mF;;AAEA,+E;AACA,W;AACA,gC;AACA,O;;AAEA,oB;AACA,M;;AAEA,Y;AACA,yC;AACA,2B;AACA,oD;AACA,iD;AACA,qC;AACA,uB;AACA,yC;AACA,4C;AACA,6C;AACA,6B;AACA,uC;AACA,uC;AACA,qC;AACA,qB;AACA,qB;AACA,qB;AACA,6B;AACA,yB;AACA,kC;AACA,iC;AACA,qB;AACA,iC;AACA,qB;AACA,uB;AACA,qB;AACA,iC;AACA,uC;AACA,yB;AACA,uC;AACA,iB;AACA,qC;AACA,yC;AACA,mC;AACA,mC;AACA,mC;AACA,mC;AACA,uC;AACA,6B;AACA,uB;AACA,iD;AACA,yC;AACA,+C;AACA,6B;AACA,uC;AACA,yC;AACA,+B;AACA,iC;AACA,mC;AACA,2B;AACA,2B;AACA,+B;AACA,qC;AACA,qC;AACA,qC;AACA,+B;AACA,2B;AACA,yB;AACA,+C;AACA,iC;AACA,iC;AACA,yB;AACA,yB;AACA,qC;AACA,qC;AACA,iB;AACA,+B;AACA,yC;AACA,yB;AACA,+B;AACA,qC;AACA,qC;AACA,2B;AACA,6B;AACA,qB;AACA,6B;AACA,qB;AACA,+B;AACA,uB;AACA,iB;AACA,kB;AACA,M;AACA,O;;;AAGA,4B;;AAEA,O;AACA,+E;AACA,M;AACA,mC;AACA,+B;AACA,8B;AACA,M;AACA,6E;AACA,O;AACA,0D;AACA,wD;AACA,E;AACA,kE;AACA,uD;AACA,8D;AACA,6C;AACA,mB;AACA,S;AACA,qD;AACA,sE;AACA,gB;AACA,S;AACA,2C;AACA,O;AACA,E;AACA,+D;AACA,iF;AACA,qE;AACA,gD;AACA,uF;AACA,E;AACA,gD;AACA,gE;AACA,uE;AACA,E;AACA,qF;AACA,oD;AACA,gD;AACA,S;AACA,E;AACA,iC;AACA,0F;AACA,+B;AACA,E;AACA,wF;AACA,yD;AACA,oD;AACA,gD;AACA,S;AACA,E;AACA,gC;AACA,2B;AACA,O;AACA,E;AACA,c;AACA,wB;AACA,sB;AACA,Q;AACA,M;AACA,I;AACA,O;AACA,gF;AACA,mC;AACA,0B;AACA,O;AACA,6C;AACA,wD;AACA,oC;AACA,E;AACA,oC;AACA,4E;AACA,uE;AACA,wD;AACA,uE;AACA,6C;AACA,gB;AACA,2D;AACA,iC;AACA,0C;AACA,W;AACA,E;AACA,qB;AACA,oC;AACA,S;AACA,E;AACA,gB;AACA,qB;AACA,6C;AACA,wB;AACA,U;AACA,Q;AACA,E;AACA,sD;AACA,yD;AACA,E;AACA,6C;AACA,+C;AACA,oD;AACA,uB;AACA,M;AACA,I;AACA,O;AACA,oB;AACA,M;AACA,mB;AACA,yC;AACA,wC;AACA,uC;AACA,sC;AACA,O;AACA,kD;AACA,mB;AACA,mB;AACA,mB;AACA,mB;AACA,E;AACA,yD;AACA,qC;AACA,sC;AACA,gD;AACA,oC;AACA,kC;;AAEA,0B;AACA,gB;AACA,4C;AACA,qB;AACA,sB;AACA,a;;AAEA,8D;AACA,qB;AACA,sB;AACA,c;;AAEA,2B;AACA,S;AACA,Q;;AAEA,oC;AACA,gB;AACA,iB;AACA,iB;AACA,iB;AACA,gB;AACA,U;AACA,Q;;AAEA,wC;AACA,gB;AACA,mB;AACA,oB;AACA,U;AACA,Q;;AAEA,sC;AACA,gB;AACA,mB;AACA,oB;AACA,U;AACA,Q;;AAEA,S;AACA,oC;AACA,S;AACA,iC;AACA,sC;AACA,sC;AACA,kD;AACA,yC;AACA,wC;AACA,W;AACA,wC;AACA,gB;AACA,6B;AACA,S;AACA,Q;AACA,oB;AACA,Q;;AAEA,S;AACA,qE;AACA,Q;AACA,+B;AACA,S;AACA,yC;AACA,qC;AACA,wC;AACA,S;AACA,Q;AACA,oB;AACA,Q;;AAEA,S;AACA,2D;AACA,Q;AACA,+B;AACA,S;AACA,gC;AACA,wB;AACA,Q;AACA,oB;AACA,Q;;AAEA,S;AACA,+B;AACA,S;AACA,oC;;AAEA,W;AACA,uC;AACA,kC;AACA,W;AACA,gD;AACA,2C;AACA,6C;AACA,oE;AACA,oB;AACA,oE;AACA,a;AACA,W;AACA,uB;AACA,U;;AAEA,+D;AACA,2D;;AAEA,gC;AACA,0B;AACA,4B;AACA,wB;AACA,yB;AACA,U;AACA,Q;;AAEA,S;AACA,uC;AACA,Q;AACA,sD;AACA,kC;AACA,mD;AACA,iD;AACA,yB;AACA,S;AACA,6C;AACA,+B;;AAEA,iE;AACA,6D;;AAEA,uC;AACA,8C;AACA,0C;;AAEA,uB;AACA,+B;;AAEA,8D;AACA,2C;AACA,mB;AACA,W;;AAEA,mB;AACA,8B;AACA,6C;AACA,6C;AACA,a;AACA,0F;AACA,gC;AACA,a;AACA,uC;AACA,kD;AACA,kB;AACA,8B;AACA,W;;AAEA,mC;AACA,6B;AACA,W;AACA,iB;;AAEA,kC;AACA,Q;;AAEA,S;AACA,wC;AACA,2C;AACA,S;AACA,yC;AACA,0C;AACA,Q;;AAEA,S;AACA,uC;AACA,Q;AACA,oD;AACA,+B;AACA,S;AACA,qC;AACA,mD;AACA,iD;;AAEA,6C;AACA,kD;AACA,S;;AAEA,8C;;AAEA,4B;AACA,4C;AACA,gC;AACA,S;;AAEA,0B;AACA,0C;AACA,0D;AACA,S;;AAEA,gC;AACA,4B;AACA,4B;AACA,4B;AACA,2B;AACA,U;AACA,Q;;AAEA,S;AACA,2C;AACA,+B;AACA,S;AACA,oD;AACA,gC;AACA,kD;AACA,gB;AACA,kD;AACA,S;AACA,Q;;AAEA,S;AACA,2B;AACA,S;AACA,oC;AACA,wC;AACA,8C;;AAEA,qE;AACA,2B;AACA,S;;AAEA,uE;AACA,+C;AACA,gC;;AAEA,gC;AACA,kD;AACA,wC;AACA,W;AACA,S;;AAEA,gC;AACA,4B;AACA,4B;AACA,4B;AACA,2B;AACA,U;AACA,Q;;AAEA,S;AACA,iC;AACA,+B;AACA,S;AACA,yC;AACA,iC;AACA,sB;AACA,S;;AAEA,mC;AACA,qC;AACA,6B;AACA,W;;AAEA,gC;AACA,8E;AACA,mD;AACA,W;;AAEA,8B;AACA,4C;AACA,+B;AACA,uC;AACA,sE;AACA,sC;AACA,W;AACA,kC;AACA,W;;AAEA,+B;AACA,mD;AACA,kC;AACA,W;;AAEA,gC;AACA,qB;AACA,uB;AACA,qB;AACA,sB;AACA,sB;AACA,Q;AACA,M;AACA,S;AACA,6C;AACA,S;AACA,sC;AACA,4B;AACA,gD;AACA,qE;AACA,U;AACA,Q;AACA,E;AACA,gE;AACA,mD;AACA,6D;AACA,2C;AACA,iE;AACA,+C;AACA,+D;AACA,2C;;AAEA,S;AACA,+B;AACA,0B;AACA,S;AACA,2C;AACA,yD;AACA,uB;AACA,S;;AAEA,+C;AACA,uD;AACA,Q;;AAEA,S;AACA,mD;AACA,S;AACA,sC;AACA,sC;AACA,Q;;AAEA,S;AACA,gE;AACA,Q;AACA,+B;AACA,S;AACA,iD;AACA,yD;AACA,uC;AACA,sE;AACA,S;;AAEA,qD;AACA,kC;AACA,S;;AAEA,mC;AACA,wB;AACA,+B;AACA,uE;AACA,6C;AACA,2C;AACA,+E;AACA,W;AACA,gB;AACA,2D;AACA,S;;AAEA,oC;AACA,mF;AACA,wG;;AAEA,8B;AACA,oC;AACA,8D;AACA,gE;AACA,S;;AAEA,gC;AACA,Q;;AAEA,S;AACA,sC;AACA,Q;AACA,2B;AACA,uB;AACA,S;AACA,yC;AACA,iE;AACA,2E;;AAEA,6B;AACA,uE;AACA,gB;AACA,2C;AACA,S;;AAEA,oB;AACA,Q;;AAEA,S;AACA,sC;AACA,S;AACA,0C;AACA,wB;AACA,iE;AACA,iE;;AAEA,uD;;AAEA,iE;AACA,4C;AACA,qB;AACA,Q;AACA,E;AACA,S;AACA,8B;AACA,Q;AACA,yB;AACA,S;AACA,mC;AACA,sC;AACA,+E;AACA,Q;;AAEA,S;AACA,6C;AACA,Q;AACA,yE;AACA,+B;AACA,S;AACA,gD;AACA,0C;;AAEA,yC;AACA,sB;AACA,S;;AAEA,wE;AACA,yC;AACA,W;;AAEA,wB;AACA,oE;AACA,2C;AACA,a;AACA,S;;AAEA,gC;AACA,0B;AACA,4B;AACA,wB;AACA,yB;AACA,U;AACA,Q;AACA,E;AACA,S;AACA,mC;AACA,Q;AACA,+B;AACA,S;AACA,2C;AACA,gB;AACA,c;AACA,mD;AACA,sB;AACA,Y;AACA,c;AACA,mD;AACA,sB;AACA,W;AACA,U;AACA,Q;;AAEA,S;AACA,qD;AACA,Q;AACA,8B;AACA,S;AACA,4C;AACA,gB;AACA,c;AACA,sE;AACA,sB;AACA,Y;AACA,c;AACA,sE;AACA,sB;AACA,W;AACA,U;AACA,Q;;AAEA,S;AACA,uB;AACA,yB;AACA,S;AACA,yC;AACA,sC;AACA,0C;AACA,Q;AACA,M;;AAEA,K;AACA,sB;AACA,I;AACA,mB;AACA,0C;AACA,8F;AACA,I;AACA,+F;AACA,I;AACA,e;AACA,8B;AACA,K;AACA,Y;AACA,S;AACA,gB;AACA,S;AACA,gE;AACA,Q;AACA,2C;AACA,0C;AACA,yC;AACA,wC;AACA,+B;AACA,S;AACA,0C;AACA,0D;AACA,wC;AACA,oD;AACA,6C;AACA,0B;AACA,0D;AACA,iG;AACA,0B;AACA,a;AACA,E;AACA,oD;AACA,0C;AACA,uC;AACA,wC;AACA,qC;AACA,oC;AACA,6D;AACA,qD;AACA,yC;AACA,2C;AACA,0C;AACA,E;AACA,oE;AACA,6D;;AAEA,4D;AACA,iF;AACA,kF;AACA,gE;AACA,oC;AACA,a;;AAEA,iC;AACA,mC;AACA,+B;AACA,iC;AACA,W;AACA,wD;AACA,kB;AACA,kB;AACA,S;AACA,gD;AACA,Q;;AAEA,S;AACA,iB;AACA,S;AACA,sC;AACA,Q;AACA,2B;AACA,+B;AACA,S;AACA,uC;AACA,sB;AACA,mB;AACA,sB;AACA,oC;;AAEA,uD;AACA,6B;AACA,2C;AACA,6B;AACA,S;AACA,2B;AACA,2C;AACA,6B;AACA,oC;AACA,uC;AACA,6B;AACA,S;;AAEA,2C;AACA,Q;;AAEA,S;AACA,iB;AACA,S;AACA,0C;AACA,Q;AACA,+B;AACA,iC;AACA,+B;AACA,S;AACA,0D;AACA,+D;AACA,mC;AACA,+D;AACA,mC;AACA,gD;AACA,Q;;AAEA,S;AACA,iB;AACA,Q;AACA,8C;AACA,Q;AACA,iC;AACA,8B;AACA,+B;AACA,S;AACA,0D;AACA,mC;AACA,mC;AACA,uE;AACA,uE;;AAEA,gD;AACA,O;AACA,M;AACA,O;;AAEA,K;AACA,qB;AACA,K;AACA,e;AACA,K;AACA,kB;AACA,oB;AACA,qB;;AAEA,O;AACA,O;AACA,0D;AACA,O;AACA,kC;AACA,uE;AACA,iF;AACA,+E;AACA,kD;AACA,+C;AACA,0C;AACA,gD;AACA,4C;AACA,+D;AACA,4D;AACA,+D;AACA,6E;AACA,4E;AACA,0C;AACA,kD;AACA,6C;AACA,uD;AACA,8C;AACA,O;AACA,c;AACA,uD;AACA,iE;;AAEA,mE;AACA,mE;;AAEA,+F;;AAEA,6D;AACA,2E;;AAEA,gE;AACA,kE;AACA,8D;;AAEA,gE;;AAEA,8D;AACA,sF;;AAEA,kE;;AAEA,yD;AACA,0B;AACA,uB;AACA,yB;AACA,Q;;AAEA,iB;AACA,qE;AACA,gE;;AAEA,gB;AACA,gB;AACA,6B;AACA,2D;AACA,2G;AACA,mC;AACA,sC;AACA,6B;AACA,4C;AACA,+B;AACA,6B;AACA,8C;AACA,6C;AACA,0B;AACA,Q;;AAEA,gC;AACA,qB;AACA,sB;AACA,gC;AACA,8D;AACA,sC;AACA,gC;AACA,+C;AACA,kC;AACA,gC;AACA,2C;AACA,6B;AACA,W;AACA,mB;AACA,6B;AACA,iD;AACA,sC;AACA,6B;AACA,uC;AACA,Q;;AAEA,kB;AACA,gF;;AAEA,yB;AACA,wC;;AAEA,iB;AACA,kB;AACA,+D;AACA,iE;AACA,8C;AACA,Q;AACA,+B;;AAEA,sE;;AAEA,8B;AACA,e;AACA,iG;AACA,iG;AACA,iG;AACA,iG;AACA,iG;AACA,iG;AACA,iG;AACA,gG;AACA,Q;;AAEA,mB;AACA,4E;;AAEA,6B;AACA,2B;AACA,gB;AACA,e;AACA,Q;;AAEA,c;AACA,mE;;AAEA,kB;AACA,6C;AACA,qD;AACA,wD;AACA,oD;AACA,wC;AACA,0C;AACA,8C;AACA,mD;AACA,+C;AACA,2B;AACA,qB;;AAEA,S;AACA,sD;AACA,iC;AACA,yB;AACA,S;AACA,yC;AACA,2E;AACA,2C;AACA,oD;AACA,0C;AACA,S;;AAEA,wB;AACA,Q;;AAEA,e;AACA,a;AACA,qC;AACA,2B;AACA,2B;AACA,uB;AACA,+B;AACA,2B;AACA,6B;AACA,gC;AACA,0C;AACA,2C;AACA,wC;AACA,0C;AACA,yC;AACA,wC;AACA,mD;AACA,iD;AACA,wC;AACA,wC;AACA,oC;AACA,kC;AACA,kC;AACA,kC;AACA,kC;AACA,kC;AACA,kC;AACA,+C;AACA,oC;AACA,U;;AAEA,c;AACA,qC;AACA,0B;AACA,gC;AACA,uB;AACA,+B;AACA,0B;AACA,4B;AACA,+B;AACA,yC;AACA,0C;AACA,uC;AACA,yC;AACA,wC;AACA,uC;AACA,kD;AACA,gD;AACA,uC;AACA,uC;AACA,mC;AACA,iC;AACA,iC;AACA,iC;AACA,iC;AACA,iC;AACA,iC;AACA,8C;AACA,mC;AACA,S;AACA,O;AACA,M;;AAEA,8B;AACA,W;AACA,gB;AACA,e;AACA,uB;AACA,2B;AACA,iC;AACA,qC;AACA,gC;AACA,8B;AACA,yC;AACA,iC;AACA,qC;AACA,2B;AACA,U;AACA,gB;AACA,2B;AACA,iC;AACA,oC;AACA,oC;AACA,0C;AACA,kC;AACA,oC;AACA,kC;AACA,yC;AACA,uC;AACA,6C;AACA,mC;AACA,mD;AACA,0C;AACA,+C;AACA,+C;AACA,8D;AACA,2B;AACA,gC;AACA,U;AACA,e;AACA,uB;AACA,gC;AACA,2B;AACA,uB;AACA,2C;AACA,kD;AACA,+C;AACA,U;AACA,gB;AACA,wB;AACA,U;AACA,a;AACA,0C;AACA,U;AACA,gB;AACA,yB;AACA,2B;AACA,8B;AACA,sB;AACA,yB;AACA,yB;AACA,yB;AACA,yB;AACA,yB;AACA,wB;AACA,U;AACA,gB;AACA,sC;AACA,iC;AACA,U;AACA,kB;AACA,uB;AACA,oC;AACA,+B;AACA,U;AACA,oB;AACA,iC;AACA,6B;AACA,2B;AACA,6B;AACA,iC;AACA,+B;AACA,iC;AACA,U;AACA,gB;AACA,iC;AACA,6B;AACA,yC;AACA,yC;AACA,qC;AACA,4C;AACA,yB;AACA,4C;AACA,U;AACA,mB;AACA,0C;AACA,yB;AACA,4C;AACA,2B;AACA,sD;AACA,0C;AACA,iC;AACA,U;AACA,kB;AACA,uB;AACA,sB;AACA,S;AACA,O;AACA,K;AACA,I;;AAEA,K;AACA,sB;AACA,I;AACA,4C;AACA,I;AACA,e;AACA,8B;AACA,K;AACA,4B;AACA,O;AACA,gC;AACA,M;AACA,gD;AACA,M;AACA,yB;AACA,yC;AACA,O;AACA,6C;AACA,6C;AACA,oC;AACA,gC;AACA,2C;AACA,uC;AACA,Y;AACA,gC;AACA,kC;AACA,W;AACA,+B;AACA,mB;AACA,M;AACA,E;AACA,O;AACA,0B;AACA,M;AACA,uC;AACA,M;AACA,2B;AACA,+B;AACA,uC;AACA,O;AACA,iD;AACA,6C;AACA,8B;;AAEA,sC;AACA,kC;AACA,iC;AACA,2C;AACA,oC;AACA,gC;AACA,gB;AACA,yB;AACA,yC;AACA,sB;AACA,mC;AACA,W;AACA,mB;AACA,M;;AAEA,Y;AACA,2C;AACA,8B;AACA,M;AACA,O;;AAEA,K;AACA,oB;AACA,I;AACA,yB;AACA,I;AACA,e;AACA,4B;AACA,K;AACA,0B;AACA,kB;AACA,qB;AACA,e;AACA,kB;AACA,kB;;AAEA,oB;AACA,iB;AACA,iB;AACA,iB;AACA,iB;AACA,iB;AACA,iB;AACA,iB;AACA,iB;AACA,iB;;AAEA,sB;AACA,c;AACA,c;AACA,c;AACA,c;AACA,c;AACA,c;AACA,c;AACA,c;AACA,c;AACA,c;AACA,c;;AAEA,mB;AACA,yB;AACA,uB;AACA,yB;AACA,M;;AAEA,Y;AACA,S;AACA,uB;AACA,Q;AACA,gC;AACA,0B;AACA,S;AACA,kC;AACA,sD;AACA,Q;AACA,S;AACA,wC;AACA,sD;AACA,S;AACA,8C;AACA,kB;AACA,M;AACA,O;;AAEA,K;AACA,2B;AACA,I;AACA,mB;AACA,I;AACA,K;AACA,sC;AACA,qC;AACA,gC;;AAEA,oC;AACA,+B;AACA,+E;;AAEA,c;AACA,mC;AACA,gE;AACA,Q;AACA,M;;AAEA,6C;AACA,uC;AACA,0C;AACA,O;AACA,uC;AACA,uE;AACA,O;AACA,M;;AAEA,O;AACA,W;AACA,O;AACA,6B;AACA,4B;AACA,sB;AACA,0C;AACA,O;AACA,M;;AAEA,O;AACA,W;AACA,O;AACA,6B;AACA,2C;AACA,sB;AACA,0C;AACA,O;AACA,M;;AAEA,O;AACA,oB;AACA,O;AACA,mC;AACA,oB;;AAEA,yC;AACA,uC;AACA,4C;AACA,O;;AAEA,mD;AACA,iC;AACA,M;;AAEA,8B;AACA,sB;AACA,I;;AAEA,K;AACA,yB;AACA,I;AACA,U;AACA,I;AACA,K;AACA,2B;AACA,O;AACA,wB;AACA,M;AACA,kC;AACA,qD;AACA,wD;AACA,uC;AACA,M;AACA,e;AACA,4B;AACA,8E;AACA,uB;AACA,O;AACA,oD;AACA,sC;AACA,wB;AACA,4D;AACA,wD;AACA,W;AACA,sB;AACA,O;AACA,gD;AACA,M;;AAEA,O;AACA,4B;AACA,M;AACA,gC;AACA,gC;AACA,O;AACA,gD;AACA,oC;AACA,6B;AACA,gC;AACA,+B;AACA,S;AACA,M;;AAEA,O;AACA,8C;AACA,M;AACA,gC;AACA,yD;AACA,2D;AACA,yE;AACA,wE;AACA,uB;AACA,O;AACA,+C;AACA,4B;;AAEA,2D;AACA,6E;AACA,2E;;AAEA,8B;AACA,oD;AACA,O;;AAEA,kD;AACA,+C;AACA,2B;AACA,2B;AACA,+E;AACA,S;;AAEA,iC;AACA,kC;AACA,yC;AACA,sD;AACA,iD;AACA,qD;AACA,a;AACA,S;;AAEA,6C;AACA,6D;AACA,yC;AACA,0C;AACA,8C;AACA,wD;AACA,6B;AACA,a;AACA,qC;AACA,W;AACA,c;AACA,qB;AACA,O;AACA,M;;AAEA,O;AACA,kC;AACA,M;AACA,gC;AACA,qD;AACA,2D;AACA,O;AACA,2C;AACA,qE;AACA,oG;AACA,yD;;AAEA,oE;;AAEA,oD;AACA,sF;AACA,4F;AACA,qG;AACA,iH;AACA,2G;AACA,qG;;AAEA,0D;AACA,4B;AACA,yC;AACA,c;AACA,6E;AACA,qF;AACA,wE;AACA,O;;AAEA,kD;AACA,8C;AACA,yD;AACA,c;AACA,uG;AACA,yD;AACA,O;;AAEA,oD;AACA,gF;AACA,qE;AACA,4B;;AAEA,uB;AACA,M;AACA,I;;;AAGA,K;AACA,0B;AACA,I;AACA,+B;AACA,K;AACA,4B;AACA,O;AACA,gC;AACA,M;AACA,0B;AACA,M;AACA,oB;AACA,O;AACA,0C;AACA,4B;AACA,M;;AAEA,O;AACA,kC;AACA,M;AACA,4B;AACA,M;AACA,oB;AACA,O;AACA,4C;AACA,4B;AACA,M;;AAEA,O;AACA,qB;AACA,M;AACA,a;AACA,M;AACA,oB;AACA,O;AACA,+B;AACA,sB;AACA,wD;;AAEA,mE;AACA,sE;;AAEA,gD;AACA,oC;AACA,6B;AACA,yD;AACA,gB;AACA,8C;AACA,2D;AACA,mD;AACA,e;AACA,a;AACA,S;AACA,S;;AAEA,mB;AACA,M;;AAEA,O;AACA,sB;AACA,M;AACA,c;AACA,M;AACA,oB;AACA,O;AACA,gC;AACA,sB;AACA,wD;;AAEA,mE;AACA,sE;;AAEA,gD;AACA,oC;AACA,6B;AACA,oC;AACA,gB;AACA,8C;AACA,2D;AACA,6C;AACA,8C;AACA,e;AACA,a;AACA,S;AACA,S;;AAEA,mB;AACA,M;;AAEA,O;AACA,yB;AACA,M;AACA,kB;AACA,M;AACA,0C;AACA,O;AACA,2C;AACA,sB;AACA,wD;;AAEA,mE;AACA,6C;AACA,sE;;AAEA,0B;AACA,6C;AACA,8B;AACA,kD;AACA,6E;AACA,W;AACA,6B;AACA,+C;AACA,c;AACA,+C;AACA,+B;AACA,uC;AACA,iD;AACA,W;;AAEA,+B;AACA,sD;AACA,4C;AACA,a;AACA,gB;AACA,qD;AACA,S;AACA,O;;AAEA,6D;AACA,M;;AAEA,O;AACA,uB;AACA,M;AACA,4B;AACA,+B;AACA,uB;AACA,O;AACA,gD;AACA,kC;AACA,kC;;AAEA,8E;AACA,sE;;AAEA,qF;;AAEA,gB;AACA,4C;AACA,qE;AACA,S;;AAEA,mC;AACA,4C;;AAEA,qB;AACA,uE;AACA,6B;AACA,O;;AAEA,mB;AACA,M;;AAEA,O;AACA,0B;AACA,M;AACA,kC;AACA,uC;AACA,uB;AACA,O;AACA,+D;AACA,6B;;AAEA,gD;AACA,oC;AACA,oC;;AAEA,6E;AACA,yD;AACA,iF;AACA,gC;AACA,wC;AACA,Y;AACA,sC;AACA,kB;;AAEA,kD;AACA,gC;AACA,oC;AACA,Y;AACA,sC;AACA,W;;AAEA,4E;AACA,oF;;AAEA,kB;AACA,kE;AACA,gD;AACA,0C;AACA,a;AACA,S;;AAEA,iE;AACA,0C;AACA,W;;AAEA,6B;AACA,uE;AACA,oD;AACA,sF;AACA,gE;AACA,4C;AACA,yC;AACA,a;AACA,a;AACA,W;;AAEA,oD;AACA,S;;AAEA,2B;AACA,M;AACA,I;;;AAGA,K;AACA,0B;AACA,I;AACA,W;AACA,I;AACA,K;AACA,4B;;AAEA,4C;AACA,8B;;AAEA,O;AACA,iB;AACA,M;AACA,gC;AACA,gC;AACA,8B;AACA,O;AACA,yD;AACA,2E;AACA,iC;AACA,gC;;AAEA,uC;AACA,mB;AACA,M;;AAEA,O;AACA,uB;AACA,O;AACA,wC;AACA,+B;;AAEA,iC;AACA,iC;;AAEA,0D;AACA,yC;;AAEA,0B;AACA,uD;;AAEA,mB;AACA,sC;AACA,sB;AACA,yC;AACA,4D;AACA,sC;AACA,2D;AACA,iB;AACA,qD;AACA,gB;AACA,mE;;AAEA,8E;AACA,8F;;AAEA,uD;AACA,+B;AACA,a;AACA,S;AACA,6C;AACA,c;AACA,6C;AACA,uC;AACA,mB;AACA,8C;AACA,gB;AACA,uC;AACA,S;AACA,O;;AAEA,8E;;AAEA,M;;AAEA,I;;AAEA,K;AACA,yB;AACA,I;AACA,U;AACA,I;AACA,K;AACA,2B;AACA,O;AACA,qB;AACA,M;AACA,gC;AACA,+B;AACA,O;AACA,wC;AACA,gE;AACA,kD;AACA,wD;;AAEA,kE;AACA,qB;AACA,2C;AACA,O;AACA,M;;AAEA,O;AACA,iC;AACA,M;AACA,+B;AACA,+B;AACA,qB;AACA,O;AACA,sD;AACA,2B;AACA,yD;AACA,+C;AACA,O;AACA,4B;;AAEA,2B;AACA,yD;AACA,4C;AACA,O;AACA,4B;AACA,gF;AACA,M;AACA,I;;AAEA,K;AACA,0B;AACA,I;AACA,W;AACA,I;AACA,K;AACA,mC;;AAEA,4B;AACA,4B;AACA,8B;AACA,8B;;AAEA,O;AACA,0B;AACA,M;AACA,mB;AACA,M;AACA,gC;AACA,6B;AACA,O;AACA,6C;AACA,wB;AACA,4B;AACA,M;;AAEA,O;AACA,wB;AACA,M;AACA,yB;AACA,M;AACA,gC;AACA,4C;AACA,O;AACA,yD;AACA,wB;AACA,8C;AACA,yB;AACA,2C;AACA,O;AACA,M;;AAEA,O;AACA,wB;AACA,M;AACA,6D;AACA,M;AACA,gC;AACA,O;AACA,0C;AACA,kC;AACA,oB;AACA,kF;AACA,gD;AACA,O;AACA,yC;AACA,M;;AAEA,O;AACA,2B;AACA,M;AACA,2B;AACA,M;AACA,gC;AACA,O;AACA,8C;AACA,wC;AACA,gB;AACA,qB;AACA,0B;AACA,O;AACA,M;;AAEA,O;AACA,0B;AACA,M;AACA,+B;AACA,M;AACA,gC;AACA,O;AACA,6C;AACA,yB;AACA,+C;AACA,qE;AACA,+C;AACA,O;AACA,M;AACA,O;AACA,2B;AACA,M;AACA,oB;AACA,M;AACA,2B;AACA,6C;AACA,O;AACA,2C;AACA,+B;AACA,4E;AACA,M;;AAEA,sD;AACA,yB;AACA,8B;AACA,0D;AACA,0C;AACA,M;;AAEA,gD;AACA,yB;AACA,8B;AACA,kD;AACA,0C;AACA,M;;AAEA,O;AACA,mB;AACA,W;AACA,gC;AACA,O;AACA,sC;AACA,uC;AACA,2C;AACA,iC;AACA,M;;AAEA,O;AACA,mB;AACA,W;AACA,gC;AACA,O;AACA,sC;AACA,uC;AACA,2C;AACA,iC;AACA,M;;AAEA,O;AACA,4B;AACA,qB;AACA,gC;AACA,O;AACA,mE;AACA,uC;AACA,M;;AAEA,O;AACA,2B;AACA,oB;AACA,gC;AACA,wC;AACA,O;AACA,mF;AACA,iD;AACA,8B;AACA,mC;AACA,O;AACA,M;;AAEA,O;AACA,mB;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,qB;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,wB;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,4B;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,0B;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,0B;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,wB;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,0B;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,4B;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,2B;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,0B;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,0B;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,2B;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,wB;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,wB;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,mC;AACA,gC;AACA,2B;AACA,O;;AAEA,O;AACA,uB;AACA,M;AACA,uB;AACA,M;AACA,gC;AACA,2B;AACA,O;;AAEA,6B;AACA,2E;AACA,+F;AACA,kF;AACA,kD;AACA,kF;;AAEA,iE;AACA,8C;AACA,4C;AACA,mC;;AAEA,mD;;AAEA,wC;AACA,U;AACA,wB;AACA,K;AACA,2B;;AAEA,O;AACA,kB;AACA,M;AACA,qB;AACA,M;AACA,gC;AACA,8B;AACA,O;AACA,8C;AACA,+B;AACA,gD;AACA,uB;AACA,c;AACA,iC;AACA,0D;AACA,gC;AACA,O;AACA,M;;AAEA,O;AACA,oB;AACA,M;AACA,2B;AACA,M;AACA,O;AACA,8B;AACA,+B;AACA,gD;AACA,6B;AACA,O;AACA,M;;AAEA,O;AACA,8B;AACA,M;AACA,uB;AACA,M;AACA,8B;AACA,O;AACA,iD;AACA,+B;AACA,wC;AACA,8B;AACA,M;;AAEA,O;AACA,gC;AACA,M;AACA,gC;AACA,O;AACA,mD;AACA,+B;AACA,0C;AACA,8B;AACA,M;;AAEA,O;AACA,gC;AACA,O;AACA,qD;AACA,+B;AACA,4C;AACA,8B;AACA,M;;AAEA,O;AACA,gC;AACA,O;AACA,wC;AACA,+B;AACA,+B;AACA,8B;AACA,M;;AAEA,O;AACA,gC;AACA,O;AACA,yC;AACA,+B;AACA,gC;AACA,8B;AACA,M;;AAEA,O;AACA,mB;AACA,M;AACA,gC;AACA,2B;AACA,O;AACA,6D;AACA,gE;AACA,iC;AACA,oB;AACA,sB;AACA,4D;AACA,W;AACA,6C;AACA,4D;AACA,gC;AACA,2B;AACA,oD;AACA,2C;AACA,yC;AACA,S;AACA,S;AACA,M;;AAEA,O;AACA,yB;AACA,kB;AACA,8B;AACA,yB;AACA,O;AACA,kD;AACA,+B;AACA,4C;AACA,2B;AACA,qD;AACA,8B;AACA,M;;AAEA,O;AACA,kB;AACA,8B;AACA,2B;AACA,O;AACA,kD;AACA,+B;AACA,4C;AACA,0D;AACA,gE;AACA,8B;AACA,M;;AAEA,O;AACA,iB;AACA,8B;AACA,6B;AACA,O;AACA,mD;AACA,+B;AACA,4C;AACA,2C;AACA,oE;AACA,8B;AACA,M;;AAEA,O;AACA,kB;AACA,M;AACA,gC;AACA,8B;AACA,O;AACA,sD;AACA,+B;AACA,2C;AACA,6D;AACA,0D;AACA,8B;AACA,M;;AAEA,4C;AACA,+B;AACA,uC;AACA,8B;AACA,M;;AAEA,6B;AACA,yC;AACA,8C;AACA,qC;AACA,iD;AACA,U;AACA,a;AACA,M;AACA,2B;;AAEA,O;AACA,e;AACA,M;AACA,gC;AACA,iC;AACA,O;AACA,iD;AACA,+B;;AAEA,4C;AACA,wC;AACA,0C;AACA,qB;AACA,mC;AACA,W;AACA,S;;AAEA,8B;AACA,M;;AAEA,O;AACA,iB;AACA,gC;AACA,4B;AACA,O;AACA,mD;AACA,+B;AACA,uC;AACA,yB;AACA,S;AACA,8B;AACA,M;;AAEA,O;AACA,a;AACA,M;AACA,oB;AACA,M;AACA,gC;AACA,O;AACA,wC;AACA,+B;AACA,6B;AACA,wD;AACA,2C;AACA,qB;;AAEA,iC;AACA,uC;AACA,gC;AACA,O;AACA,M;;AAEA,O;AACA,4B;AACA,M;AACA,gC;AACA,+B;AACA,8B;AACA,O;AACA,+D;AACA,iC;AACA,mC;AACA,2C;AACA,+B;AACA,sD;;AAEA,+B;;AAEA,iC;AACA,gD;AACA,O;;AAEA,kB;AACA,0B;AACA,+C;AACA,qE;AACA,2B;AACA,c;AACA,yC;AACA,wB;AACA,qC;AACA,mC;AACA,W;AACA,O;;AAEA,8C;AACA,wC;AACA,0B;AACA,6C;AACA,gB;AACA,yC;AACA,S;AACA,S;;AAEA,+E;AACA,kD;AACA,yE;AACA,4C;;AAEA,mB;AACA,wB;AACA,0B;AACA,sB;AACA,uB;AACA,iB;;AAEA,8B;AACA,M;;AAEA,O;AACA,wB;AACA,M;AACA,uB;AACA,0C;AACA,mC;AACA,kD;AACA,uC;AACA,O;AACA,6C;AACA,wB;;AAEA,oD;;AAEA,iD;AACA,0D;;AAEA,c;AACA,mB;AACA,6B;AACA,kF;AACA,uD;AACA,Q;AACA,M;;AAEA,O;AACA,oB;AACA,M;AACA,8B;AACA,4C;AACA,2D;AACA,2D;AACA,O;AACA,kD;AACA,yC;AACA,qE;;AAEA,+B;;AAEA,6E;AACA,6E;;AAEA,8B;AACA,M;;AAEA,O;AACA,mB;AACA,M;AACA,8B;AACA,2D;AACA,O;AACA,mD;AACA,sC;AACA,+B;;AAEA,+B;AACA,iC;AACA,oE;AACA,8B;AACA,M;;AAEA,O;AACA,e;AACA,M;AACA,gC;AACA,4B;AACA,8B;AACA,O;AACA,yD;AACA,+B;AACA,kC;AACA,8B;AACA,M;;AAEA,O;AACA,yB;AACA,M;AACA,gC;AACA,sC;AACA,4B;AACA,O;AACA,4D;AACA,+B;;AAEA,kE;;AAEA,kB;AACA,gC;AACA,O;;AAEA,8B;AACA,M;;AAEA,O;AACA,6B;AACA,gC;AACA,4B;AACA,+C;AACA,O;AACA,wD;AACA,+B;;AAEA,mB;AACA,iC;AACA,kB;AACA,S;;AAEA,8B;AACA,M;;AAEA,O;AACA,4B;AACA,+C;AACA,iD;AACA,O;AACA,yD;AACA,oB;AACA,uB;AACA,qC;AACA,0C;AACA,qB;AACA,0D;AACA,0D;AACA,U;AACA,c;AACA,qB;AACA,uB;AACA,uB;AACA,U;AACA,O;;AAEA,6B;AACA,M;;AAEA,O;AACA,0B;AACA,M;AACA,gC;AACA,kE;AACA,+C;AACA,O;AACA,6D;AACA,+B;AACA,uB;;AAEA,8B;AACA,wD;AACA,sC;;AAEA,8B;AACA,M;;AAEA,O;AACA,gB;AACA,M;AACA,uB;AACA,O;AACA,uC;AACA,wB;;AAEA,0D;AACA,uB;AACA,0F;AACA,O;AACA,M;AACA,I;;AAEA,K;AACA,yB;AACA,I;AACA,W;AACA,K;AACA,4B;AACA,O;AACA,2B;AACA,M;AACA,iC;AACA,gC;AACA,O;AACA,oD;AACA,S;AACA,2E;AACA,6B;AACA,8B;AACA,S;AACA,sD;AACA,2D;AACA,kE;AACA,wE;AACA,sD;AACA,W;AACA,Q;;AAEA,S;AACA,4C;AACA,Q;AACA,iB;AACA,iC;AACA,+B;AACA,S;AACA,gD;AACA,6C;AACA,2C;AACA,Q;;AAEA,4B;AACA,sC;;AAEA,2F;AACA,8C;AACA,W;AACA,0F;AACA,6C;AACA,W;AACA,6F;AACA,gD;AACA,W;AACA,mF;AACA,uE;AACA,W;;AAEA,yC;AACA,iF;AACA,qC;AACA,W;AACA,kF;AACA,sC;AACA,W;AACA,iF;AACA,6D;AACA,W;;AAEA,uC;AACA,6E;AACA,+D;AACA,W;AACA,+E;AACA,8D;AACA,W;AACA,gF;AACA,8D;AACA,W;AACA,e;AACA,O;;AAEA,iB;AACA,wD;AACA,6B;AACA,oD;AACA,6B;;AAEA,6C;AACA,4D;AACA,kG;AACA,sD;AACA,oB;AACA,a;AACA,W;AACA,U;AACA,sE;AACA,qD;;AAEA,S;AACA,O;;AAEA,iB;AACA,wD;AACA,4E;AACA,uE;;AAEA,mB;AACA,wD;AACA,2E;;AAEA,yD;AACA,iD;AACA,S;AACA,2D;AACA,qD;AACA,S;AACA,8D;AACA,2D;AACA,S;AACA,kE;AACA,mE;AACA,S;AACA,gE;AACA,+D;AACA,S;AACA,8D;AACA,2D;AACA,S;AACA,gE;AACA,yF;AACA,S;AACA,kE;AACA,oD;AACA,S;AACA,iE;AACA,mD;AACA,S;AACA,gE;AACA,qD;AACA,S;AACA,wE;AACA,uD;AACA,S;AACA,sE;AACA,qD;AACA,S;AACA,M;;AAEA,O;AACA,0B;AACA,M;AACA,2B;AACA,gC;AACA,2B;AACA,O;AACA,kE;AACA,oD;AACA,2D;AACA,kE;AACA,mC;AACA,iE;AACA,0E;AACA,8C;AACA,M;AACA,I;;AAEA,K;AACA,0B;AACA,I;AACA,Y;AACA,K;AACA,6B;AACA,8B;;AAEA,kD;AACA,yC;AACA,M;;AAEA,O;AACA,2B;AACA,gC;AACA,4B;AACA,O;AACA,sE;AACA,6D;AACA,M;;AAEA,O;AACA,wC;AACA,+B;AACA,O;AACA,yC;AACA,6B;AACA,mD;AACA,uC;AACA,M;;AAEA,O;AACA,0C;AACA,+B;AACA,O;AACA,2C;AACA,6B;AACA,mD;AACA,oC;AACA,M;;AAEA,O;AACA,iC;AACA,2C;AACA,O;AACA,gE;AACA,oE;AACA,8C;AACA,M;;AAEA,O;AACA,iC;AACA,0C;AACA,O;AACA,6D;AACA,kE;AACA,6C;;AAEA,uB;AACA,oC;AACA,c;AACA,kC;AACA,O;AACA,M;;AAEA,O;AACA,6B;AACA,M;AACA,gC;AACA,2B;AACA,uB;AACA,O;AACA,2C;AACA,6D;;AAEA,uD;AACA,M;;AAEA,O;AACA,uB;AACA,gC;AACA,2B;AACA,uC;AACA,O;AACA,gE;AACA,qD;;AAEA,8C;AACA,8C;AACA,M;AACA,I;;AAEA,4B;;AAEA,+B;AACA,gC;;AAEA,kD;AACA,yC;AACA,oE;AACA,O;AACA,M;;AAEA,O;AACA,6C;AACA,M;AACA,gC;AACA,O;AACA,gD;AACA,6B;AACA,8B;;AAEA,kE;AACA,uE;;AAEA,+E;AACA,wD;;AAEA,kD;AACA,uE;;AAEA,2F;AACA,2F;;AAEA,kC;AACA,qC;AACA,mC;AACA,S;AACA,M;AACA,I;;AAEA,K;AACA,0B;AACA,I;AACA,2D;AACA,I;AACA,K;AACA,6B;AACA,8B;;AAEA,O;AACA,wC;AACA,M;AACA,e;AACA,gC;AACA,iC;AACA,uB;AACA,mC;AACA,kC;AACA,O;AACA,gE;AACA,wC;AACA,4E;AACA,oE;;AAEA,mC;AACA,c;AACA,uB;AACA,6B;AACA,Q;AACA,M;;AAEA,O;AACA,mB;AACA,M;AACA,e;AACA,8B;AACA,4B;AACA,O;AACA,gD;AACA,oB;AACA,yB;AACA,uB;AACA,oB;AACA,S;AACA,M;;AAEA,uC;;AAEA,O;AACA,2B;AACA,mD;AACA,+C;AACA,iC;AACA,O;AACA,6D;AACA,yC;;AAEA,6D;AACA,6B;AACA,6C;AACA,oD;AACA,wD;AACA,8C;AACA,sB;AACA,uC;AACA,gB;AACA,2C;AACA,S;AACA,mF;AACA,c;AACA,4B;AACA,O;;AAEA,+D;AACA,4B;AACA,mF;AACA,c;AACA,6B;AACA,O;;AAEA,2D;AACA,wD;AACA,+D;AACA,mB;AACA,wC;AACA,oC;AACA,oF;AACA,qC;AACA,a;AACA,S;AACA,c;AACA,2B;AACA,O;AACA,M;;AAEA,O;AACA,2B;AACA,gC;AACA,4B;AACA,O;AACA,kE;AACA,yD;AACA,M;;AAEA,O;AACA,wB;AACA,mD;AACA,O;AACA,qC;AACA,iC;AACA,M;AACA,I;;AAEA,K;AACA,yB;AACA,I;AACA,W;AACA,K;AACA,mC;AACA,gC;;AAEA,O;AACA,2C;AACA,qC;AACA,M;AACA,gC;AACA,O;AACA,6C;AACA,8C;AACA,+B;AACA,gC;;AAEA,0D;AACA,0C;AACA,4C;AACA,8C;AACA,0C;;AAEA,4E;AACA,6D;AACA,8C;;AAEA,wD;;AAEA,oD;AACA,6C;AACA,6C;AACA,yD;AACA,uC;;AAEA,+E;AACA,iF;AACA,uC;AACA,qC;AACA,2D;AACA,W;;AAEA,wD;AACA,oE;AACA,S;AACA,O;AACA,M;;AAEA,yC;AACA,4D;AACA,M;;AAEA,O;AACA,oB;AACA,8B;AACA,gC;AACA,iC;AACA,O;AACA,4D;AACA,+D;AACA,4B;AACA,wC;AACA,kE;;AAEA,yB;AACA,yB;AACA,qC;AACA,qC;AACA,U;;AAEA,wB;AACA,2B;AACA,yB;AACA,uB;AACA,6B;AACA,6B;AACA,0E;AACA,yD;AACA,yE;AACA,c;AACA,0B;AACA,O;AACA,M;;AAEA,O;AACA,W;AACA,M;AACA,8B;AACA,O;AACA,oC;AACA,gC;AACA,M;AACA,I;;AAEA,uC;AACA,4B;AACA,qC;;AAEA,O;AACA,wB;AACA,M;AACA,iC;AACA,O;AACA,yC;;AAEA,wC;AACA,0C;AACA,4C;AACA,0C;;AAEA,oC;AACA,wC;AACA,uC;AACA,wC;AACA,0D;AACA,S;AACA,Q;;AAEA,wC;AACA,wD;AACA,yB;AACA,6D;;AAEA,0C;AACA,kB;AACA,wD;AACA,a;AACA,6B;;AAEA,6C;AACA,c;AACA,8B;AACA,gB;AACA,wC;AACA,W;AACA,8C;AACA,O;;AAEA,yE;AACA,M;AACA,I;;;AAGA,iB;AACA,4B;AACA,6B;AACA,6C;AACA,wB;AACA,S;AACA,Y;AACA,qC;AACA,K;AACA,G;;AAEA,K;AACA,oB;AACA,K;AACA,qC;;AAEA,uC;AACA,0E;AACA,8C;AACA,qD;AACA,O;AACA,M;;AAEA,O;AACA,iC;AACA,wB;AACA,O;AACA,8C;AACA,wC;AACA,0C;AACA,M;;AAEA,O;AACA,sB;AACA,M;AACA,iC;AACA,O;AACA,yC;AACA,yC;AACA,oC;AACA,c;AACA,kC;AACA,O;AACA,M;;AAEA,O;AACA,yB;AACA,M;AACA,iC;AACA,O;AACA,2C;AACA,wC;AACA,0C;AACA,4C;AACA,0C;AACA,0C;AACA,wC;;AAEA,4C;;AAEA,8D;AACA,0C;;AAEA,+D;AACA,+C;AACA,6C;;AAEA,mC;;AAEA,uB;;AAEA,uC;AACA,gC;AACA,gF;;AAEA,gC;AACA,sC;AACA,0E;AACA,uC;AACA,uD;AACA,sC;AACA,a;AACA,S;;AAEA,qC;AACA,wD;AACA,4C;AACA,O;AACA,M;;AAEA,O;AACA,2B;AACA,M;AACA,iC;AACA,O;AACA,6C;AACA,wC;AACA,0C;AACA,4C;AACA,0C;;AAEA,4C;;AAEA,yC;AACA,gC;AACA,iD;AACA,0C;AACA,8B;AACA,O;;AAEA,iF;AACA,oE;AACA,sC;;AAEA,wB;;AAEA,gE;AACA,M;AACA,I;;AAEA,wC;AACA,gC;;AAEA,O;AACA,kC;AACA,M;AACA,uD;AACA,8B;AACA,O;AACA,kD;AACA,0D;AACA,qC;AACA,2C;AACA,6B;AACA,W;AACA,c;AACA,yD;AACA,O;AACA,M;;AAEA,O;AACA,kC;AACA,M;AACA,uD;AACA,8B;AACA,O;AACA,kE;AACA,2B;AACA,wC;AACA,4C;AACA,sE;;AAEA,sE;AACA,iF;AACA,8C;AACA,4E;AACA,wE;AACA,iE;AACA,uC;AACA,2C;AACA,6C;AACA,sE;AACA,S;AACA,8C;AACA,uC;AACA,8C;AACA,iC;AACA,0C;AACA,S;AACA,iC;AACA,yB;AACA,wC;AACA,S;;AAEA,4C;AACA,6C;AACA,oC;AACA,gE;AACA,sC;AACA,uC;AACA,oE;AACA,S;;AAEA,yB;AACA,6C;AACA,+B;;AAEA,4D;AACA,qD;AACA,sD;;AAEA,iF;;AAEA,8E;AACA,wC;AACA,+D;AACA,0B;AACA,oC;AACA,0C;AACA,6E;AACA,a;AACA,0B;AACA,wC;AACA,2E;AACA,S;AACA,iE;AACA,M;AACA,I;;AAEA,sC;;AAEA,yC;AACA,8D;AACA,M;;AAEA,O;AACA,4B;AACA,M;AACA,2B;AACA,O;AACA,iD;AACA,4D;AACA,+E;AACA,4C;;AAEA,kF;AACA,oD;AACA,sD;AACA,uC;AACA,iB;AACA,S;;AAEA,sB;AACA,qD;AACA,sD;;AAEA,2B;;AAEA,gC;AACA,2C;;AAEA,0D;AACA,oE;AACA,wC;;AAEA,4D;AACA,6D;;AAEA,sD;AACA,iB;AACA,kE;AACA,0B;AACA,mE;AACA,a;AACA,mB;AACA,W;;AAEA,oC;;AAEA,iD;AACA,kD;AACA,iD;AACA,0C;AACA,W;;AAEA,+D;AACA,sC;;AAEA,0D;AACA,2D;AACA,mD;;AAEA,2D;AACA,c;;AAEA,e;AACA,O;;AAEA,gD;AACA,wF;;AAEA,6B;AACA,6D;AACA,O;;AAEA,uD;AACA,M;AACA,I;;AAEA,uC;;AAEA,O;AACA,2B;AACA,M;AACA,e;AACA,2B;AACA,gC;AACA,O;AACA,+C;AACA,8C;AACA,uC;AACA,M;;AAEA,O;AACA,qB;AACA,M;AACA,e;AACA,6B;AACA,2B;AACA,O;AACA,gD;AACA,8C;AACA,+C;AACA,gC;AACA,S;AACA,S;AACA,M;;AAEA,O;AACA,kE;AACA,M;AACA,gC;AACA,8B;AACA,+B;AACA,wB;AACA,O;AACA,mE;AACA,6C;AACA,4D;;AAEA,4D;AACA,sD;AACA,sD;AACA,oE;;AAEA,uD;AACA,uC;;AAEA,6C;AACA,iD;AACA,6C;AACA,4C;AACA,a;;AAEA,kD;AACA,8B;AACA,yC;AACA,+C;AACA,W;;AAEA,4C;AACA,gD;AACA,2D;AACA,qC;AACA,iC;AACA,4C;AACA,a;AACA,kE;;AAEA,2C;AACA,4C;;AAEA,+D;;AAEA,kD;AACA,mC;;AAEA,8B;AACA,oC;AACA,kC;AACA,oC;AACA,wD;AACA,e;AACA,sC;AACA,a;AACA,+C;AACA,0B;AACA,0C;AACA,yC;AACA,gC;;AAEA,+C;AACA,8B;AACA,W;AACA,yB;AACA,mB;AACA,M;;AAEA,O;AACA,iC;AACA,O;AACA,uC;AACA,wC;AACA,wC;AACA,4C;AACA,0C;AACA,qE;;AAEA,4C;;AAEA,oD;AACA,kF;AACA,yD;AACA,0E;AACA,2C;AACA,iD;AACA,2B;AACA,yD;AACA,S;AACA,M;AACA,I;;AAEA,wC;AACA,O;AACA,2B;AACA,M;AACA,e;AACA,2B;AACA,gC;AACA,O;AACA,+C;AACA,8C;AACA,uC;AACA,M;;AAEA,O;AACA,qB;AACA,M;AACA,e;AACA,6B;AACA,2B;AACA,O;AACA,gD;AACA,8C;AACA,+C;AACA,gC;AACA,S;AACA,S;AACA,M;;AAEA,uC;AACA,wC;AACA,4C;;AAEA,oD;AACA,qE;AACA,yD;;AAEA,uC;AACA,sB;AACA,gE;AACA,gB;AACA,2B;AACA,iD;AACA,S;AACA,2B;AACA,yD;AACA,S;AACA,M;;AAEA,O;AACA,wB;AACA,M;AACA,gC;AACA,8B;AACA,wB;AACA,O;AACA,0D;AACA,6C;AACA,8D;;AAEA,4D;AACA,wD;AACA,wD;;AAEA,wD;AACA,iD;AACA,qD;AACA,uC;AACA,yD;AACA,yC;AACA,c;AACA,oB;AACA,Y;;AAEA,4C;AACA,mC;;AAEA,8C;AACA,uC;AACA,a;;AAEA,wD;AACA,oB;AACA,Y;AACA,yC;AACA,sE;AACA,oB;AACA,oC;AACA,a;AACA,Y;AACA,sC;AACA,sC;AACA,6C;AACA,+C;AACA,oC;AACA,gD;AACA,iC;;AAEA,+C;AACA,8B;AACA,W;AACA,yB;AACA,S;AACA,M;AACA,I;;AAEA,uC;AACA,O;AACA,uB;AACA,M;AACA,gC;AACA,8B;AACA,wB;AACA,O;AACA,yD;AACA,6C;AACA,4D;;AAEA,wD;AACA,6B;AACA,yB;AACA,mB;AACA,M;;AAEA,O;AACA,iC;AACA,O;AACA,uC;AACA,wC;AACA,4C;;AAEA,0D;AACA,gE;AACA,yD;AACA,S;AACA,M;AACA,I;;;AAGA,K;AACA,wB;AACA,I;AACA,iB;AACA,uC;AACA,iC;AACA,K;AACA,kC;AACA,O;AACA,c;AACA,O;AACA,kC;AACA,+B;AACA,iC;AACA,qC;AACA,iC;AACA,+B;AACA,uC;AACA,mC;AACA,yC;AACA,qC;AACA,uC;AACA,yC;AACA,sC;AACA,M;;AAEA,6C;AACA,sE;AACA,+B;AACA,4D;AACA,iD;;AAEA,8C;AACA,2C;AACA,yD;AACA,4E;;AAEA,8C;AACA,sC;;AAEA,kD;AACA,M;;AAEA,O;AACA,qB;AACA,M;AACA,kD;AACA,4C;AACA,O;AACA,4C;AACA,6D;AACA,M;;AAEA,O;AACA,8B;AACA,gC;AACA,qC;AACA,0B;AACA,O;AACA,gG;AACA,0B;AACA,8E;AACA,uB;AACA,8B;AACA,S;AACA,0E;AACA,Q;AACA,M;;AAEA,O;AACA,qC;AACA,M;AACA,e;AACA,iC;AACA,4B;AACA,O;AACA,sD;AACA,wC;AACA,4C;AACA,wC;;AAEA,kD;AACA,4C;;AAEA,wC;AACA,oC;AACA,qE;AACA,qC;AACA,c;AACA,4C;AACA,mC;AACA,yF;AACA,mH;AACA,kB;AACA,oE;AACA,wE;AACA,iC;AACA,qH;AACA,e;AACA,W;AACA,W;AACA,O;AACA,M;;AAEA,oB;AACA,S;AACA,mC;AACA,S;AACA,6C;AACA,4C;AACA,Q;;AAEA,S;AACA,mC;AACA,S;AACA,8C;AACA,6C;AACA,Q;;AAEA,S;AACA,mC;AACA,S;AACA,6C;AACA,4C;AACA,Q;;AAEA,S;AACA,mC;AACA,S;AACA,yC;AACA,8C;AACA,Q;;AAEA,S;AACA,mC;AACA,S;AACA,uC;AACA,4C;AACA,O;AACA,M;;AAEA,uC;AACA,6C;AACA,oC;AACA,+B;AACA,O;AACA,M;;AAEA,qD;AACA,sC;AACA,8B;AACA,iF;AACA,kE;AACA,mC;;AAEA,oE;AACA,yB;AACA,kE;AACA,S;;AAEA,2E;AACA,yE;AACA,Y;AACA,M;;AAEA,oC;AACA,+E;AACA,6C;AACA,iD;AACA,+C;AACA,M;;AAEA,wD;AACA,4D;AACA,yD;AACA,wB;AACA,+B;AACA,O;AACA,M;;AAEA,oD;AACA,yD;;AAEA,wB;AACA,gD;AACA,4C;AACA,0C;;AAEA,0D;;AAEA,oE;AACA,oB;AACA,8F;AACA,+E;AACA,iD;AACA,S;;AAEA,qE;AACA,iD;AACA,mB;AACA,0C;AACA,S;;AAEA,iE;AACA,yF;AACA,6D;AACA,gD;AACA,4B;AACA,+D;AACA,iC;AACA,yC;AACA,qD;AACA,iC;AACA,S;;AAEA,wB;AACA,sE;AACA,qE;AACA,2E;AACA,sE;AACA,S;;AAEA,wC;AACA,O;AACA,M;;AAEA,uB;AACA,0D;AACA,yE;AACA,6C;AACA,yE;AACA,4E;AACA,gF;;AAEA,oB;AACA,8D;AACA,wC;AACA,kD;AACA,qB;AACA,2C;AACA,yC;AACA,U;AACA,c;AACA,qB;AACA,2B;AACA,0B;AACA,U;AACA,O;;AAEA,iB;AACA,mD;AACA,kD;AACA,Q;;AAEA,sE;AACA,uD;;AAEA,gE;AACA,uD;AACA,O;;AAEA,gE;AACA,wD;AACA,O;;AAEA,oD;AACA,M;AACA,I;AACA,O;AACA,6B;AACA,M;AACA,iC;AACA,6B;AACA,O;AACA,qD;AACA,wC;AACA,4C;;AAEA,gD;AACA,sB;;AAEA,mB;AACA,gD;AACA,kE;AACA,mD;;AAEA,kB;AACA,sD;AACA,sB;AACA,6B;AACA,S;;AAEA,+C;AACA,wB;AACA,qD;AACA,8D;AACA,uC;AACA,wD;AACA,a;AACA,iD;AACA,0E;AACA,mC;AACA,2C;AACA,uD;AACA,mC;AACA,W;AACA,+C;AACA,iD;AACA,S;AACA,S;AACA,M;;AAEA,O;AACA,0B;AACA,M;AACA,uD;AACA,2E;AACA,O;AACA,kD;AACA,8B;AACA,8B;AACA,gF;AACA,O;AACA,wD;AACA,0E;AACA,kD;AACA,oD;;AAEA,uC;AACA,iD;AACA,gE;AACA,wE;;AAEA,kC;AACA,sD;;AAEA,qD;AACA,6B;AACA,8B;AACA,kE;AACA,0E;;AAEA,gC;AACA,sD;AACA,O;;AAEA,oC;AACA,sE;AACA,qE;AACA,mF;AACA,oB;AACA,qD;AACA,qD;AACA,2C;AACA,6C;AACA,S;;AAEA,+B;AACA,mD;;AAEA,4E;AACA,0B;AACA,mC;AACA,yD;AACA,gC;AACA,yE;AACA,c;AACA,O;;AAEA,gB;AACA,uD;AACA,yD;;AAEA,uE;AACA,2D;AACA,+C;AACA,+B;AACA,iC;AACA,+B;AACA,qC;AACA,iC;AACA,yC;AACA,iC;AACA,iC;AACA,iD;AACA,mC;AACA,6C;AACA,uD;AACA,6C;AACA,S;;AAEA,4D;AACA,2D;AACA,gE;AACA,oD;AACA,4C;;AAEA,+B;AACA,iC;AACA,uC;AACA,W;AACA,W;AACA,O;AACA,M;;AAEA,O;AACA,iC;AACA,M;AACA,uD;AACA,O;AACA,6D;AACA,wC;AACA,4C;AACA,kD;;AAEA,oE;AACA,kE;;AAEA,0C;AACA,+C;AACA,yE;AACA,S;AACA,yE;AACA,S;AACA,oE;;AAEA,kF;AACA,8E;AACA,4E;;AAEA,0E;AACA,M;AACA,8D;AACA,yB;AACA,uF;AACA,gF;AACA,c;AACA,6E;AACA,O;;AAEA,gD;AACA,6B;AACA,yF;AACA,yF;AACA,O;;AAEA,4D;AACA,+C;AACA,qD;AACA,sF;AACA,W;AACA,O;;AAEA,wB;AACA,8D;;AAEA,+B;AACA,wE;AACA,yD;AACA,mD;AACA,S;AACA,O;AACA,M;AACA,M;AACA,kD;AACA,gC;AACA,kC;;AAEA,iC;AACA,gC;AACA,gC;;AAEA,6B;AACA,oC;AACA,mC;AACA,qC;AACA,O;AACA,M;AACA,I;;AAEA,K;AACA,oB;AACA,I;AACA,a;AACA,I;AACA,mC;AACA,K;AACA,8B;;AAEA,O;AACA,gC;AACA,e;AACA,wC;AACA,+C;AACA,iD;AACA,8D;AACA,iD;AACA,+D;AACA,uD;AACA,+C;AACA,O;AACA,+C;AACA,gC;AACA,gC;AACA,gC;AACA,wC;AACA,sC;AACA,8B;;AAEA,sC;AACA,6D;AACA,uD;AACA,yD;AACA,sB;AACA,8D;AACA,0D;AACA,+D;AACA,iE;AACA,8D;AACA,oC;AACA,sB;AACA,iE;AACA,0B;AACA,8B;AACA,M;;AAEA,O;AACA,qC;AACA,e;AACA,oC;AACA,gC;AACA,sC;AACA,sC;AACA,sC;AACA,yC;AACA,O;AACA,2D;AACA,0D;AACA,uC;AACA,M;;AAEA,O;AACA,iC;AACA,e;AACA,gC;AACA,8B;AACA,O;AACA,oD;AACA,mG;AACA,4C;AACA,gD;AACA,yB;AACA,uB;AACA,M;AACA,wD;AACA,sB;AACA,M;;AAEA,O;AACA,gC;AACA,M;AACA,gC;AACA,iC;AACA,2B;AACA,kC;AACA,O;AACA,+D;AACA,0E;AACA,6C;AACA,gD;AACA,2B;AACA,iD;AACA,8G;AACA,mE;AACA,gC;AACA,sB;AACA,iE;AACA,4B;AACA,wE;AACA,sB;AACA,2B;AACA,yB;AACA,sB;AACA,M;;AAEA,yB;AACA,yC;AACA,gE;AACA,mC;AACA,kC;AACA,oB;AACA,W;AACA,Q;AACA,sC;AACA,2D;AACA,kC;AACA,gC;AACA,oB;AACA,W;AACA,Q;AACA,uC;AACA,gE;AACA,gE;AACA,+H;AACA,oF;AACA,sF;AACA,mC;AACA,8E;AACA,+B;AACA,4D;AACA,kC;AACA,4B;AACA,W;AACA,Q;AACA,uC;AACA,iE;AACA,2D;AACA,4F;AACA,oB;AACA,yD;AACA,2D;AACA,sB;AACA,6B;AACA,e;;AAEA,4D;AACA,kC;AACA,kE;AACA,W;AACA,Q;AACA,0C;AACA,8B;AACA,iE;AACA,4F;AACA,wB;AACA,W;AACA,+B;AACA,2H;AACA,kF;AACA,oC;AACA,e;;AAEA,4E;AACA,2F;AACA,U;AACA,4D;AACA,yC;AACA,+B;AACA,iC;AACA,gC;AACA,kE;AACA,W;AACA,Q;AACA,0C;AACA,iE;AACA,yF;AACA,8D;AACA,oC;AACA,e;;AAEA,oE;AACA,iC;AACA,gC;AACA,kE;AACA,W;AACA,Q;AACA,uC;AACA,6H;AACA,uD;AACA,yC;AACA,mC;AACA,yB;AACA,yC;AACA,W;;AAEA,qD;AACA,iC;AACA,sD;AACA,oG;AACA,qF;AACA,gG;AACA,0D;AACA,uC;AACA,qG;AACA,qC;AACA,sD;AACA,oG;AACA,4I;AACA,0D;AACA,uC;AACA,qG;AACA,qC;AACA,kC;AACA,+B;;AAEA,wC;AACA,iC;AACA,4B;AACA,W;;AAEA,wC;AACA,Q;AACA,sC;AACA,2D;AACA,wB;AACA,+B;AACA,W;AACA,Q;AACA,wC;AACA,6D;AACA,0B;AACA,iC;AACA,W;AACA,Q;AACA,2C;AACA,gE;AACA,6B;AACA,oC;AACA,W;AACA,Q;AACA,sC;AACA,qD;AACA,iC;AACA,wC;AACA,W;AACA,Q;AACA,oC;AACA,mD;AACA,+B;AACA,sC;AACA,W;AACA,Q;AACA,kC;AACA,iD;AACA,6B;AACA,oC;AACA,W;AACA,Q;AACA,uC;AACA,6D;AACA,gC;AACA,gC;AACA,W;AACA,Q;AACA,oC;AACA,8D;AACA,uC;AACA,qC;AACA,W;AACA,Q;AACA,oC;AACA,8D;AACA,qC;AACA,mC;AACA,W;AACA,Q;AACA,2C;AACA,2E;AACA,qC;AACA,8B;AACA,W;AACA,+E;AACA,uC;AACA,gC;AACA,W;AACA,6E;AACA,sC;AACA,+B;AACA,W;AACA,iF;AACA,wC;AACA,8B;AACA,W;;AAEA,2E;AACA,wC;AACA,0B;AACA,W;AACA,yE;AACA,uC;AACA,yB;AACA,W;;AAEA,sD;AACA,+D;AACA,oF;AACA,mC;AACA,8D;AACA,yD;AACA,mC;AACA,gC;;AAEA,iE;AACA,0C;AACA,4B;AACA,W;AACA,Q;AACA,wC;AACA,mE;AACA,uG;AACA,kF;AACA,oC;AACA,e;;AAEA,kE;AACA,kC;AACA,kE;AACA,W;;AAEA,Q;AACA,sC;AACA,+D;AACA,kC;AACA,mC;AACA,oB;AACA,W;AACA,Q;AACA,4C;AACA,iE;AACA,8B;AACA,wC;AACA,W;AACA,Q;AACA,0C;AACA,2D;AACA,4B;AACA,sC;AACA,W;AACA,Q;AACA,sC;AACA,2D;AACA,wB;AACA,kC;AACA,W;AACA,Q;AACA,sC;AACA,6D;AACA,wB;AACA,kC;AACA,W;AACA,Q;AACA,oC;AACA,4D;AACA,wC;AACA,+B;AACA,W;AACA,O;AACA,M;;AAEA,gD;AACA,wC;AACA,qE;AACA,gC;AACA,kC;AACA,oB;AACA,W;AACA,yE;AACA,kC;AACA,yB;AACA,W;AACA,wG;AACA,6D;AACA,mD;AACA,+B;AACA,wD;AACA,Q;;AAEA,yC;AACA,kF;AACA,uC;AACA,0B;AACA,oB;AACA,W;AACA,iF;AACA,uC;AACA,0B;AACA,sB;AACA,W;AACA,oF;AACA,0C;AACA,0B;AACA,uB;AACA,W;;AAEA,2E;AACA,sC;AACA,2B;AACA,uB;AACA,W;AACA,6E;AACA,uC;AACA,2B;AACA,wB;AACA,W;AACA,iF;AACA,sC;AACA,2B;AACA,uB;AACA,W;;AAEA,0E;AACA,yC;AACA,8B;AACA,8B;AACA,W;AACA,2E;AACA,wC;AACA,8B;AACA,6B;AACA,W;AACA,+E;AACA,2C;AACA,8B;AACA,gC;AACA,W;AACA,sE;AACA,sC;AACA,8B;AACA,mB;AACA,W;;AAEA,0E;AACA,mC;AACA,+B;AACA,uB;AACA,W;;AAEA,sG;AACA,uG;AACA,0H;AACA,0E;AACA,yD;AACA,Q;;AAEA,uC;AACA,oC;AACA,+E;AACA,8C;AACA,U;AACA,0E;AACA,0E;AACA,uE;;AAEA,mD;AACA,Y;AACA,mC;AACA,W;AACA,kC;AACA,S;;AAEA,mE;AACA,Q;;AAEA,2D;AACA,M;AACA,4C;AACA,6C;AACA,M;AACA,4B;AACA,6C;AACA,O;AACA,M;AACA,0B;AACA,M;;AAEA,kC;AACA,0C;AACA,uD;AACA,kE;AACA,4E;AACA,4E;AACA,4E;AACA,4E;AACA,oE;AACA,yB;AACA,sB;AACA,M;;AAEA,O;AACA,8B;AACA,4B;AACA,2B;AACA,O;AACA,8C;AACA,iE;AACA,oB;;AAEA,2B;AACA,qC;AACA,oB;AACA,0E;AACA,0E;AACA,c;AACA,S;AACA,O;;AAEA,gI;AACA,uH;AACA,M;;AAEA,2C;AACA,kB;AACA,+C;AACA,iD;AACA,oD;AACA,gD;AACA,Q;;AAEA,6D;AACA,M;;AAEA,6C;AACA,kB;AACA,kD;AACA,sD;AACA,sD;AACA,uD;AACA,kD;AACA,Q;;AAEA,qD;AACA,M;;AAEA,2C;AACA,kB;AACA,wD;AACA,0D;AACA,yD;AACA,2D;AACA,0D;AACA,2D;AACA,Q;;AAEA,kE;AACA,M;;AAEA,4C;AACA,kB;AACA,qD;AACA,iD;AACA,iD;AACA,iD;AACA,iD;AACA,iD;AACA,gD;AACA,Q;;AAEA,4D;AACA,M;;AAEA,sD;AACA,wC;AACA,oB;;AAEA,kC;AACA,4C;AACA,wD;AACA,S;AACA,O;;AAEA,wD;AACA,M;;AAEA,qD;AACA,kF;AACA,sB;AACA,gF;AACA,6E;AACA,+E;AACA,4E;AACA,Q;;AAEA,8B;AACA,8F;AACA,O;;AAEA,oD;AACA,2E;AACA,sB;AACA,M;;AAEA,2C;AACA,gE;AACA,M;;AAEA,yB;AACA,uC;AACA,iC;AACA,2C;AACA,yF;AACA,mG;AACA,wD;AACA,uG;AACA,S;;AAEA,sF;AACA,0E;AACA,yH;AACA,sC;AACA,6B;AACA,yD;AACA,8D;AACA,yF;AACA,4B;AACA,oI;AACA,+E;AACA,Q;;AAEA,sC;AACA,yD;AACA,uE;AACA,yF;AACA,6B;AACA,yD;AACA,6D;AACA,wF;AACA,6B;AACA,gD;AACA,+C;AACA,uE;AACA,oD;AACA,mC;AACA,kC;AACA,qB;AACA,kI;AACA,6E;AACA,Q;;AAEA,sC;AACA,yH;AACA,+E;AACA,sH;AACA,8C;AACA,4F;AACA,oG;AACA,uG;AACA,0B;AACA,2D;AACA,O;AACA,M;;AAEA,+C;AACA,uB;;AAEA,uD;AACA,4C;AACA,S;;AAEA,8D;AACA,M;;AAEA,oC;AACA,6C;AACA,oD;AACA,oD;AACA,oD;AACA,sB;AACA,M;;AAEA,4C;AACA,wB;AACA,4D;AACA,O;;AAEA,2C;AACA,sC;AACA,4C;AACA,8C;AACA,M;;AAEA,O;AACA,oB;AACA,M;AACA,iC;AACA,6B;AACA,mC;AACA,O;AACA,mE;AACA,qD;AACA,+C;;AAEA,yC;AACA,4B;AACA,2D;AACA,wB;AACA,8C;AACA,iE;AACA,a;AACA,S;AACA,2C;AACA,sD;AACA,kB;AACA,0B;AACA,yB;AACA,sC;AACA,kC;AACA,gC;AACA,S;AACA,M;;AAEA,oB;AACA,wD;AACA,qC;AACA,+D;AACA,+E;AACA,iC;AACA,2E;AACA,sC;AACA,2B;AACA,0E;AACA,oC;AACA,yG;AACA,wD;AACA,mD;AACA,8C;AACA,uF;AACA,W;AACA,6F;AACA,S;AACA,gD;AACA,S;AACA,M;;AAEA,O;AACA,0C;AACA,M;AACA,8B;AACA,8B;AACA,O;AACA,8D;AACA,sC;AACA,8D;AACA,+B;;AAEA,wD;AACA,oB;AACA,kC;AACA,+B;AACA,S;;AAEA,+B;;AAEA,uB;AACA,uD;AACA,2C;AACA,gD;AACA,8B;AACA,sC;AACA,uC;;AAEA,sB;AACA,oC;AACA,0C;AACA,8C;AACA,6B;;AAEA,sB;AACA,qD;AACA,0C;AACA,8C;AACA,qE;AACA,gD;AACA,S;AACA,6B;AACA,M;;AAEA,O;AACA,6C;AACA,M;AACA,8B;AACA,8B;AACA,O;AACA,4D;AACA,sC;;AAEA,yB;AACA,yD;AACA,0B;AACA,qC;AACA,O;;AAEA,iC;AACA,+B;AACA,8H;AACA,O;;AAEA,2B;AACA,uD;AACA,wG;AACA,8B;AACA,2B;AACA,yC;AACA,O;AACA,8B;AACA,iD;AACA,O;AACA,2E;AACA,wB;AACA,wD;AACA,O;;AAEA,wC;;AAEA,2B;AACA,yE;;AAEA,0B;AACA,mE;AACA,0E;AACA,gD;AACA,mD;;AAEA,2E;AACA,8E;AACA,0D;AACA,qE;AACA,sD;;AAEA,yD;AACA,yH;AACA,iC;AACA,S;AACA,gC;AACA,O;AACA,M;AACA,kC;AACA,8D;AACA,uC;AACA,gD;;AAEA,0B;AACA,0E;AACA,uC;AACA,sC;;AAEA,0C;AACA,yC;;AAEA,yB;AACA,wE;AACA,qE;AACA,gD;AACA,S;;AAEA,2B;AACA,yG;;AAEA,gC;AACA,mC;AACA,qB;AACA,M;;AAEA,6C;AACA,2D;AACA,M;;AAEA,oD;AACA,gD;AACA,uB;AACA,0D;AACA,8B;AACA,c;AACA,mB;AACA,O;AACA,M;;AAEA,O;AACA,+B;AACA,M;AACA,8B;AACA,8B;AACA,O;AACA,qD;AACA,4B;AACA,qD;AACA,c;AACA,mD;AACA,O;AACA,M;;AAEA,O;AACA,qC;AACA,M;AACA,4C;AACA,uB;AACA,O;AACA,oD;AACA,uD;AACA,4B;AACA,e;AACA,O;;AAEA,mC;AACA,sC;;AAEA,0C;AACA,M;;AAEA,O;AACA,mB;AACA,M;AACA,4C;AACA,iC;AACA,8B;AACA,M;AACA,O;AACA,iE;AACA,4B;AACA,4D;AACA,iD;;AAEA,sC;AACA,qC;AACA,qC;AACA,c;AACA,mD;;AAEA,qC;AACA,uB;AACA,O;AACA,M;;AAEA,O;AACA,M;AACA,uB;AACA,+G;AACA,2H;AACA,4H;AACA,O;AACA,oC;AACA,c;AACA,0B;AACA,kC;AACA,yB;AACA,Q;AACA,M;;AAEA,O;AACA,6B;AACA,M;AACA,uC;AACA,mH;AACA,O;AACA,sD;AACA,uC;AACA,M;;AAEA,O;AACA,M;AACA,2B;AACA,4F;AACA,O;AACA,sD;AACA,uC;AACA,M;AACA,I;;;AAGA,oC;AACA,K;AACA,yB;AACA,K;AACA,2B;AACA,K;AACA,oB;AACA,iB;AACA,K;AACA,K;AACA,oC;;AAEA,6B;AACA,4B;AACA,4B;AACA,yB;AACA,mC;;AAEA,gC;AACA,wC;;AAEA,0B;AACA,+B;AACA,uB;AACA,mC;AACA,+B;AACA,Q;AACA,+B;AACA,yC;AACA,oC;AACA,yC;AACA,O;AACA,W;AACA,mB;AACA,e;AACA,kB;AACA,M;AACA,Q;AACA,0B;AACA,0C;AACA,4C;AACA,O;AACA,W;AACA,+B;AACA,qB;AACA,gE;AACA,2E;AACA,iB;AACA,iB;AACA,S;AACA,U;AACA,O;AACA,2C;AACA,uD;AACA,sC;AACA,O;AACA,qB;;AAEA,gB;AACA,K;;AAEA,K;AACA,sB;AACA,I;AACA,8B;AACA,K;AACA,sC;AACA,I;AACA,sB;AACA,Q;AACA,+B;AACA,oD;AACA,K;AACA,uB;AACA,6B;AACA,oB;AACA,oD;AACA,+C;AACA,kE;AACA,wD;AACA,kE;AACA,oC;AACA,+D;AACA,oD;AACA,+B;AACA,8B;AACA,a;AACA,S;AACA,Y;AACA,S;AACA,mB;AACA,mD;AACA,sC;AACA,a;AACA,e;AACA,Q;AACA,S;AACA,gC;AACA,K;AACA,S;AACA,iC;AACA,W;AACA,mB;AACA,mD;AACA,kC;AACA,S;AACA,e;AACA,W;AACA,Q;AACA,M;AACA,M;AACA,2B;AACA,qG;AACA,qG;AACA,4E;AACA,4D;AACA,iE;AACA,K;AACA,8C;;AAEA,uB;AACA,sC;;AAEA,yB;AACA,sD;AACA,6C;AACA,S;AACA,K;;AAEA,yB;AACA,sD;AACA,6C;AACA,S;AACA,K;;AAEA,wB;AACA,oD;AACA,gD;AACA,S;AACA,K;;AAEA,uB;AACA,oD;AACA,wC;AACA,oD;AACA,S;AACA,S;AACA,K;;AAEA,yB;AACA,qD;AACA,K;AACA,I;;AAEA,I;AACA,gB;AACA,K;AACA,e;AACA,O;AACA,c;AACA,4B;AACA,oE;AACA,O;AACA,U;AACA,oD;AACA,U;AACA,S;AACA,mB;AACA,uE;AACA,qB;AACA,O;AACA,6B;AACA,oC;AACA,6D;AACA,kC;AACA,8C;AACA,kD;AACA,4C;;AAEA,wD;AACA,8D;AACA,4D;;AAEA,8E;AACA,kD;AACA,yG;;AAEA,wC;AACA,gC;;AAEA,sE;AACA,+C;AACA,kD;;AAEA,kE;;AAEA,mD;AACA,8D;;AAEA,S;AACA,S;;AAEA,yB;AACA,kE;AACA,yB;AACA,O;;AAEA,gC;AACA,0B;AACA,+D;;AAEA,uB;AACA,kC;AACA,gE;AACA,qD;;AAEA,wD;AACA,6E;AACA,iE;AACA,mC;AACA,kE;AACA,wC;AACA,S;AACA,O;;AAEA,kB;AACA,M;;AAEA,O;AACA,e;AACA,O;AACA,sE;AACA,M;AACA,sB;AACA,U;AACA,6C;AACA,U;AACA,sB;AACA,M;AACA,U;AACA,mC;AACA,U;AACA,M;AACA,oB;AACA,4D;AACA,0E;AACA,O;AACA,2B;AACA,sC;AACA,+B;AACA,mC;AACA,8B;AACA,iB;AACA,S;;AAEA,gE;AACA,4D;;AAEA,4C;AACA,mF;AACA,2D;AACA,0D;AACA,2D;AACA,S;AACA,kC;AACA,O;;AAEA,sC;AACA,sC;AACA,kE;AACA,4D;AACA,wB;AACA,+B;AACA,S;AACA,S;;AAEA,kB;AACA,M;;AAEA,O;AACA,c;AACA,O;AACA,2D;AACA,M;AACA,mB;AACA,qB;AACA,O;AACA,0B;AACA,wC;AACA,gC;;AAEA,+C;AACA,iB;AACA,S;;AAEA,0D;AACA,oD;;AAEA,2C;AACA,sD;AACA,S;;AAEA,kB;AACA,K;AACA,K;AACA,I","file":"/packages/summernote_summernote.js","sourcesContent":["/**\n * Super simple wysiwyg editor on Bootstrap v0.6.5\n * http://summernote.org/\n *\n * summernote.js\n * Copyright 2013-2015 Alan Hong. and other contributors\n * summernote may be freely distributed under the MIT license./\n *\n * Date: 2015-04-26T03:30Z\n */\n(function (factory) {\n  /* global define */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['jquery'], factory);\n  } else {\n    // Browser globals: jQuery\n    factory(window.jQuery);\n  }\n}(function ($) {\n  \n\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Array.prototype.reduce polyfill\n     *\n     * @param {Function} callback\n     * @param {Value} [initialValue]\n     * @return {Value}\n     *\n     * @see http://goo.gl/WNriQD\n     */\n    Array.prototype.reduce = function (callback) {\n      var t = Object(this), len = t.length >>> 0, k = 0, value;\n      if (arguments.length === 2) {\n        value = arguments[1];\n      } else {\n        while (k < len && !(k in t)) {\n          k++;\n        }\n        if (k >= len) {\n          throw new TypeError('Reduce of empty array with no initial value');\n        }\n        value = t[k++];\n      }\n      for (; k < len; k++) {\n        if (k in t) {\n          value = callback(value, t[k], k, t);\n        }\n      }\n      return value;\n    };\n  }\n\n  if ('function' !== typeof Array.prototype.filter) {\n    /**\n     * Array.prototype.filter polyfill\n     *\n     * @param {Function} func\n     * @return {Array}\n     *\n     * @see http://goo.gl/T1KFnq\n     */\n    Array.prototype.filter = function (func) {\n      var t = Object(this), len = t.length >>> 0;\n\n      var res = [];\n      var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n      for (var i = 0; i < len; i++) {\n        if (i in t) {\n          var val = t[i];\n          if (func.call(thisArg, val, i, t)) {\n            res.push(val);\n          }\n        }\n      }\n  \n      return res;\n    };\n  }\n\n  var isSupportAmd = typeof define === 'function' && define.amd;\n\n  /**\n   * returns whether font is installed or not.\n   *\n   * @param {String} fontName\n   * @return {Boolean}\n   */\n  var isFontInstalled = function (fontName) {\n    var testFontName = fontName === 'Comic Sans MS' ? 'Courier New' : 'Comic Sans MS';\n    var $tester = $('<div>').css({\n      position: 'absolute',\n      left: '-9999px',\n      top: '-9999px',\n      fontSize: '200px'\n    }).text('mmmmmmmmmwwwwwww').appendTo(document.body);\n\n    var originalWidth = $tester.css('fontFamily', testFontName).width();\n    var width = $tester.css('fontFamily', fontName + ',' + testFontName).width();\n\n    $tester.remove();\n\n    return originalWidth !== width;\n  };\n\n  /**\n   * @class core.agent\n   *\n   * Object which check platform and agent\n   *\n   * @singleton\n   * @alternateClassName agent\n   */\n  var agent = {\n    /** @property {Boolean} [isMac=false] true if this agent is Mac  */\n    isMac: navigator.appVersion.indexOf('Mac') > -1,\n    /** @property {Boolean} [isMSIE=false] true if this agent is a Internet Explorer  */\n    isMSIE: navigator.userAgent.indexOf('MSIE') > -1 || navigator.userAgent.indexOf('Trident') > -1,\n    /** @property {Boolean} [isFF=false] true if this agent is a Firefox  */\n    isFF: navigator.userAgent.indexOf('Firefox') > -1,\n    /** @property {String} jqueryVersion current jQuery version string  */\n    jqueryVersion: parseFloat($.fn.jquery),\n    isSupportAmd: isSupportAmd,\n    hasCodeMirror: isSupportAmd ? require.specified('CodeMirror') : !!window.CodeMirror,\n    isFontInstalled: isFontInstalled,\n    isW3CRangeSupport: !!document.createRange\n  };\n\n  /**\n   * @class core.func\n   *\n   * func utils (for high-order func's arg)\n   *\n   * @singleton\n   * @alternateClassName func\n   */\n  var func = (function () {\n    var eq = function (itemA) {\n      return function (itemB) {\n        return itemA === itemB;\n      };\n    };\n\n    var eq2 = function (itemA, itemB) {\n      return itemA === itemB;\n    };\n\n    var peq2 = function (propName) {\n      return function (itemA, itemB) {\n        return itemA[propName] === itemB[propName];\n      };\n    };\n\n    var ok = function () {\n      return true;\n    };\n\n    var fail = function () {\n      return false;\n    };\n\n    var not = function (f) {\n      return function () {\n        return !f.apply(f, arguments);\n      };\n    };\n\n    var and = function (fA, fB) {\n      return function (item) {\n        return fA(item) && fB(item);\n      };\n    };\n\n    var self = function (a) {\n      return a;\n    };\n\n    var idCounter = 0;\n\n    /**\n     * generate a globally-unique id\n     *\n     * @param {String} [prefix]\n     */\n    var uniqueId = function (prefix) {\n      var id = ++idCounter + '';\n      return prefix ? prefix + id : id;\n    };\n\n    /**\n     * returns bnd (bounds) from rect\n     *\n     * - IE Compatability Issue: http://goo.gl/sRLOAo\n     * - Scroll Issue: http://goo.gl/sNjUc\n     *\n     * @param {Rect} rect\n     * @return {Object} bounds\n     * @return {Number} bounds.top\n     * @return {Number} bounds.left\n     * @return {Number} bounds.width\n     * @return {Number} bounds.height\n     */\n    var rect2bnd = function (rect) {\n      var $document = $(document);\n      return {\n        top: rect.top + $document.scrollTop(),\n        left: rect.left + $document.scrollLeft(),\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n      };\n    };\n\n    /**\n     * returns a copy of the object where the keys have become the values and the values the keys.\n     * @param {Object} obj\n     * @return {Object}\n     */\n    var invertObject = function (obj) {\n      var inverted = {};\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          inverted[obj[key]] = key;\n        }\n      }\n      return inverted;\n    };\n\n    /**\n     * @param {String} namespace\n     * @param {String} [prefix]\n     * @return {String}\n     */\n    var namespaceToCamel = function (namespace, prefix) {\n      prefix = prefix || '';\n      return prefix + namespace.split('.').map(function (name) {\n        return name.substring(0, 1).toUpperCase() + name.substring(1);\n      }).join('');\n    };\n\n    return {\n      eq: eq,\n      eq2: eq2,\n      peq2: peq2,\n      ok: ok,\n      fail: fail,\n      self: self,\n      not: not,\n      and: and,\n      uniqueId: uniqueId,\n      rect2bnd: rect2bnd,\n      invertObject: invertObject,\n      namespaceToCamel: namespaceToCamel\n    };\n  })();\n\n  /**\n   * @class core.list\n   *\n   * list utils\n   *\n   * @singleton\n   * @alternateClassName list\n   */\n  var list = (function () {\n    /**\n     * returns the first item of an array.\n     *\n     * @param {Array} array\n     */\n    var head = function (array) {\n      return array[0];\n    };\n\n    /**\n     * returns the last item of an array.\n     *\n     * @param {Array} array\n     */\n    var last = function (array) {\n      return array[array.length - 1];\n    };\n\n    /**\n     * returns everything but the last entry of the array.\n     *\n     * @param {Array} array\n     */\n    var initial = function (array) {\n      return array.slice(0, array.length - 1);\n    };\n\n    /**\n     * returns the rest of the items in an array.\n     *\n     * @param {Array} array\n     */\n    var tail = function (array) {\n      return array.slice(1);\n    };\n\n    /**\n     * returns item of array\n     */\n    var find = function (array, pred) {\n      for (var idx = 0, len = array.length; idx < len; idx ++) {\n        var item = array[idx];\n        if (pred(item)) {\n          return item;\n        }\n      }\n    };\n\n    /**\n     * returns true if all of the values in the array pass the predicate truth test.\n     */\n    var all = function (array, pred) {\n      for (var idx = 0, len = array.length; idx < len; idx ++) {\n        if (!pred(array[idx])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    /**\n     * returns true if the value is present in the list.\n     */\n    var contains = function (array, item) {\n      return $.inArray(item, array) !== -1;\n    };\n\n    /**\n     * get sum from a list\n     *\n     * @param {Array} array - array\n     * @param {Function} fn - iterator\n     */\n    var sum = function (array, fn) {\n      fn = fn || func.self;\n      return array.reduce(function (memo, v) {\n        return memo + fn(v);\n      }, 0);\n    };\n  \n    /**\n     * returns a copy of the collection with array type.\n     * @param {Collection} collection - collection eg) node.childNodes, ...\n     */\n    var from = function (collection) {\n      var result = [], idx = -1, length = collection.length;\n      while (++idx < length) {\n        result[idx] = collection[idx];\n      }\n      return result;\n    };\n  \n    /**\n     * cluster elements by predicate function.\n     *\n     * @param {Array} array - array\n     * @param {Function} fn - predicate function for cluster rule\n     * @param {Array[]}\n     */\n    var clusterBy = function (array, fn) {\n      if (!array.length) { return []; }\n      var aTail = tail(array);\n      return aTail.reduce(function (memo, v) {\n        var aLast = last(memo);\n        if (fn(last(aLast), v)) {\n          aLast[aLast.length] = v;\n        } else {\n          memo[memo.length] = [v];\n        }\n        return memo;\n      }, [[head(array)]]);\n    };\n  \n    /**\n     * returns a copy of the array with all falsy values removed\n     *\n     * @param {Array} array - array\n     * @param {Function} fn - predicate function for cluster rule\n     */\n    var compact = function (array) {\n      var aResult = [];\n      for (var idx = 0, len = array.length; idx < len; idx ++) {\n        if (array[idx]) { aResult.push(array[idx]); }\n      }\n      return aResult;\n    };\n\n    /**\n     * produces a duplicate-free version of the array\n     *\n     * @param {Array} array\n     */\n    var unique = function (array) {\n      var results = [];\n\n      for (var idx = 0, len = array.length; idx < len; idx ++) {\n        if (!contains(results, array[idx])) {\n          results.push(array[idx]);\n        }\n      }\n\n      return results;\n    };\n\n    /**\n     * returns next item.\n     * @param {Array} array\n     */\n    var next = function (array, item) {\n      var idx = array.indexOf(item);\n      if (idx === -1) { return null; }\n\n      return array[idx + 1];\n    };\n\n    /**\n     * returns prev item.\n     * @param {Array} array\n     */\n    var prev = function (array, item) {\n      var idx = array.indexOf(item);\n      if (idx === -1) { return null; }\n\n      return array[idx - 1];\n    };\n\n  \n    return { head: head, last: last, initial: initial, tail: tail,\n             prev: prev, next: next, find: find, contains: contains,\n             all: all, sum: sum, from: from,\n             clusterBy: clusterBy, compact: compact, unique: unique };\n  })();\n\n\n  var NBSP_CHAR = String.fromCharCode(160);\n  var ZERO_WIDTH_NBSP_CHAR = '\\ufeff';\n\n  /**\n   * @class core.dom\n   *\n   * Dom functions\n   *\n   * @singleton\n   * @alternateClassName dom\n   */\n  var dom = (function () {\n    /**\n     * @method isEditable\n     *\n     * returns whether node is `note-editable` or not.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n    var isEditable = function (node) {\n      return node && $(node).hasClass('note-editable');\n    };\n\n    /**\n     * @method isControlSizing\n     *\n     * returns whether node is `note-control-sizing` or not.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n    var isControlSizing = function (node) {\n      return node && $(node).hasClass('note-control-sizing');\n    };\n\n    /**\n     * @method  buildLayoutInfo\n     *\n     * build layoutInfo from $editor(.note-editor)\n     *\n     * @param {jQuery} $editor\n     * @return {Object}\n     * @return {Function} return.editor\n     * @return {Node} return.dropzone\n     * @return {Node} return.toolbar\n     * @return {Node} return.editable\n     * @return {Node} return.codable\n     * @return {Node} return.popover\n     * @return {Node} return.handle\n     * @return {Node} return.dialog\n     */\n    var buildLayoutInfo = function ($editor) {\n      var makeFinder;\n\n      // air mode\n      if ($editor.hasClass('note-air-editor')) {\n        var id = list.last($editor.attr('id').split('-'));\n        makeFinder = function (sIdPrefix) {\n          return function () { return $(sIdPrefix + id); };\n        };\n\n        return {\n          editor: function () { return $editor; },\n          holder : function () { return $editor.data('holder'); },\n          editable: function () { return $editor; },\n          popover: makeFinder('#note-popover-'),\n          handle: makeFinder('#note-handle-'),\n          dialog: makeFinder('#note-dialog-')\n        };\n\n        // frame mode\n      } else {\n        makeFinder = function (sClassName) {\n          return function () { return $editor.find(sClassName); };\n        };\n        return {\n          editor: function () { return $editor; },\n          holder : function () { return $editor.data('holder'); },\n          dropzone: makeFinder('.note-dropzone'),\n          toolbar: makeFinder('.note-toolbar'),\n          editable: makeFinder('.note-editable'),\n          codable: makeFinder('.note-codable'),\n          statusbar: makeFinder('.note-statusbar'),\n          popover: makeFinder('.note-popover'),\n          handle: makeFinder('.note-handle'),\n          dialog: makeFinder('.note-dialog')\n        };\n      }\n    };\n\n    /**\n     * returns makeLayoutInfo from editor's descendant node.\n     *\n     * @private\n     * @param {Node} descendant\n     * @return {Object}\n     */\n    var makeLayoutInfo = function (descendant) {\n      var $target = $(descendant).closest('.note-editor, .note-air-editor, .note-air-layout');\n\n      if (!$target.length) {\n        return null;\n      }\n\n      var $editor;\n      if ($target.is('.note-editor, .note-air-editor')) {\n        $editor = $target;\n      } else {\n        $editor = $('#note-editor-' + list.last($target.attr('id').split('-')));\n      }\n\n      return buildLayoutInfo($editor);\n    };\n\n    /**\n     * @method makePredByNodeName\n     *\n     * returns predicate which judge whether nodeName is same\n     *\n     * @param {String} nodeName\n     * @return {Function}\n     */\n    var makePredByNodeName = function (nodeName) {\n      nodeName = nodeName.toUpperCase();\n      return function (node) {\n        return node && node.nodeName.toUpperCase() === nodeName;\n      };\n    };\n\n    /**\n     * @method isText\n     *\n     *\n     *\n     * @param {Node} node\n     * @return {Boolean} true if node's type is text(3)\n     */\n    var isText = function (node) {\n      return node && node.nodeType === 3;\n    };\n\n    /**\n     * ex) br, col, embed, hr, img, input, ...\n     * @see http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n     */\n    var isVoid = function (node) {\n      return node && /^BR|^IMG|^HR/.test(node.nodeName.toUpperCase());\n    };\n\n    var isPara = function (node) {\n      if (isEditable(node)) {\n        return false;\n      }\n\n      // Chrome(v31.0), FF(v25.0.1) use DIV for paragraph\n      return node && /^DIV|^P|^LI|^H[1-7]/.test(node.nodeName.toUpperCase());\n    };\n\n    var isLi = makePredByNodeName('LI');\n\n    var isPurePara = function (node) {\n      return isPara(node) && !isLi(node);\n    };\n\n    var isTable = makePredByNodeName('TABLE');\n\n    var isInline = function (node) {\n      return !isBodyContainer(node) &&\n             !isList(node) &&\n             !isPara(node) &&\n             !isTable(node) &&\n             !isBlockquote(node);\n    };\n\n    var isList = function (node) {\n      return node && /^UL|^OL/.test(node.nodeName.toUpperCase());\n    };\n\n    var isCell = function (node) {\n      return node && /^TD|^TH/.test(node.nodeName.toUpperCase());\n    };\n\n    var isBlockquote = makePredByNodeName('BLOCKQUOTE');\n\n    var isBodyContainer = function (node) {\n      return isCell(node) || isBlockquote(node) || isEditable(node);\n    };\n\n    var isAnchor = makePredByNodeName('A');\n\n    var isParaInline = function (node) {\n      return isInline(node) && !!ancestor(node, isPara);\n    };\n\n    var isBodyInline = function (node) {\n      return isInline(node) && !ancestor(node, isPara);\n    };\n\n    var isBody = makePredByNodeName('BODY');\n\n    /**\n     * returns whether nodeB is closest sibling of nodeA\n     *\n     * @param {Node} nodeA\n     * @param {Node} nodeB\n     * @return {Boolean}\n     */\n    var isClosestSibling = function (nodeA, nodeB) {\n      return nodeA.nextSibling === nodeB ||\n             nodeA.previousSibling === nodeB;\n    };\n\n    /**\n     * returns array of closest siblings with node\n     *\n     * @param {Node} node\n     * @param {function} [pred] - predicate function\n     * @return {Node[]}\n     */\n    var withClosestSiblings = function (node, pred) {\n      pred = pred || func.ok;\n\n      var siblings = [];\n      if (node.previousSibling && pred(node.previousSibling)) {\n        siblings.push(node.previousSibling);\n      }\n      siblings.push(node);\n      if (node.nextSibling && pred(node.nextSibling)) {\n        siblings.push(node.nextSibling);\n      }\n      return siblings;\n    };\n\n    /**\n     * blank HTML for cursor position\n     * - [workaround] for MSIE IE doesn't works with bogus br\n     */\n    var blankHTML = agent.isMSIE ? '&nbsp;' : '<br>';\n\n    /**\n     * @method nodeLength\n     *\n     * returns #text's text size or element's childNodes size\n     *\n     * @param {Node} node\n     */\n    var nodeLength = function (node) {\n      if (isText(node)) {\n        return node.nodeValue.length;\n      }\n\n      return node.childNodes.length;\n    };\n\n    /**\n     * returns whether node is empty or not.\n     *\n     * @param {Node} node\n     * @return {Boolean}\n     */\n    var isEmpty = function (node) {\n      var len = nodeLength(node);\n\n      if (len === 0) {\n        return true;\n      } else if (!dom.isText(node) && len === 1 && node.innerHTML === blankHTML) {\n        // ex) <p><br></p>, <span><br></span>\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * padding blankHTML if node is empty (for cursor position)\n     */\n    var paddingBlankHTML = function (node) {\n      if (!isVoid(node) && !nodeLength(node)) {\n        node.innerHTML = blankHTML;\n      }\n    };\n\n    /**\n     * find nearest ancestor predicate hit\n     *\n     * @param {Node} node\n     * @param {Function} pred - predicate function\n     */\n    var ancestor = function (node, pred) {\n      while (node) {\n        if (pred(node)) { return node; }\n        if (isEditable(node)) { break; }\n\n        node = node.parentNode;\n      }\n      return null;\n    };\n\n    /**\n     * find nearest ancestor only single child blood line and predicate hit\n     *\n     * @param {Node} node\n     * @param {Function} pred - predicate function\n     */\n    var singleChildAncestor = function (node, pred) {\n      node = node.parentNode;\n\n      while (node) {\n        if (nodeLength(node) !== 1) { break; }\n        if (pred(node)) { return node; }\n        if (isEditable(node)) { break; }\n\n        node = node.parentNode;\n      }\n      return null;\n    };\n\n    /**\n     * returns new array of ancestor nodes (until predicate hit).\n     *\n     * @param {Node} node\n     * @param {Function} [optional] pred - predicate function\n     */\n    var listAncestor = function (node, pred) {\n      pred = pred || func.fail;\n\n      var ancestors = [];\n      ancestor(node, function (el) {\n        if (!isEditable(el)) {\n          ancestors.push(el);\n        }\n\n        return pred(el);\n      });\n      return ancestors;\n    };\n\n    /**\n     * find farthest ancestor predicate hit\n     */\n    var lastAncestor = function (node, pred) {\n      var ancestors = listAncestor(node);\n      return list.last(ancestors.filter(pred));\n    };\n\n    /**\n     * returns common ancestor node between two nodes.\n     *\n     * @param {Node} nodeA\n     * @param {Node} nodeB\n     */\n    var commonAncestor = function (nodeA, nodeB) {\n      var ancestors = listAncestor(nodeA);\n      for (var n = nodeB; n; n = n.parentNode) {\n        if ($.inArray(n, ancestors) > -1) { return n; }\n      }\n      return null; // difference document area\n    };\n\n    /**\n     * listing all previous siblings (until predicate hit).\n     *\n     * @param {Node} node\n     * @param {Function} [optional] pred - predicate function\n     */\n    var listPrev = function (node, pred) {\n      pred = pred || func.fail;\n\n      var nodes = [];\n      while (node) {\n        if (pred(node)) { break; }\n        nodes.push(node);\n        node = node.previousSibling;\n      }\n      return nodes;\n    };\n\n    /**\n     * listing next siblings (until predicate hit).\n     *\n     * @param {Node} node\n     * @param {Function} [pred] - predicate function\n     */\n    var listNext = function (node, pred) {\n      pred = pred || func.fail;\n\n      var nodes = [];\n      while (node) {\n        if (pred(node)) { break; }\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n      return nodes;\n    };\n\n    /**\n     * listing descendant nodes\n     *\n     * @param {Node} node\n     * @param {Function} [pred] - predicate function\n     */\n    var listDescendant = function (node, pred) {\n      var descendents = [];\n      pred = pred || func.ok;\n\n      // start DFS(depth first search) with node\n      (function fnWalk(current) {\n        if (node !== current && pred(current)) {\n          descendents.push(current);\n        }\n        for (var idx = 0, len = current.childNodes.length; idx < len; idx++) {\n          fnWalk(current.childNodes[idx]);\n        }\n      })(node);\n\n      return descendents;\n    };\n\n    /**\n     * wrap node with new tag.\n     *\n     * @param {Node} node\n     * @param {Node} tagName of wrapper\n     * @return {Node} - wrapper\n     */\n    var wrap = function (node, wrapperName) {\n      var parent = node.parentNode;\n      var wrapper = $('<' + wrapperName + '>')[0];\n\n      parent.insertBefore(wrapper, node);\n      wrapper.appendChild(node);\n\n      return wrapper;\n    };\n\n    /**\n     * insert node after preceding\n     *\n     * @param {Node} node\n     * @param {Node} preceding - predicate function\n     */\n    var insertAfter = function (node, preceding) {\n      var next = preceding.nextSibling, parent = preceding.parentNode;\n      if (next) {\n        parent.insertBefore(node, next);\n      } else {\n        parent.appendChild(node);\n      }\n      return node;\n    };\n\n    /**\n     * append elements.\n     *\n     * @param {Node} node\n     * @param {Collection} aChild\n     */\n    var appendChildNodes = function (node, aChild) {\n      $.each(aChild, function (idx, child) {\n        node.appendChild(child);\n      });\n      return node;\n    };\n\n    /**\n     * returns whether boundaryPoint is left edge or not.\n     *\n     * @param {BoundaryPoint} point\n     * @return {Boolean}\n     */\n    var isLeftEdgePoint = function (point) {\n      return point.offset === 0;\n    };\n\n    /**\n     * returns whether boundaryPoint is right edge or not.\n     *\n     * @param {BoundaryPoint} point\n     * @return {Boolean}\n     */\n    var isRightEdgePoint = function (point) {\n      return point.offset === nodeLength(point.node);\n    };\n\n    /**\n     * returns whether boundaryPoint is edge or not.\n     *\n     * @param {BoundaryPoint} point\n     * @return {Boolean}\n     */\n    var isEdgePoint = function (point) {\n      return isLeftEdgePoint(point) || isRightEdgePoint(point);\n    };\n\n    /**\n     * returns wheter node is left edge of ancestor or not.\n     *\n     * @param {Node} node\n     * @param {Node} ancestor\n     * @return {Boolean}\n     */\n    var isLeftEdgeOf = function (node, ancestor) {\n      while (node && node !== ancestor) {\n        if (position(node) !== 0) {\n          return false;\n        }\n        node = node.parentNode;\n      }\n\n      return true;\n    };\n\n    /**\n     * returns whether node is right edge of ancestor or not.\n     *\n     * @param {Node} node\n     * @param {Node} ancestor\n     * @return {Boolean}\n     */\n    var isRightEdgeOf = function (node, ancestor) {\n      while (node && node !== ancestor) {\n        if (position(node) !== nodeLength(node.parentNode) - 1) {\n          return false;\n        }\n        node = node.parentNode;\n      }\n\n      return true;\n    };\n\n    /**\n     * returns offset from parent.\n     *\n     * @param {Node} node\n     */\n    var position = function (node) {\n      var offset = 0;\n      while ((node = node.previousSibling)) {\n        offset += 1;\n      }\n      return offset;\n    };\n\n    var hasChildren = function (node) {\n      return !!(node && node.childNodes && node.childNodes.length);\n    };\n\n    /**\n     * returns previous boundaryPoint\n     *\n     * @param {BoundaryPoint} point\n     * @param {Boolean} isSkipInnerOffset\n     * @return {BoundaryPoint}\n     */\n    var prevPoint = function (point, isSkipInnerOffset) {\n      var node, offset;\n\n      if (point.offset === 0) {\n        if (isEditable(point.node)) {\n          return null;\n        }\n\n        node = point.node.parentNode;\n        offset = position(point.node);\n      } else if (hasChildren(point.node)) {\n        node = point.node.childNodes[point.offset - 1];\n        offset = nodeLength(node);\n      } else {\n        node = point.node;\n        offset = isSkipInnerOffset ? 0 : point.offset - 1;\n      }\n\n      return {\n        node: node,\n        offset: offset\n      };\n    };\n\n    /**\n     * returns next boundaryPoint\n     *\n     * @param {BoundaryPoint} point\n     * @param {Boolean} isSkipInnerOffset\n     * @return {BoundaryPoint}\n     */\n    var nextPoint = function (point, isSkipInnerOffset) {\n      var node, offset;\n\n      if (nodeLength(point.node) === point.offset) {\n        if (isEditable(point.node)) {\n          return null;\n        }\n\n        node = point.node.parentNode;\n        offset = position(point.node) + 1;\n      } else if (hasChildren(point.node)) {\n        node = point.node.childNodes[point.offset];\n        offset = 0;\n      } else {\n        node = point.node;\n        offset = isSkipInnerOffset ? nodeLength(point.node) : point.offset + 1;\n      }\n\n      return {\n        node: node,\n        offset: offset\n      };\n    };\n\n    /**\n     * returns whether pointA and pointB is same or not.\n     *\n     * @param {BoundaryPoint} pointA\n     * @param {BoundaryPoint} pointB\n     * @return {Boolean}\n     */\n    var isSamePoint = function (pointA, pointB) {\n      return pointA.node === pointB.node && pointA.offset === pointB.offset;\n    };\n\n    /**\n     * returns whether point is visible (can set cursor) or not.\n     * \n     * @param {BoundaryPoint} point\n     * @return {Boolean}\n     */\n    var isVisiblePoint = function (point) {\n      if (isText(point.node) || !hasChildren(point.node) || isEmpty(point.node)) {\n        return true;\n      }\n\n      var leftNode = point.node.childNodes[point.offset - 1];\n      var rightNode = point.node.childNodes[point.offset];\n      if ((!leftNode || isVoid(leftNode)) && (!rightNode || isVoid(rightNode))) {\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * @method prevPointUtil\n     *\n     * @param {BoundaryPoint} point\n     * @param {Function} pred\n     * @return {BoundaryPoint}\n     */\n    var prevPointUntil = function (point, pred) {\n      while (point) {\n        if (pred(point)) {\n          return point;\n        }\n\n        point = prevPoint(point);\n      }\n\n      return null;\n    };\n\n    /**\n     * @method nextPointUntil\n     *\n     * @param {BoundaryPoint} point\n     * @param {Function} pred\n     * @return {BoundaryPoint}\n     */\n    var nextPointUntil = function (point, pred) {\n      while (point) {\n        if (pred(point)) {\n          return point;\n        }\n\n        point = nextPoint(point);\n      }\n\n      return null;\n    };\n\n    /**\n     * returns whether point has character or not.\n     *\n     * @param {Point} point\n     * @return {Boolean}\n     */\n    var isCharPoint = function (point) {\n      if (!isText(point.node)) {\n        return false;\n      }\n\n      var ch = point.node.nodeValue.charAt(point.offset - 1);\n      return ch && (ch !== ' ' && ch !== NBSP_CHAR);\n    };\n\n    /**\n     * @method walkPoint\n     *\n     * @param {BoundaryPoint} startPoint\n     * @param {BoundaryPoint} endPoint\n     * @param {Function} handler\n     * @param {Boolean} isSkipInnerOffset\n     */\n    var walkPoint = function (startPoint, endPoint, handler, isSkipInnerOffset) {\n      var point = startPoint;\n\n      while (point) {\n        handler(point);\n\n        if (isSamePoint(point, endPoint)) {\n          break;\n        }\n\n        var isSkipOffset = isSkipInnerOffset &&\n                           startPoint.node !== point.node &&\n                           endPoint.node !== point.node;\n        point = nextPoint(point, isSkipOffset);\n      }\n    };\n\n    /**\n     * @method makeOffsetPath\n     *\n     * return offsetPath(array of offset) from ancestor\n     *\n     * @param {Node} ancestor - ancestor node\n     * @param {Node} node\n     */\n    var makeOffsetPath = function (ancestor, node) {\n      var ancestors = listAncestor(node, func.eq(ancestor));\n      return $.map(ancestors, position).reverse();\n    };\n\n    /**\n     * @method fromOffsetPath\n     *\n     * return element from offsetPath(array of offset)\n     *\n     * @param {Node} ancestor - ancestor node\n     * @param {array} offsets - offsetPath\n     */\n    var fromOffsetPath = function (ancestor, offsets) {\n      var current = ancestor;\n      for (var i = 0, len = offsets.length; i < len; i++) {\n        if (current.childNodes.length <= offsets[i]) {\n          current = current.childNodes[current.childNodes.length - 1];\n        } else {\n          current = current.childNodes[offsets[i]];\n        }\n      }\n      return current;\n    };\n\n    /**\n     * @method splitNode\n     *\n     * split element or #text\n     *\n     * @param {BoundaryPoint} point\n     * @param {Object} [options]\n     * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\n     * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\n     * @return {Node} right node of boundaryPoint\n     */\n    var splitNode = function (point, options) {\n      var isSkipPaddingBlankHTML = options && options.isSkipPaddingBlankHTML;\n      var isNotSplitEdgePoint = options && options.isNotSplitEdgePoint;\n\n      // edge case\n      if (isEdgePoint(point) && (isText(point.node) || isNotSplitEdgePoint)) {\n        if (isLeftEdgePoint(point)) {\n          return point.node;\n        } else if (isRightEdgePoint(point)) {\n          return point.node.nextSibling;\n        }\n      }\n\n      // split #text\n      if (isText(point.node)) {\n        return point.node.splitText(point.offset);\n      } else {\n        var childNode = point.node.childNodes[point.offset];\n        var clone = insertAfter(point.node.cloneNode(false), point.node);\n        appendChildNodes(clone, listNext(childNode));\n\n        if (!isSkipPaddingBlankHTML) {\n          paddingBlankHTML(point.node);\n          paddingBlankHTML(clone);\n        }\n\n        return clone;\n      }\n    };\n\n    /**\n     * @method splitTree\n     *\n     * split tree by point\n     *\n     * @param {Node} root - split root\n     * @param {BoundaryPoint} point\n     * @param {Object} [options]\n     * @param {Boolean} [options.isSkipPaddingBlankHTML] - default: false\n     * @param {Boolean} [options.isNotSplitEdgePoint] - default: false\n     * @return {Node} right node of boundaryPoint\n     */\n    var splitTree = function (root, point, options) {\n      // ex) [#text, <span>, <p>]\n      var ancestors = listAncestor(point.node, func.eq(root));\n\n      if (!ancestors.length) {\n        return null;\n      } else if (ancestors.length === 1) {\n        return splitNode(point, options);\n      }\n\n      return ancestors.reduce(function (node, parent) {\n        if (node === point.node) {\n          node = splitNode(point, options);\n        }\n\n        return splitNode({\n          node: parent,\n          offset: node ? dom.position(node) : nodeLength(parent)\n        }, options);\n      });\n    };\n\n    /**\n     * split point\n     *\n     * @param {Point} point\n     * @param {Boolean} isInline\n     * @return {Object}\n     */\n    var splitPoint = function (point, isInline) {\n      // find splitRoot, container\n      //  - inline: splitRoot is a child of paragraph\n      //  - block: splitRoot is a child of bodyContainer\n      var pred = isInline ? isPara : isBodyContainer;\n      var ancestors = listAncestor(point.node, pred);\n      var topAncestor = list.last(ancestors) || point.node;\n\n      var splitRoot, container;\n      if (pred(topAncestor)) {\n        splitRoot = ancestors[ancestors.length - 2];\n        container = topAncestor;\n      } else {\n        splitRoot = topAncestor;\n        container = splitRoot.parentNode;\n      }\n\n      // if splitRoot is exists, split with splitTree\n      var pivot = splitRoot && splitTree(splitRoot, point, {\n        isSkipPaddingBlankHTML: isInline,\n        isNotSplitEdgePoint: isInline\n      });\n\n      // if container is point.node, find pivot with point.offset\n      if (!pivot && container === point.node) {\n        pivot = point.node.childNodes[point.offset];\n      }\n\n      return {\n        rightNode: pivot,\n        container: container\n      };\n    };\n\n    var create = function (nodeName) {\n      return document.createElement(nodeName);\n    };\n\n    var createText = function (text) {\n      return document.createTextNode(text);\n    };\n\n    /**\n     * @method remove\n     *\n     * remove node, (isRemoveChild: remove child or not)\n     *\n     * @param {Node} node\n     * @param {Boolean} isRemoveChild\n     */\n    var remove = function (node, isRemoveChild) {\n      if (!node || !node.parentNode) { return; }\n      if (node.removeNode) { return node.removeNode(isRemoveChild); }\n\n      var parent = node.parentNode;\n      if (!isRemoveChild) {\n        var nodes = [];\n        var i, len;\n        for (i = 0, len = node.childNodes.length; i < len; i++) {\n          nodes.push(node.childNodes[i]);\n        }\n\n        for (i = 0, len = nodes.length; i < len; i++) {\n          parent.insertBefore(nodes[i], node);\n        }\n      }\n\n      parent.removeChild(node);\n    };\n\n    /**\n     * @method removeWhile\n     *\n     * @param {Node} node\n     * @param {Function} pred\n     */\n    var removeWhile = function (node, pred) {\n      while (node) {\n        if (isEditable(node) || !pred(node)) {\n          break;\n        }\n\n        var parent = node.parentNode;\n        remove(node);\n        node = parent;\n      }\n    };\n\n    /**\n     * @method replace\n     *\n     * replace node with provided nodeName\n     *\n     * @param {Node} node\n     * @param {String} nodeName\n     * @return {Node} - new node\n     */\n    var replace = function (node, nodeName) {\n      if (node.nodeName.toUpperCase() === nodeName.toUpperCase()) {\n        return node;\n      }\n\n      var newNode = create(nodeName);\n\n      if (node.style.cssText) {\n        newNode.style.cssText = node.style.cssText;\n      }\n\n      appendChildNodes(newNode, list.from(node.childNodes));\n      insertAfter(newNode, node);\n      remove(node);\n\n      return newNode;\n    };\n\n    var isTextarea = makePredByNodeName('TEXTAREA');\n\n    /**\n     * @param {jQuery} $node\n     * @param {Boolean} [stripLinebreaks] - default: false\n     */\n    var value = function ($node, stripLinebreaks) {\n      var val = isTextarea($node[0]) ? $node.val() : $node.html();\n      if (stripLinebreaks) {\n        return val.replace(/[\\n\\r]/g, '');\n      }\n      return val;\n    };\n\n    /**\n     * @method html\n     *\n     * get the HTML contents of node\n     *\n     * @param {jQuery} $node\n     * @param {Boolean} [isNewlineOnBlock]\n     */\n    var html = function ($node, isNewlineOnBlock) {\n      var markup = value($node);\n\n      if (isNewlineOnBlock) {\n        var regexTag = /<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g;\n        markup = markup.replace(regexTag, function (match, endSlash, name) {\n          name = name.toUpperCase();\n          var isEndOfInlineContainer = /^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(name) &&\n                                       !!endSlash;\n          var isBlockNode = /^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(name);\n\n          return match + ((isEndOfInlineContainer || isBlockNode) ? '\\n' : '');\n        });\n        markup = $.trim(markup);\n      }\n\n      return markup;\n    };\n\n    return {\n      /** @property {String} NBSP_CHAR */\n      NBSP_CHAR: NBSP_CHAR,\n      /** @property {String} ZERO_WIDTH_NBSP_CHAR */\n      ZERO_WIDTH_NBSP_CHAR: ZERO_WIDTH_NBSP_CHAR,\n      /** @property {String} blank */\n      blank: blankHTML,\n      /** @property {String} emptyPara */\n      emptyPara: '<p>' + blankHTML + '</p>',\n      makePredByNodeName: makePredByNodeName,\n      isEditable: isEditable,\n      isControlSizing: isControlSizing,\n      buildLayoutInfo: buildLayoutInfo,\n      makeLayoutInfo: makeLayoutInfo,\n      isText: isText,\n      isVoid: isVoid,\n      isPara: isPara,\n      isPurePara: isPurePara,\n      isInline: isInline,\n      isBlock: func.not(isInline),\n      isBodyInline: isBodyInline,\n      isBody: isBody,\n      isParaInline: isParaInline,\n      isList: isList,\n      isTable: isTable,\n      isCell: isCell,\n      isBlockquote: isBlockquote,\n      isBodyContainer: isBodyContainer,\n      isAnchor: isAnchor,\n      isDiv: makePredByNodeName('DIV'),\n      isLi: isLi,\n      isBR: makePredByNodeName('BR'),\n      isSpan: makePredByNodeName('SPAN'),\n      isB: makePredByNodeName('B'),\n      isU: makePredByNodeName('U'),\n      isS: makePredByNodeName('S'),\n      isI: makePredByNodeName('I'),\n      isImg: makePredByNodeName('IMG'),\n      isTextarea: isTextarea,\n      isEmpty: isEmpty,\n      isEmptyAnchor: func.and(isAnchor, isEmpty),\n      isClosestSibling: isClosestSibling,\n      withClosestSiblings: withClosestSiblings,\n      nodeLength: nodeLength,\n      isLeftEdgePoint: isLeftEdgePoint,\n      isRightEdgePoint: isRightEdgePoint,\n      isEdgePoint: isEdgePoint,\n      isLeftEdgeOf: isLeftEdgeOf,\n      isRightEdgeOf: isRightEdgeOf,\n      prevPoint: prevPoint,\n      nextPoint: nextPoint,\n      isSamePoint: isSamePoint,\n      isVisiblePoint: isVisiblePoint,\n      prevPointUntil: prevPointUntil,\n      nextPointUntil: nextPointUntil,\n      isCharPoint: isCharPoint,\n      walkPoint: walkPoint,\n      ancestor: ancestor,\n      singleChildAncestor: singleChildAncestor,\n      listAncestor: listAncestor,\n      lastAncestor: lastAncestor,\n      listNext: listNext,\n      listPrev: listPrev,\n      listDescendant: listDescendant,\n      commonAncestor: commonAncestor,\n      wrap: wrap,\n      insertAfter: insertAfter,\n      appendChildNodes: appendChildNodes,\n      position: position,\n      hasChildren: hasChildren,\n      makeOffsetPath: makeOffsetPath,\n      fromOffsetPath: fromOffsetPath,\n      splitTree: splitTree,\n      splitPoint: splitPoint,\n      create: create,\n      createText: createText,\n      remove: remove,\n      removeWhile: removeWhile,\n      replace: replace,\n      html: html,\n      value: value\n    };\n  })();\n\n\n  var range = (function () {\n\n    /**\n     * return boundaryPoint from TextRange, inspired by Andy Na's HuskyRange.js\n     *\n     * @param {TextRange} textRange\n     * @param {Boolean} isStart\n     * @return {BoundaryPoint}\n     *\n     * @see http://msdn.microsoft.com/en-us/library/ie/ms535872(v=vs.85).aspx\n     */\n    var textRangeToPoint = function (textRange, isStart) {\n      var container = textRange.parentElement(), offset;\n  \n      var tester = document.body.createTextRange(), prevContainer;\n      var childNodes = list.from(container.childNodes);\n      for (offset = 0; offset < childNodes.length; offset++) {\n        if (dom.isText(childNodes[offset])) {\n          continue;\n        }\n        tester.moveToElementText(childNodes[offset]);\n        if (tester.compareEndPoints('StartToStart', textRange) >= 0) {\n          break;\n        }\n        prevContainer = childNodes[offset];\n      }\n  \n      if (offset !== 0 && dom.isText(childNodes[offset - 1])) {\n        var textRangeStart = document.body.createTextRange(), curTextNode = null;\n        textRangeStart.moveToElementText(prevContainer || container);\n        textRangeStart.collapse(!prevContainer);\n        curTextNode = prevContainer ? prevContainer.nextSibling : container.firstChild;\n  \n        var pointTester = textRange.duplicate();\n        pointTester.setEndPoint('StartToStart', textRangeStart);\n        var textCount = pointTester.text.replace(/[\\r\\n]/g, '').length;\n  \n        while (textCount > curTextNode.nodeValue.length && curTextNode.nextSibling) {\n          textCount -= curTextNode.nodeValue.length;\n          curTextNode = curTextNode.nextSibling;\n        }\n  \n        /* jshint ignore:start */\n        var dummy = curTextNode.nodeValue; // enforce IE to re-reference curTextNode, hack\n        /* jshint ignore:end */\n  \n        if (isStart && curTextNode.nextSibling && dom.isText(curTextNode.nextSibling) &&\n            textCount === curTextNode.nodeValue.length) {\n          textCount -= curTextNode.nodeValue.length;\n          curTextNode = curTextNode.nextSibling;\n        }\n  \n        container = curTextNode;\n        offset = textCount;\n      }\n  \n      return {\n        cont: container,\n        offset: offset\n      };\n    };\n    \n    /**\n     * return TextRange from boundary point (inspired by google closure-library)\n     * @param {BoundaryPoint} point\n     * @return {TextRange}\n     */\n    var pointToTextRange = function (point) {\n      var textRangeInfo = function (container, offset) {\n        var node, isCollapseToStart;\n  \n        if (dom.isText(container)) {\n          var prevTextNodes = dom.listPrev(container, func.not(dom.isText));\n          var prevContainer = list.last(prevTextNodes).previousSibling;\n          node =  prevContainer || container.parentNode;\n          offset += list.sum(list.tail(prevTextNodes), dom.nodeLength);\n          isCollapseToStart = !prevContainer;\n        } else {\n          node = container.childNodes[offset] || container;\n          if (dom.isText(node)) {\n            return textRangeInfo(node, 0);\n          }\n  \n          offset = 0;\n          isCollapseToStart = false;\n        }\n  \n        return {\n          node: node,\n          collapseToStart: isCollapseToStart,\n          offset: offset\n        };\n      };\n  \n      var textRange = document.body.createTextRange();\n      var info = textRangeInfo(point.node, point.offset);\n  \n      textRange.moveToElementText(info.node);\n      textRange.collapse(info.collapseToStart);\n      textRange.moveStart('character', info.offset);\n      return textRange;\n    };\n    \n    /**\n     * Wrapped Range\n     *\n     * @constructor\n     * @param {Node} sc - start container\n     * @param {Number} so - start offset\n     * @param {Node} ec - end container\n     * @param {Number} eo - end offset\n     */\n    var WrappedRange = function (sc, so, ec, eo) {\n      this.sc = sc;\n      this.so = so;\n      this.ec = ec;\n      this.eo = eo;\n  \n      // nativeRange: get nativeRange from sc, so, ec, eo\n      var nativeRange = function () {\n        if (agent.isW3CRangeSupport) {\n          var w3cRange = document.createRange();\n          w3cRange.setStart(sc, so);\n          w3cRange.setEnd(ec, eo);\n\n          return w3cRange;\n        } else {\n          var textRange = pointToTextRange({\n            node: sc,\n            offset: so\n          });\n\n          textRange.setEndPoint('EndToEnd', pointToTextRange({\n            node: ec,\n            offset: eo\n          }));\n\n          return textRange;\n        }\n      };\n\n      this.getPoints = function () {\n        return {\n          sc: sc,\n          so: so,\n          ec: ec,\n          eo: eo\n        };\n      };\n\n      this.getStartPoint = function () {\n        return {\n          node: sc,\n          offset: so\n        };\n      };\n\n      this.getEndPoint = function () {\n        return {\n          node: ec,\n          offset: eo\n        };\n      };\n\n      /**\n       * select update visible range\n       */\n      this.select = function () {\n        var nativeRng = nativeRange();\n        if (agent.isW3CRangeSupport) {\n          var selection = document.getSelection();\n          if (selection.rangeCount > 0) {\n            selection.removeAllRanges();\n          }\n          selection.addRange(nativeRng);\n        } else {\n          nativeRng.select();\n        }\n        \n        return this;\n      };\n\n      /**\n       * Moves the scrollbar to start container(sc) of current range \n       *\n       * @return {WrappedRange}\n       */\n      this.scrollIntoView = function () {\n        if (this.sc.scrollIntoView) {\n          this.sc.scrollIntoView(false);\n        }\n        \n        return this;\n      };\n\n      /**\n       * set a focus into start container of current range \n       *\n       * @return {WrappedRange}\n       */\n      this.focus = function () {\n        this.sc.focus();\n        \n        return this;\n      };\n\n      /**\n       * @return {WrappedRange}\n       */\n      this.normalize = function () {\n\n        /**\n         * @param {BoundaryPoint} point\n         * @return {BoundaryPoint}\n         */\n        var getVisiblePoint = function (point) {\n          if (!dom.isVisiblePoint(point)) {\n            if (dom.isLeftEdgePoint(point)) {\n              point = dom.nextPointUntil(point, dom.isVisiblePoint);\n            } else {\n              point = dom.prevPointUntil(point, dom.isVisiblePoint);\n            }\n          }\n          return point;\n        };\n\n        var startPoint = getVisiblePoint(this.getStartPoint());\n        var endPoint = getVisiblePoint(this.getEndPoint());\n\n        return new WrappedRange(\n          startPoint.node,\n          startPoint.offset,\n          endPoint.node,\n          endPoint.offset\n        );\n      };\n\n      /**\n       * returns matched nodes on range\n       *\n       * @param {Function} [pred] - predicate function\n       * @param {Object} [options]\n       * @param {Boolean} [options.includeAncestor]\n       * @param {Boolean} [options.fullyContains]\n       * @return {Node[]}\n       */\n      this.nodes = function (pred, options) {\n        pred = pred || func.ok;\n\n        var includeAncestor = options && options.includeAncestor;\n        var fullyContains = options && options.fullyContains;\n\n        // TODO compare points and sort\n        var startPoint = this.getStartPoint();\n        var endPoint = this.getEndPoint();\n\n        var nodes = [];\n        var leftEdgeNodes = [];\n\n        dom.walkPoint(startPoint, endPoint, function (point) {\n          if (dom.isEditable(point.node)) {\n            return;\n          }\n\n          var node;\n          if (fullyContains) {\n            if (dom.isLeftEdgePoint(point)) {\n              leftEdgeNodes.push(point.node);\n            }\n            if (dom.isRightEdgePoint(point) && list.contains(leftEdgeNodes, point.node)) {\n              node = point.node;\n            }\n          } else if (includeAncestor) {\n            node = dom.ancestor(point.node, pred);\n          } else {\n            node = point.node;\n          }\n\n          if (node && pred(node)) {\n            nodes.push(node);\n          }\n        }, true);\n\n        return list.unique(nodes);\n      };\n\n      /**\n       * returns commonAncestor of range\n       * @return {Element} - commonAncestor\n       */\n      this.commonAncestor = function () {\n        return dom.commonAncestor(sc, ec);\n      };\n\n      /**\n       * returns expanded range by pred\n       *\n       * @param {Function} pred - predicate function\n       * @return {WrappedRange}\n       */\n      this.expand = function (pred) {\n        var startAncestor = dom.ancestor(sc, pred);\n        var endAncestor = dom.ancestor(ec, pred);\n\n        if (!startAncestor && !endAncestor) {\n          return new WrappedRange(sc, so, ec, eo);\n        }\n\n        var boundaryPoints = this.getPoints();\n\n        if (startAncestor) {\n          boundaryPoints.sc = startAncestor;\n          boundaryPoints.so = 0;\n        }\n\n        if (endAncestor) {\n          boundaryPoints.ec = endAncestor;\n          boundaryPoints.eo = dom.nodeLength(endAncestor);\n        }\n\n        return new WrappedRange(\n          boundaryPoints.sc,\n          boundaryPoints.so,\n          boundaryPoints.ec,\n          boundaryPoints.eo\n        );\n      };\n\n      /**\n       * @param {Boolean} isCollapseToStart\n       * @return {WrappedRange}\n       */\n      this.collapse = function (isCollapseToStart) {\n        if (isCollapseToStart) {\n          return new WrappedRange(sc, so, sc, so);\n        } else {\n          return new WrappedRange(ec, eo, ec, eo);\n        }\n      };\n\n      /**\n       * splitText on range\n       */\n      this.splitText = function () {\n        var isSameContainer = sc === ec;\n        var boundaryPoints = this.getPoints();\n\n        if (dom.isText(ec) && !dom.isEdgePoint(this.getEndPoint())) {\n          ec.splitText(eo);\n        }\n\n        if (dom.isText(sc) && !dom.isEdgePoint(this.getStartPoint())) {\n          boundaryPoints.sc = sc.splitText(so);\n          boundaryPoints.so = 0;\n\n          if (isSameContainer) {\n            boundaryPoints.ec = boundaryPoints.sc;\n            boundaryPoints.eo = eo - so;\n          }\n        }\n\n        return new WrappedRange(\n          boundaryPoints.sc,\n          boundaryPoints.so,\n          boundaryPoints.ec,\n          boundaryPoints.eo\n        );\n      };\n\n      /**\n       * delete contents on range\n       * @return {WrappedRange}\n       */\n      this.deleteContents = function () {\n        if (this.isCollapsed()) {\n          return this;\n        }\n\n        var rng = this.splitText();\n        var nodes = rng.nodes(null, {\n          fullyContains: true\n        });\n\n        // find new cursor point\n        var point = dom.prevPointUntil(rng.getStartPoint(), function (point) {\n          return !list.contains(nodes, point.node);\n        });\n\n        var emptyParents = [];\n        $.each(nodes, function (idx, node) {\n          // find empty parents\n          var parent = node.parentNode;\n          if (point.node !== parent && dom.nodeLength(parent) === 1) {\n            emptyParents.push(parent);\n          }\n          dom.remove(node, false);\n        });\n\n        // remove empty parents\n        $.each(emptyParents, function (idx, node) {\n          dom.remove(node, false);\n        });\n\n        return new WrappedRange(\n          point.node,\n          point.offset,\n          point.node,\n          point.offset\n        ).normalize();\n      };\n      \n      /**\n       * makeIsOn: return isOn(pred) function\n       */\n      var makeIsOn = function (pred) {\n        return function () {\n          var ancestor = dom.ancestor(sc, pred);\n          return !!ancestor && (ancestor === dom.ancestor(ec, pred));\n        };\n      };\n  \n      // isOnEditable: judge whether range is on editable or not\n      this.isOnEditable = makeIsOn(dom.isEditable);\n      // isOnList: judge whether range is on list node or not\n      this.isOnList = makeIsOn(dom.isList);\n      // isOnAnchor: judge whether range is on anchor node or not\n      this.isOnAnchor = makeIsOn(dom.isAnchor);\n      // isOnAnchor: judge whether range is on cell node or not\n      this.isOnCell = makeIsOn(dom.isCell);\n\n      /**\n       * @param {Function} pred\n       * @return {Boolean}\n       */\n      this.isLeftEdgeOf = function (pred) {\n        if (!dom.isLeftEdgePoint(this.getStartPoint())) {\n          return false;\n        }\n\n        var node = dom.ancestor(this.sc, pred);\n        return node && dom.isLeftEdgeOf(this.sc, node);\n      };\n\n      /**\n       * returns whether range was collapsed or not\n       */\n      this.isCollapsed = function () {\n        return sc === ec && so === eo;\n      };\n\n      /**\n       * wrap inline nodes which children of body with paragraph\n       *\n       * @return {WrappedRange}\n       */\n      this.wrapBodyInlineWithPara = function () {\n        if (dom.isBodyContainer(sc) && dom.isEmpty(sc)) {\n          sc.innerHTML = dom.emptyPara;\n          return new WrappedRange(sc.firstChild, 0, sc.firstChild, 0);\n        }\n\n        if (dom.isParaInline(sc) || dom.isPara(sc)) {\n          return this.normalize();\n        }\n\n        // find inline top ancestor\n        var topAncestor;\n        if (dom.isInline(sc)) {\n          var ancestors = dom.listAncestor(sc, func.not(dom.isInline));\n          topAncestor = list.last(ancestors);\n          if (!dom.isInline(topAncestor)) {\n            topAncestor = ancestors[ancestors.length - 2] || sc.childNodes[so];\n          }\n        } else {\n          topAncestor = sc.childNodes[so > 0 ? so - 1 : 0];\n        }\n\n        // siblings not in paragraph\n        var inlineSiblings = dom.listPrev(topAncestor, dom.isParaInline).reverse();\n        inlineSiblings = inlineSiblings.concat(dom.listNext(topAncestor.nextSibling, dom.isParaInline));\n\n        // wrap with paragraph\n        if (inlineSiblings.length) {\n          var para = dom.wrap(list.head(inlineSiblings), 'p');\n          dom.appendChildNodes(para, list.tail(inlineSiblings));\n        }\n\n        return this.normalize();\n      };\n\n      /**\n       * insert node at current cursor\n       *\n       * @param {Node} node\n       * @return {Node}\n       */\n      this.insertNode = function (node) {\n        var rng = this.wrapBodyInlineWithPara().deleteContents();\n        var info = dom.splitPoint(rng.getStartPoint(), dom.isInline(node));\n\n        if (info.rightNode) {\n          info.rightNode.parentNode.insertBefore(node, info.rightNode);\n        } else {\n          info.container.appendChild(node);\n        }\n\n        return node;\n      };\n\n      /**\n       * insert html at current cursor\n       */\n      this.pasteHTML = function (markup) {\n        var self = this;\n        var contentsContainer = $('<div></div>').html(markup)[0];\n        var childNodes = list.from(contentsContainer.childNodes);\n\n        this.wrapBodyInlineWithPara().deleteContents();\n\n        return $.map(childNodes.reverse(), function (childNode) {\n          return self.insertNode(childNode);\n        }).reverse();\n      };\n  \n      /**\n       * returns text in range\n       *\n       * @return {String}\n       */\n      this.toString = function () {\n        var nativeRng = nativeRange();\n        return agent.isW3CRangeSupport ? nativeRng.toString() : nativeRng.text;\n      };\n\n      /**\n       * returns range for word before cursor\n       *\n       * @param {Boolean} [findAfter] - find after cursor, default: false\n       * @return {WrappedRange}\n       */\n      this.getWordRange = function (findAfter) {\n        var endPoint = this.getEndPoint();\n\n        if (!dom.isCharPoint(endPoint)) {\n          return this;\n        }\n\n        var startPoint = dom.prevPointUntil(endPoint, function (point) {\n          return !dom.isCharPoint(point);\n        });\n\n        if (findAfter) {\n          endPoint = dom.nextPointUntil(endPoint, function (point) {\n            return !dom.isCharPoint(point);\n          });\n        }\n\n        return new WrappedRange(\n          startPoint.node,\n          startPoint.offset,\n          endPoint.node,\n          endPoint.offset\n        );\n      };\n  \n      /**\n       * create offsetPath bookmark\n       *\n       * @param {Node} editable\n       */\n      this.bookmark = function (editable) {\n        return {\n          s: {\n            path: dom.makeOffsetPath(editable, sc),\n            offset: so\n          },\n          e: {\n            path: dom.makeOffsetPath(editable, ec),\n            offset: eo\n          }\n        };\n      };\n\n      /**\n       * create offsetPath bookmark base on paragraph\n       *\n       * @param {Node[]} paras\n       */\n      this.paraBookmark = function (paras) {\n        return {\n          s: {\n            path: list.tail(dom.makeOffsetPath(list.head(paras), sc)),\n            offset: so\n          },\n          e: {\n            path: list.tail(dom.makeOffsetPath(list.last(paras), ec)),\n            offset: eo\n          }\n        };\n      };\n\n      /**\n       * getClientRects\n       * @return {Rect[]}\n       */\n      this.getClientRects = function () {\n        var nativeRng = nativeRange();\n        return nativeRng.getClientRects();\n      };\n    };\n\n  /**\n   * @class core.range\n   *\n   * Data structure\n   *  * BoundaryPoint: a point of dom tree\n   *  * BoundaryPoints: two boundaryPoints corresponding to the start and the end of the Range\n   *\n   * See to http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Position\n   *\n   * @singleton\n   * @alternateClassName range\n   */\n    return {\n      /**\n       * @method\n       * \n       * create Range Object From arguments or Browser Selection\n       *\n       * @param {Node} sc - start container\n       * @param {Number} so - start offset\n       * @param {Node} ec - end container\n       * @param {Number} eo - end offset\n       * @return {WrappedRange}\n       */\n      create : function (sc, so, ec, eo) {\n        if (!arguments.length) { // from Browser Selection\n          if (agent.isW3CRangeSupport) {\n            var selection = document.getSelection();\n            if (selection.rangeCount === 0) {\n              return null;\n            } else if (dom.isBody(selection.anchorNode)) {\n              // Firefox: returns entire body as range on initialization. We won't never need it.\n              return null;\n            }\n  \n            var nativeRng = selection.getRangeAt(0);\n            sc = nativeRng.startContainer;\n            so = nativeRng.startOffset;\n            ec = nativeRng.endContainer;\n            eo = nativeRng.endOffset;\n          } else { // IE8: TextRange\n            var textRange = document.selection.createRange();\n            var textRangeEnd = textRange.duplicate();\n            textRangeEnd.collapse(false);\n            var textRangeStart = textRange;\n            textRangeStart.collapse(true);\n  \n            var startPoint = textRangeToPoint(textRangeStart, true),\n            endPoint = textRangeToPoint(textRangeEnd, false);\n\n            // same visible point case: range was collapsed.\n            if (dom.isText(startPoint.node) && dom.isLeftEdgePoint(startPoint) &&\n                dom.isTextNode(endPoint.node) && dom.isRightEdgePoint(endPoint) &&\n                endPoint.node.nextSibling === startPoint.node) {\n              startPoint = endPoint;\n            }\n\n            sc = startPoint.cont;\n            so = startPoint.offset;\n            ec = endPoint.cont;\n            eo = endPoint.offset;\n          }\n        } else if (arguments.length === 2) { //collapsed\n          ec = sc;\n          eo = so;\n        }\n        return new WrappedRange(sc, so, ec, eo);\n      },\n\n      /**\n       * @method \n       * \n       * create WrappedRange from node\n       *\n       * @param {Node} node\n       * @return {WrappedRange}\n       */\n      createFromNode: function (node) {\n        var sc = node;\n        var so = 0;\n        var ec = node;\n        var eo = dom.nodeLength(ec);\n\n        // browsers can't target a picture or void node\n        if (dom.isVoid(sc)) {\n          so = dom.listPrev(sc).length - 1;\n          sc = sc.parentNode;\n        }\n        if (dom.isBR(ec)) {\n          eo = dom.listPrev(ec).length - 1;\n          ec = ec.parentNode;\n        } else if (dom.isVoid(ec)) {\n          eo = dom.listPrev(ec).length;\n          ec = ec.parentNode;\n        }\n\n        return this.create(sc, so, ec, eo);\n      },\n\n      /**\n       * @method \n       * \n       * create WrappedRange from bookmark\n       *\n       * @param {Node} editable\n       * @param {Object} bookmark\n       * @return {WrappedRange}\n       */\n      createFromBookmark : function (editable, bookmark) {\n        var sc = dom.fromOffsetPath(editable, bookmark.s.path);\n        var so = bookmark.s.offset;\n        var ec = dom.fromOffsetPath(editable, bookmark.e.path);\n        var eo = bookmark.e.offset;\n        return new WrappedRange(sc, so, ec, eo);\n      },\n\n      /**\n       * @method \n       *\n       * create WrappedRange from paraBookmark\n       *\n       * @param {Object} bookmark\n       * @param {Node[]} paras\n       * @return {WrappedRange}\n       */\n      createFromParaBookmark: function (bookmark, paras) {\n        var so = bookmark.s.offset;\n        var eo = bookmark.e.offset;\n        var sc = dom.fromOffsetPath(list.head(paras), bookmark.s.path);\n        var ec = dom.fromOffsetPath(list.last(paras), bookmark.e.path);\n\n        return new WrappedRange(sc, so, ec, eo);\n      }\n    };\n  })();\n\n  /**\n   * @class defaults \n   * \n   * @singleton\n   */\n  var defaults = {\n    /** @property */\n    version: '0.6.5',\n\n    /**\n     * \n     * for event options, reference to EventHandler.attach\n     * \n     * @property {Object} options \n     * @property {String/Number} [options.width=null] set editor width \n     * @property {String/Number} [options.height=null] set editor height, ex) 300\n     * @property {String/Number} options.minHeight set minimum height of editor\n     * @property {String/Number} options.maxHeight\n     * @property {String/Number} options.focus \n     * @property {Number} options.tabsize \n     * @property {Boolean} options.styleWithSpan\n     * @property {Object} options.codemirror\n     * @property {Object} [options.codemirror.mode='text/html']\n     * @property {Object} [options.codemirror.htmlMode=true]\n     * @property {Object} [options.codemirror.lineNumbers=true]\n     * @property {String} [options.lang=en-US] language 'en-US', 'ko-KR', ...\n     * @property {String} [options.direction=null] text direction, ex) 'rtl'\n     * @property {Array} [options.toolbar]\n     * @property {Boolean} [options.airMode=false]\n     * @property {Array} [options.airPopover]\n     * @property {Fucntion} [options.onInit] initialize\n     * @property {Fucntion} [options.onsubmit]\n     */\n    options: {\n      width: null,                  // set editor width\n      height: null,                 // set editor height, ex) 300\n\n      minHeight: null,              // set minimum height of editor\n      maxHeight: null,              // set maximum height of editor\n\n      focus: false,                 // set focus to editable area after initializing summernote\n\n      tabsize: 4,                   // size of tab ex) 2 or 4\n      styleWithSpan: true,          // style with span (Chrome and FF only)\n\n      disableLinkTarget: false,     // hide link Target Checkbox\n      disableDragAndDrop: false,    // disable drag and drop event\n      disableResizeEditor: false,   // disable resizing editor\n\n      shortcuts: true,              // enable keyboard shortcuts\n\n      placeholder: false,           // enable placeholder text\n      prettifyHtml: true,           // enable prettifying html while toggling codeview\n\n      iconPrefix: 'fa fa-',         // prefix for css icon classes\n\n      codemirror: {                 // codemirror options\n        mode: 'text/html',\n        htmlMode: true,\n        lineNumbers: true\n      },\n\n      // language\n      lang: 'en-US',                // language 'en-US', 'ko-KR', ...\n      direction: null,              // text direction, ex) 'rtl'\n\n      // toolbar\n      toolbar: [\n        ['style', ['style']],\n        ['font', ['bold', 'italic', 'underline', 'clear']],\n        // ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],\n        ['fontname', ['fontname']],\n        // ['fontsize', ['fontsize']],\n        ['color', ['color']],\n        ['para', ['ul', 'ol', 'paragraph']],\n        ['height', ['height']],\n        ['table', ['table']],\n        ['insert', ['link', 'picture', 'hr']],\n        ['view', ['fullscreen', 'codeview']],\n        ['help', ['help']]\n      ],\n\n      // air mode: inline editor\n      airMode: false,\n      // airPopover: [\n      //   ['style', ['style']],\n      //   ['font', ['bold', 'italic', 'underline', 'clear']],\n      //   ['fontname', ['fontname']],\n      //   ['color', ['color']],\n      //   ['para', ['ul', 'ol', 'paragraph']],\n      //   ['height', ['height']],\n      //   ['table', ['table']],\n      //   ['insert', ['link', 'picture']],\n      //   ['help', ['help']]\n      // ],\n      airPopover: [\n        ['color', ['color']],\n        ['font', ['bold', 'underline', 'clear']],\n        ['para', ['ul', 'paragraph']],\n        ['table', ['table']],\n        ['insert', ['link', 'picture']]\n      ],\n\n      // style tag\n      styleTags: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n      // default fontName\n      defaultFontName: 'Helvetica Neue',\n\n      // fontName\n      fontNames: [\n        'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',\n        'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande',\n        'Tahoma', 'Times New Roman', 'Verdana'\n      ],\n      fontNamesIgnoreCheck: [],\n\n      fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\n\n      // pallete colors(n x n)\n      colors: [\n        ['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#F7F7F7', '#FFFFFF'],\n        ['#FF0000', '#FF9C00', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9C00FF', '#FF00FF'],\n        ['#F7C6CE', '#FFE7CE', '#FFEFC6', '#D6EFD6', '#CEDEE7', '#CEE7F7', '#D6D6E7', '#E7D6DE'],\n        ['#E79C9C', '#FFC69C', '#FFE79C', '#B5D6A5', '#A5C6CE', '#9CC6EF', '#B5A5D6', '#D6A5BD'],\n        ['#E76363', '#F7AD6B', '#FFD663', '#94BD7B', '#73A5AD', '#6BADDE', '#8C7BC6', '#C67BA5'],\n        ['#CE0000', '#E79439', '#EFC631', '#6BA54A', '#4A7B8C', '#3984C6', '#634AA5', '#A54A7B'],\n        ['#9C0000', '#B56308', '#BD9400', '#397B21', '#104A5A', '#085294', '#311873', '#731842'],\n        ['#630000', '#7B3900', '#846300', '#295218', '#083139', '#003163', '#21104A', '#4A1031']\n      ],\n\n      // lineHeight\n      lineHeights: ['1.0', '1.2', '1.4', '1.5', '1.6', '1.8', '2.0', '3.0'],\n\n      // insertTable max size\n      insertTableMaxSize: {\n        col: 10,\n        row: 10\n      },\n\n      // image\n      maximumImageFileSize: null, // size in bytes, null = no limit\n\n      // callbacks\n      oninit: null,             // initialize\n      onfocus: null,            // editable has focus\n      onblur: null,             // editable out of focus\n      onenter: null,            // enter key pressed\n      onkeyup: null,            // keyup\n      onkeydown: null,          // keydown\n      onImageUpload: null,      // imageUpload\n      onImageUploadError: null, // imageUploadError\n      onMediaDelete: null,      // media delete\n      onToolbarClick: null,\n      onsubmit: null,\n\n      /**\n       * manipulate link address when user create link\n       * @param {String} sLinkUrl\n       * @return {String}\n       */\n      onCreateLink: function (sLinkUrl) {\n        if (sLinkUrl.indexOf('@') !== -1 && sLinkUrl.indexOf(':') === -1) {\n          sLinkUrl =  'mailto:' + sLinkUrl;\n        } else if (sLinkUrl.indexOf('://') === -1) {\n          sLinkUrl = 'http://' + sLinkUrl;\n        }\n\n        return sLinkUrl;\n      },\n\n      keyMap: {\n        pc: {\n          'ENTER': 'insertParagraph',\n          'CTRL+Z': 'undo',\n          'CTRL+Y': 'redo',\n          'TAB': 'tab',\n          'SHIFT+TAB': 'untab',\n          'CTRL+B': 'bold',\n          'CTRL+I': 'italic',\n          'CTRL+U': 'underline',\n          'CTRL+SHIFT+S': 'strikethrough',\n          'CTRL+BACKSLASH': 'removeFormat',\n          'CTRL+SHIFT+L': 'justifyLeft',\n          'CTRL+SHIFT+E': 'justifyCenter',\n          'CTRL+SHIFT+R': 'justifyRight',\n          'CTRL+SHIFT+J': 'justifyFull',\n          'CTRL+SHIFT+NUM7': 'insertUnorderedList',\n          'CTRL+SHIFT+NUM8': 'insertOrderedList',\n          'CTRL+LEFTBRACKET': 'outdent',\n          'CTRL+RIGHTBRACKET': 'indent',\n          'CTRL+NUM0': 'formatPara',\n          'CTRL+NUM1': 'formatH1',\n          'CTRL+NUM2': 'formatH2',\n          'CTRL+NUM3': 'formatH3',\n          'CTRL+NUM4': 'formatH4',\n          'CTRL+NUM5': 'formatH5',\n          'CTRL+NUM6': 'formatH6',\n          'CTRL+ENTER': 'insertHorizontalRule',\n          'CTRL+K': 'showLinkDialog'\n        },\n\n        mac: {\n          'ENTER': 'insertParagraph',\n          'CMD+Z': 'undo',\n          'CMD+SHIFT+Z': 'redo',\n          'TAB': 'tab',\n          'SHIFT+TAB': 'untab',\n          'CMD+B': 'bold',\n          'CMD+I': 'italic',\n          'CMD+U': 'underline',\n          'CMD+SHIFT+S': 'strikethrough',\n          'CMD+BACKSLASH': 'removeFormat',\n          'CMD+SHIFT+L': 'justifyLeft',\n          'CMD+SHIFT+E': 'justifyCenter',\n          'CMD+SHIFT+R': 'justifyRight',\n          'CMD+SHIFT+J': 'justifyFull',\n          'CMD+SHIFT+NUM7': 'insertUnorderedList',\n          'CMD+SHIFT+NUM8': 'insertOrderedList',\n          'CMD+LEFTBRACKET': 'outdent',\n          'CMD+RIGHTBRACKET': 'indent',\n          'CMD+NUM0': 'formatPara',\n          'CMD+NUM1': 'formatH1',\n          'CMD+NUM2': 'formatH2',\n          'CMD+NUM3': 'formatH3',\n          'CMD+NUM4': 'formatH4',\n          'CMD+NUM5': 'formatH5',\n          'CMD+NUM6': 'formatH6',\n          'CMD+ENTER': 'insertHorizontalRule',\n          'CMD+K': 'showLinkDialog'\n        }\n      }\n    },\n\n    // default language: en-US\n    lang: {\n      'en-US': {\n        font: {\n          bold: 'Bold',\n          italic: 'Italic',\n          underline: 'Underline',\n          clear: 'Remove Font Style',\n          height: 'Line Height',\n          name: 'Font Family',\n          strikethrough: 'Strikethrough',\n          subscript: 'Subscript',\n          superscript: 'Superscript',\n          size: 'Font Size'\n        },\n        image: {\n          image: 'Picture',\n          insert: 'Insert Image',\n          resizeFull: 'Resize Full',\n          resizeHalf: 'Resize Half',\n          resizeQuarter: 'Resize Quarter',\n          floatLeft: 'Float Left',\n          floatRight: 'Float Right',\n          floatNone: 'Float None',\n          shapeRounded: 'Shape: Rounded',\n          shapeCircle: 'Shape: Circle',\n          shapeThumbnail: 'Shape: Thumbnail',\n          shapeNone: 'Shape: None',\n          dragImageHere: 'Drag image or text here',\n          dropImage: 'Drop image or Text',\n          selectFromFiles: 'Select from files',\n          maximumFileSize: 'Maximum file size',\n          maximumFileSizeError: 'Maximum file size exceeded.',\n          url: 'Image URL',\n          remove: 'Remove Image'\n        },\n        link: {\n          link: 'Link',\n          insert: 'Insert Link',\n          unlink: 'Unlink',\n          edit: 'Edit',\n          textToDisplay: 'Text to display',\n          url: 'To what URL should this link go?',\n          openInNewWindow: 'Open in new window'\n        },\n        table: {\n          table: 'Table'\n        },\n        hr: {\n          insert: 'Insert Horizontal Rule'\n        },\n        style: {\n          style: 'Style',\n          normal: 'Normal',\n          blockquote: 'Quote',\n          pre: 'Code',\n          h1: 'Header 1',\n          h2: 'Header 2',\n          h3: 'Header 3',\n          h4: 'Header 4',\n          h5: 'Header 5',\n          h6: 'Header 6'\n        },\n        lists: {\n          unordered: 'Unordered list',\n          ordered: 'Ordered list'\n        },\n        options: {\n          help: 'Help',\n          fullscreen: 'Full Screen',\n          codeview: 'Code View'\n        },\n        paragraph: {\n          paragraph: 'Paragraph',\n          outdent: 'Outdent',\n          indent: 'Indent',\n          left: 'Align left',\n          center: 'Align center',\n          right: 'Align right',\n          justify: 'Justify full'\n        },\n        color: {\n          recent: 'Recent Color',\n          more: 'More Color',\n          background: 'Background Color',\n          foreground: 'Foreground Color',\n          transparent: 'Transparent',\n          setTransparent: 'Set transparent',\n          reset: 'Reset',\n          resetToDefault: 'Reset to default'\n        },\n        shortcut: {\n          shortcuts: 'Keyboard shortcuts',\n          close: 'Close',\n          textFormatting: 'Text formatting',\n          action: 'Action',\n          paragraphFormatting: 'Paragraph formatting',\n          documentStyle: 'Document Style',\n          extraKeys: 'Extra keys'\n        },\n        history: {\n          undo: 'Undo',\n          redo: 'Redo'\n        }\n      }\n    }\n  };\n\n  /**\n   * @class core.async\n   *\n   * Async functions which returns `Promise`\n   *\n   * @singleton\n   * @alternateClassName async\n   */\n  var async = (function () {\n    /**\n     * @method readFileAsDataURL\n     *\n     * read contents of file as representing URL\n     *\n     * @param {File} file\n     * @return {Promise} - then: sDataUrl\n     */\n    var readFileAsDataURL = function (file) {\n      return $.Deferred(function (deferred) {\n        $.extend(new FileReader(), {\n          onload: function (e) {\n            var sDataURL = e.target.result;\n            deferred.resolve(sDataURL);\n          },\n          onerror: function () {\n            deferred.reject(this);\n          }\n        }).readAsDataURL(file);\n      }).promise();\n    };\n  \n    /**\n     * @method createImage\n     *\n     * create `<image>` from url string\n     *\n     * @param {String} sUrl\n     * @param {String} filename\n     * @return {Promise} - then: $image\n     */\n    var createImage = function (sUrl, filename) {\n      return $.Deferred(function (deferred) {\n        var $img = $('<img>');\n\n        $img.one('load', function () {\n          $img.off('error abort');\n          deferred.resolve($img);\n        }).one('error abort', function () {\n          $img.off('load').detach();\n          deferred.reject($img);\n        }).css({\n          display: 'none'\n        }).appendTo(document.body).attr({\n          'src': sUrl,\n          'data-filename': filename\n        });\n      }).promise();\n    };\n\n    return {\n      readFileAsDataURL: readFileAsDataURL,\n      createImage: createImage\n    };\n  })();\n\n  /**\n   * @class core.key\n   *\n   * Object for keycodes.\n   *\n   * @singleton\n   * @alternateClassName key\n   */\n  var key = (function () {\n    var keyMap = {\n      'BACKSPACE': 8,\n      'TAB': 9,\n      'ENTER': 13,\n      'SPACE': 32,\n\n      // Number: 0-9\n      'NUM0': 48,\n      'NUM1': 49,\n      'NUM2': 50,\n      'NUM3': 51,\n      'NUM4': 52,\n      'NUM5': 53,\n      'NUM6': 54,\n      'NUM7': 55,\n      'NUM8': 56,\n\n      // Alphabet: a-z\n      'B': 66,\n      'E': 69,\n      'I': 73,\n      'J': 74,\n      'K': 75,\n      'L': 76,\n      'R': 82,\n      'S': 83,\n      'U': 85,\n      'Y': 89,\n      'Z': 90,\n\n      'SLASH': 191,\n      'LEFTBRACKET': 219,\n      'BACKSLASH': 220,\n      'RIGHTBRACKET': 221\n    };\n\n    return {\n      /**\n       * @method isEdit\n       *\n       * @param {Number} keyCode\n       * @return {Boolean}\n       */\n      isEdit: function (keyCode) {\n        return list.contains([8, 9, 13, 32], keyCode);\n      },\n      /**\n       * @property {Object} nameFromCode\n       * @property {String} nameFromCode.8 \"BACKSPACE\"\n       */\n      nameFromCode: func.invertObject(keyMap),\n      code: keyMap\n    };\n  })();\n\n  /**\n   * @class editing.History\n   *\n   * Editor History\n   *\n   */\n  var History = function ($editable) {\n    var stack = [], stackOffset = -1;\n    var editable = $editable[0];\n\n    var makeSnapshot = function () {\n      var rng = range.create();\n      var emptyBookmark = {s: {path: [], offset: 0}, e: {path: [], offset: 0}};\n\n      return {\n        contents: $editable.html(),\n        bookmark: (rng ? rng.bookmark(editable) : emptyBookmark)\n      };\n    };\n\n    var applySnapshot = function (snapshot) {\n      if (snapshot.contents !== null) {\n        $editable.html(snapshot.contents);\n      }\n      if (snapshot.bookmark !== null) {\n        range.createFromBookmark(editable, snapshot.bookmark).select();\n      }\n    };\n\n    /**\n     * undo\n     */\n    this.undo = function () {\n      if (0 < stackOffset) {\n        stackOffset--;\n        applySnapshot(stack[stackOffset]);\n      }\n    };\n\n    /**\n     * redo\n     */\n    this.redo = function () {\n      if (stack.length - 1 > stackOffset) {\n        stackOffset++;\n        applySnapshot(stack[stackOffset]);\n      }\n    };\n\n    /**\n     * recorded undo\n     */\n    this.recordUndo = function () {\n      stackOffset++;\n\n      // Wash out stack after stackOffset\n      if (stack.length > stackOffset) {\n        stack = stack.slice(0, stackOffset);\n      }\n\n      // Create new snapshot and push it to the end\n      stack.push(makeSnapshot());\n    };\n\n    // Create first undo stack\n    this.recordUndo();\n  };\n\n  /**\n   * @class editing.Style\n   *\n   * Style\n   *\n   */\n  var Style = function () {\n    /**\n     * @method jQueryCSS\n     *\n     * [workaround] for old jQuery\n     * passing an array of style properties to .css()\n     * will result in an object of property-value pairs.\n     * (compability with version < 1.9)\n     *\n     * @private\n     * @param  {jQuery} $obj\n     * @param  {Array} propertyNames - An array of one or more CSS properties.\n     * @return {Object}\n     */\n    var jQueryCSS = function ($obj, propertyNames) {\n      if (agent.jqueryVersion < 1.9) {\n        var result = {};\n        $.each(propertyNames, function (idx, propertyName) {\n          result[propertyName] = $obj.css(propertyName);\n        });\n        return result;\n      }\n      return $obj.css.call($obj, propertyNames);\n    };\n\n    /**\n     * paragraph level style\n     *\n     * @param {WrappedRange} rng\n     * @param {Object} styleInfo\n     */\n    this.stylePara = function (rng, styleInfo) {\n      $.each(rng.nodes(dom.isPara, {\n        includeAncestor: true\n      }), function (idx, para) {\n        $(para).css(styleInfo);\n      });\n    };\n\n    /**\n     * insert and returns styleNodes on range.\n     *\n     * @param {WrappedRange} rng\n     * @param {Object} [options] - options for styleNodes\n     * @param {String} [options.nodeName] - default: `SPAN`\n     * @param {Boolean} [options.expandClosestSibling] - default: `false`\n     * @param {Boolean} [options.onlyPartialContains] - default: `false`\n     * @return {Node[]}\n     */\n    this.styleNodes = function (rng, options) {\n      rng = rng.splitText();\n\n      var nodeName = options && options.nodeName || 'SPAN';\n      var expandClosestSibling = !!(options && options.expandClosestSibling);\n      var onlyPartialContains = !!(options && options.onlyPartialContains);\n\n      if (rng.isCollapsed()) {\n        return rng.insertNode(dom.create(nodeName));\n      }\n\n      var pred = dom.makePredByNodeName(nodeName);\n      var nodes = $.map(rng.nodes(dom.isText, {\n        fullyContains: true\n      }), function (text) {\n        return dom.singleChildAncestor(text, pred) || dom.wrap(text, nodeName);\n      });\n\n      if (expandClosestSibling) {\n        if (onlyPartialContains) {\n          var nodesInRange = rng.nodes();\n          // compose with partial contains predication\n          pred = func.and(pred, function (node) {\n            return list.contains(nodesInRange, node);\n          });\n        }\n\n        return $.map(nodes, function (node) {\n          var siblings = dom.withClosestSiblings(node, pred);\n          var head = list.head(siblings);\n          var tails = list.tail(siblings);\n          $.each(tails, function (idx, elem) {\n            dom.appendChildNodes(head, elem.childNodes);\n            dom.remove(elem);\n          });\n          return list.head(siblings);\n        });\n      } else {\n        return nodes;\n      }\n    };\n\n    /**\n     * get current style on cursor\n     *\n     * @param {WrappedRange} rng\n     * @param {Node} target - target element on event\n     * @return {Object} - object contains style properties.\n     */\n    this.current = function (rng, target) {\n      var $cont = $(dom.isText(rng.sc) ? rng.sc.parentNode : rng.sc);\n      var properties = ['font-family', 'font-size', 'text-align', 'list-style-type', 'line-height'];\n      var styleInfo = jQueryCSS($cont, properties) || {};\n\n      styleInfo['font-size'] = parseInt(styleInfo['font-size'], 10);\n\n      // document.queryCommandState for toggle state\n      styleInfo['font-bold'] = document.queryCommandState('bold') ? 'bold' : 'normal';\n      styleInfo['font-italic'] = document.queryCommandState('italic') ? 'italic' : 'normal';\n      styleInfo['font-underline'] = document.queryCommandState('underline') ? 'underline' : 'normal';\n      styleInfo['font-strikethrough'] = document.queryCommandState('strikeThrough') ? 'strikethrough' : 'normal';\n      styleInfo['font-superscript'] = document.queryCommandState('superscript') ? 'superscript' : 'normal';\n      styleInfo['font-subscript'] = document.queryCommandState('subscript') ? 'subscript' : 'normal';\n\n      // list-style-type to list-style(unordered, ordered)\n      if (!rng.isOnList()) {\n        styleInfo['list-style'] = 'none';\n      } else {\n        var aOrderedType = ['circle', 'disc', 'disc-leading-zero', 'square'];\n        var isUnordered = $.inArray(styleInfo['list-style-type'], aOrderedType) > -1;\n        styleInfo['list-style'] = isUnordered ? 'unordered' : 'ordered';\n      }\n\n      var para = dom.ancestor(rng.sc, dom.isPara);\n      if (para && para.style['line-height']) {\n        styleInfo['line-height'] = para.style.lineHeight;\n      } else {\n        var lineHeight = parseInt(styleInfo['line-height'], 10) / parseInt(styleInfo['font-size'], 10);\n        styleInfo['line-height'] = lineHeight.toFixed(1);\n      }\n\n      styleInfo.image = dom.isImg(target) && target;\n      styleInfo.anchor = rng.isOnAnchor() && dom.ancestor(rng.sc, dom.isAnchor);\n      styleInfo.ancestors = dom.listAncestor(rng.sc, dom.isEditable);\n      styleInfo.range = rng;\n\n      return styleInfo;\n    };\n  };\n\n\n  /**\n   * @class editing.Bullet\n   *\n   * @alternateClassName Bullet\n   */\n  var Bullet = function () {\n    /**\n     * @method insertOrderedList\n     *\n     * toggle ordered list\n     *\n     * @type command\n     */\n    this.insertOrderedList = function () {\n      this.toggleList('OL');\n    };\n\n    /**\n     * @method insertUnorderedList\n     *\n     * toggle unordered list\n     *\n     * @type command\n     */\n    this.insertUnorderedList = function () {\n      this.toggleList('UL');\n    };\n\n    /**\n     * @method indent\n     *\n     * indent\n     *\n     * @type command\n     */\n    this.indent = function () {\n      var self = this;\n      var rng = range.create().wrapBodyInlineWithPara();\n\n      var paras = rng.nodes(dom.isPara, { includeAncestor: true });\n      var clustereds = list.clusterBy(paras, func.peq2('parentNode'));\n\n      $.each(clustereds, function (idx, paras) {\n        var head = list.head(paras);\n        if (dom.isLi(head)) {\n          self.wrapList(paras, head.parentNode.nodeName);\n        } else {\n          $.each(paras, function (idx, para) {\n            $(para).css('marginLeft', function (idx, val) {\n              return (parseInt(val, 10) || 0) + 25;\n            });\n          });\n        }\n      });\n\n      rng.select();\n    };\n\n    /**\n     * @method outdent\n     *\n     * outdent\n     *\n     * @type command\n     */\n    this.outdent = function () {\n      var self = this;\n      var rng = range.create().wrapBodyInlineWithPara();\n\n      var paras = rng.nodes(dom.isPara, { includeAncestor: true });\n      var clustereds = list.clusterBy(paras, func.peq2('parentNode'));\n\n      $.each(clustereds, function (idx, paras) {\n        var head = list.head(paras);\n        if (dom.isLi(head)) {\n          self.releaseList([paras]);\n        } else {\n          $.each(paras, function (idx, para) {\n            $(para).css('marginLeft', function (idx, val) {\n              val = (parseInt(val, 10) || 0);\n              return val > 25 ? val - 25 : '';\n            });\n          });\n        }\n      });\n\n      rng.select();\n    };\n\n    /**\n     * @method toggleList\n     *\n     * toggle list\n     *\n     * @param {String} listName - OL or UL\n     */\n    this.toggleList = function (listName) {\n      var self = this;\n      var rng = range.create().wrapBodyInlineWithPara();\n\n      var paras = rng.nodes(dom.isPara, { includeAncestor: true });\n      var bookmark = rng.paraBookmark(paras);\n      var clustereds = list.clusterBy(paras, func.peq2('parentNode'));\n\n      // paragraph to list\n      if (list.find(paras, dom.isPurePara)) {\n        var wrappedParas = [];\n        $.each(clustereds, function (idx, paras) {\n          wrappedParas = wrappedParas.concat(self.wrapList(paras, listName));\n        });\n        paras = wrappedParas;\n      // list to paragraph or change list style\n      } else {\n        var diffLists = rng.nodes(dom.isList, {\n          includeAncestor: true\n        }).filter(function (listNode) {\n          return !$.nodeName(listNode, listName);\n        });\n\n        if (diffLists.length) {\n          $.each(diffLists, function (idx, listNode) {\n            dom.replace(listNode, listName);\n          });\n        } else {\n          paras = this.releaseList(clustereds, true);\n        }\n      }\n\n      range.createFromParaBookmark(bookmark, paras).select();\n    };\n\n    /**\n     * @method wrapList\n     *\n     * @param {Node[]} paras\n     * @param {String} listName\n     * @return {Node[]}\n     */\n    this.wrapList = function (paras, listName) {\n      var head = list.head(paras);\n      var last = list.last(paras);\n\n      var prevList = dom.isList(head.previousSibling) && head.previousSibling;\n      var nextList = dom.isList(last.nextSibling) && last.nextSibling;\n\n      var listNode = prevList || dom.insertAfter(dom.create(listName || 'UL'), last);\n\n      // P to LI\n      paras = $.map(paras, function (para) {\n        return dom.isPurePara(para) ? dom.replace(para, 'LI') : para;\n      });\n\n      // append to list(<ul>, <ol>)\n      dom.appendChildNodes(listNode, paras);\n\n      if (nextList) {\n        dom.appendChildNodes(listNode, list.from(nextList.childNodes));\n        dom.remove(nextList);\n      }\n\n      return paras;\n    };\n\n    /**\n     * @method releaseList\n     *\n     * @param {Array[]} clustereds\n     * @param {Boolean} isEscapseToBody\n     * @return {Node[]}\n     */\n    this.releaseList = function (clustereds, isEscapseToBody) {\n      var releasedParas = [];\n\n      $.each(clustereds, function (idx, paras) {\n        var head = list.head(paras);\n        var last = list.last(paras);\n\n        var headList = isEscapseToBody ? dom.lastAncestor(head, dom.isList) :\n                                         head.parentNode;\n        var lastList = headList.childNodes.length > 1 ? dom.splitTree(headList, {\n          node: last.parentNode,\n          offset: dom.position(last) + 1\n        }, {\n          isSkipPaddingBlankHTML: true\n        }) : null;\n\n        var middleList = dom.splitTree(headList, {\n          node: head.parentNode,\n          offset: dom.position(head)\n        }, {\n          isSkipPaddingBlankHTML: true\n        });\n\n        paras = isEscapseToBody ? dom.listDescendant(middleList, dom.isLi) :\n                                  list.from(middleList.childNodes).filter(dom.isLi);\n\n        // LI to P\n        if (isEscapseToBody || !dom.isList(headList.parentNode)) {\n          paras = $.map(paras, function (para) {\n            return dom.replace(para, 'P');\n          });\n        }\n\n        $.each(list.from(paras).reverse(), function (idx, para) {\n          dom.insertAfter(para, headList);\n        });\n\n        // remove empty lists\n        var rootLists = list.compact([headList, middleList, lastList]);\n        $.each(rootLists, function (idx, rootList) {\n          var listNodes = [rootList].concat(dom.listDescendant(rootList, dom.isList));\n          $.each(listNodes.reverse(), function (idx, listNode) {\n            if (!dom.nodeLength(listNode)) {\n              dom.remove(listNode, true);\n            }\n          });\n        });\n\n        releasedParas = releasedParas.concat(paras);\n      });\n\n      return releasedParas;\n    };\n  };\n\n\n  /**\n   * @class editing.Typing\n   *\n   * Typing\n   *\n   */\n  var Typing = function () {\n\n    // a Bullet instance to toggle lists off\n    var bullet = new Bullet();\n\n    /**\n     * insert tab\n     *\n     * @param {jQuery} $editable\n     * @param {WrappedRange} rng\n     * @param {Number} tabsize\n     */\n    this.insertTab = function ($editable, rng, tabsize) {\n      var tab = dom.createText(new Array(tabsize + 1).join(dom.NBSP_CHAR));\n      rng = rng.deleteContents();\n      rng.insertNode(tab, true);\n\n      rng = range.create(tab, tabsize);\n      rng.select();\n    };\n\n    /**\n     * insert paragraph\n     */\n    this.insertParagraph = function () {\n      var rng = range.create();\n\n      // deleteContents on range.\n      rng = rng.deleteContents();\n\n      // Wrap range if it needs to be wrapped by paragraph\n      rng = rng.wrapBodyInlineWithPara();\n\n      // finding paragraph\n      var splitRoot = dom.ancestor(rng.sc, dom.isPara);\n\n      var nextPara;\n      // on paragraph: split paragraph\n      if (splitRoot) {\n        // if it is an empty line with li\n        if (dom.isEmpty(splitRoot) && dom.isLi(splitRoot)) {\n          // disable UL/OL and escape!\n          bullet.toggleList(splitRoot.parentNode.nodeName);\n          return;\n        // if new line has content (not a line break)\n        } else {\n          nextPara = dom.splitTree(splitRoot, rng.getStartPoint());\n\n          var emptyAnchors = dom.listDescendant(splitRoot, dom.isEmptyAnchor);\n          emptyAnchors = emptyAnchors.concat(dom.listDescendant(nextPara, dom.isEmptyAnchor));\n\n          $.each(emptyAnchors, function (idx, anchor) {\n            dom.remove(anchor);\n          });\n        }\n      // no paragraph: insert empty paragraph\n      } else {\n        var next = rng.sc.childNodes[rng.so];\n        nextPara = $(dom.emptyPara)[0];\n        if (next) {\n          rng.sc.insertBefore(nextPara, next);\n        } else {\n          rng.sc.appendChild(nextPara);\n        }\n      }\n\n      range.create(nextPara, 0).normalize().select().focus().scrollIntoView();\n\n    };\n\n  };\n\n  /**\n   * @class editing.Table\n   *\n   * Table\n   *\n   */\n  var Table = function () {\n    /**\n     * handle tab key\n     *\n     * @param {WrappedRange} rng\n     * @param {Boolean} isShift\n     */\n    this.tab = function (rng, isShift) {\n      var cell = dom.ancestor(rng.commonAncestor(), dom.isCell);\n      var table = dom.ancestor(cell, dom.isTable);\n      var cells = dom.listDescendant(table, dom.isCell);\n\n      var nextCell = list[isShift ? 'prev' : 'next'](cells, cell);\n      if (nextCell) {\n        range.create(nextCell, 0).select();\n      }\n    };\n\n    /**\n     * create empty table element\n     *\n     * @param {Number} rowCount\n     * @param {Number} colCount\n     * @return {Node}\n     */\n    this.createTable = function (colCount, rowCount) {\n      var tds = [], tdHTML;\n      for (var idxCol = 0; idxCol < colCount; idxCol++) {\n        tds.push('<td>' + dom.blank + '</td>');\n      }\n      tdHTML = tds.join('');\n\n      var trs = [], trHTML;\n      for (var idxRow = 0; idxRow < rowCount; idxRow++) {\n        trs.push('<tr>' + tdHTML + '</tr>');\n      }\n      trHTML = trs.join('');\n      return $('<table class=\"table table-bordered\">' + trHTML + '</table>')[0];\n    };\n  };\n\n  /**\n   * @class editing.Editor\n   *\n   * Editor\n   *\n   */\n  var Editor = function (handler) {\n\n    var style = new Style();\n    var table = new Table();\n    var typing = new Typing();\n    var bullet = new Bullet();\n\n    /**\n     * @method createRange\n     *\n     * create range\n     *\n     * @param {jQuery} $editable\n     * @return {WrappedRange}\n     */\n    this.createRange = function ($editable) {\n      $editable.focus();\n      return range.create();\n    };\n\n    /**\n     * @method saveRange\n     *\n     * save current range\n     *\n     * @param {jQuery} $editable\n     * @param {Boolean} [thenCollapse=false]\n     */\n    this.saveRange = function ($editable, thenCollapse) {\n      $editable.focus();\n      $editable.data('range', range.create());\n      if (thenCollapse) {\n        range.create().collapse().select();\n      }\n    };\n\n    /**\n     * @method saveRange\n     *\n     * save current node list to $editable.data('childNodes')\n     *\n     * @param {jQuery} $editable\n     */\n    this.saveNode = function ($editable) {\n      // copy child node reference\n      var copy = [];\n      for (var key  = 0, len = $editable[0].childNodes.length; key < len; key++) {\n        copy.push($editable[0].childNodes[key]);\n      }\n      $editable.data('childNodes', copy);\n    };\n\n    /**\n     * @method restoreRange\n     *\n     * restore lately range\n     *\n     * @param {jQuery} $editable\n     */\n    this.restoreRange = function ($editable) {\n      var rng = $editable.data('range');\n      if (rng) {\n        rng.select();\n        $editable.focus();\n      }\n    };\n\n    /**\n     * @method restoreNode\n     *\n     * restore lately node list\n     *\n     * @param {jQuery} $editable\n     */\n    this.restoreNode = function ($editable) {\n      $editable.html('');\n      var child = $editable.data('childNodes');\n      for (var index = 0, len = child.length; index < len; index++) {\n        $editable[0].appendChild(child[index]);\n      }\n    };\n    /**\n     * @method currentStyle\n     *\n     * current style\n     *\n     * @param {Node} target\n     * @return {Boolean} false if range is no\n     */\n    this.currentStyle = function (target) {\n      var rng = range.create();\n      return rng ? rng.isOnEditable() && style.current(rng, target) : false;\n    };\n\n    var triggerOnBeforeChange = function ($editable) {\n      // TODO find holder\n      handler.bindCustomEvent(\n        $(), $editable.data('callbacks'), 'before.command'\n      ).call($editable.html(), $editable);\n    };\n\n    var triggerOnChange = function ($editable) {\n      // TODO find holder\n      handler.bindCustomEvent(\n        $(), $editable.data('callbacks'), 'change'\n      ).call($editable.html(), $editable);\n    };\n\n    /**\n     * @method undo\n     * undo\n     * @param {jQuery} $editable\n     */\n    this.undo = function ($editable) {\n      triggerOnBeforeChange($editable);\n      $editable.data('NoteHistory').undo();\n      triggerOnChange($editable);\n    };\n\n    /**\n     * @method redo\n     * redo\n     * @param {jQuery} $editable\n     */\n    this.redo = function ($editable) {\n      triggerOnBeforeChange($editable);\n      $editable.data('NoteHistory').redo();\n      triggerOnChange($editable);\n    };\n\n    /**\n     * @method beforeCommand\n     * before command\n     * @param {jQuery} $editable\n     */\n    var beforeCommand = this.beforeCommand = function ($editable) {\n      triggerOnBeforeChange($editable);\n    };\n\n    /**\n     * @method afterCommand\n     * after command\n     * @param {jQuery} $editable\n     * @param {Boolean} isPreventTrigger\n     */\n    var afterCommand = this.afterCommand = function ($editable, isPreventTrigger) {\n      $editable.data('NoteHistory').recordUndo();\n      if (!isPreventTrigger) {\n        triggerOnChange($editable);\n      }\n    };\n\n    /**\n     * @method bold\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method italic\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method underline\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method strikethrough\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method formatBlock\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method superscript\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method subscript\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method justifyLeft\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method justifyCenter\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method justifyRight\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method justifyFull\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method formatBlock\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method removeFormat\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method backColor\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method foreColor\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method insertHorizontalRule\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /**\n     * @method fontName\n     *\n     * change font name\n     *\n     * @param {jQuery} $editable\n     * @param {Mixed} value\n     */\n\n    /* jshint ignore:start */\n    // native commands(with execCommand), generate function for execCommand\n    var commands = ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript',\n                    'justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull',\n                    'formatBlock', 'removeFormat',\n                    'backColor', 'foreColor', 'insertHorizontalRule', 'fontName'];\n\n    for (var idx = 0, len = commands.length; idx < len; idx ++) {\n      this[commands[idx]] = (function (sCmd) {\n        return function ($editable, value) {\n          beforeCommand($editable);\n\n          document.execCommand(sCmd, false, value);\n\n          afterCommand($editable, true);\n        };\n      })(commands[idx]);\n    }\n    /* jshint ignore:end */\n\n    /**\n     * @method tab\n     *\n     * handle tab key\n     *\n     * @param {jQuery} $editable\n     * @param {Object} options\n     */\n    this.tab = function ($editable, options) {\n      var rng = range.create();\n      if (rng.isCollapsed() && rng.isOnCell()) {\n        table.tab(rng);\n      } else {\n        beforeCommand($editable);\n        typing.insertTab($editable, rng, options.tabsize);\n        afterCommand($editable);\n      }\n    };\n\n    /**\n     * @method untab\n     *\n     * handle shift+tab key\n     *\n     */\n    this.untab = function () {\n      var rng = range.create();\n      if (rng.isCollapsed() && rng.isOnCell()) {\n        table.tab(rng, true);\n      }\n    };\n\n    /**\n     * @method insertParagraph\n     *\n     * insert paragraph\n     *\n     * @param {Node} $editable\n     */\n    this.insertParagraph = function ($editable) {\n      beforeCommand($editable);\n      typing.insertParagraph($editable);\n      afterCommand($editable);\n    };\n\n    /**\n     * @method insertOrderedList\n     *\n     * @param {jQuery} $editable\n     */\n    this.insertOrderedList = function ($editable) {\n      beforeCommand($editable);\n      bullet.insertOrderedList($editable);\n      afterCommand($editable);\n    };\n\n    /**\n     * @param {jQuery} $editable\n     */\n    this.insertUnorderedList = function ($editable) {\n      beforeCommand($editable);\n      bullet.insertUnorderedList($editable);\n      afterCommand($editable);\n    };\n\n    /**\n     * @param {jQuery} $editable\n     */\n    this.indent = function ($editable) {\n      beforeCommand($editable);\n      bullet.indent($editable);\n      afterCommand($editable);\n    };\n\n    /**\n     * @param {jQuery} $editable\n     */\n    this.outdent = function ($editable) {\n      beforeCommand($editable);\n      bullet.outdent($editable);\n      afterCommand($editable);\n    };\n\n    /**\n     * insert image\n     *\n     * @param {jQuery} $editable\n     * @param {String} sUrl\n     */\n    this.insertImage = function ($editable, sUrl, filename) {\n      async.createImage(sUrl, filename).then(function ($image) {\n        beforeCommand($editable);\n        $image.css({\n          display: '',\n          width: Math.min($editable.width(), $image.width())\n        });\n        range.create().insertNode($image[0]);\n        range.createFromNode($image[0]).collapse().select();\n        afterCommand($editable);\n      }).fail(function () {\n        var callbacks = $editable.data('callbacks');\n        if (callbacks.onImageUploadError) {\n          callbacks.onImageUploadError();\n        }\n      });\n    };\n\n    /**\n     * @method insertNode\n     * insert node\n     * @param {Node} $editable\n     * @param {Node} node\n     */\n    this.insertNode = function ($editable, node) {\n      beforeCommand($editable);\n      var rng = this.createRange($editable);\n      rng.insertNode(node);\n      range.createFromNode(node).collapse().select();\n      afterCommand($editable);\n    };\n\n    /**\n     * insert text\n     * @param {Node} $editable\n     * @param {String} text\n     */\n    this.insertText = function ($editable, text) {\n      beforeCommand($editable);\n      var rng = this.createRange($editable);\n      var textNode = rng.insertNode(dom.createText(text));\n      range.create(textNode, dom.nodeLength(textNode)).select();\n      afterCommand($editable);\n    };\n\n    /**\n     * paste HTML\n     * @param {Node} $editable\n     * @param {String} markup\n     */\n    this.pasteHTML = function ($editable, markup) {\n      beforeCommand($editable);\n      var rng = this.createRange($editable);\n      var contents = rng.pasteHTML(markup);\n      range.createFromNode(list.last(contents)).collapse().select();\n      afterCommand($editable);\n    };\n\n    /**\n     * formatBlock\n     *\n     * @param {jQuery} $editable\n     * @param {String} tagName\n     */\n    this.formatBlock = function ($editable, tagName) {\n      beforeCommand($editable);\n      // [workaround] for MSIE, IE need `<`\n      tagName = agent.isMSIE ? '<' + tagName + '>' : tagName;\n      document.execCommand('FormatBlock', false, tagName);\n      afterCommand($editable);\n    };\n\n    this.formatPara = function ($editable) {\n      beforeCommand($editable);\n      this.formatBlock($editable, 'P');\n      afterCommand($editable);\n    };\n\n    /* jshint ignore:start */\n    for (var idx = 1; idx <= 6; idx ++) {\n      this['formatH' + idx] = function (idx) {\n        return function ($editable) {\n          this.formatBlock($editable, 'H' + idx);\n        };\n      }(idx);\n    };\n    /* jshint ignore:end */\n\n    /**\n     * fontSize\n     *\n     * @param {jQuery} $editable\n     * @param {String} value - px\n     */\n    this.fontSize = function ($editable, value) {\n      beforeCommand($editable);\n\n      var rng = this.createRange($editable);\n      var spans = style.styleNodes(rng);\n      $.each(spans, function (idx, span) {\n        $(span).css({\n          'font-size': value + 'px'\n        });\n      });\n\n      afterCommand($editable);\n    };\n\n    /**\n     * lineHeight\n     * @param {jQuery} $editable\n     * @param {String} value\n     */\n    this.lineHeight = function ($editable, value) {\n      beforeCommand($editable);\n      style.stylePara(range.create(), {\n        lineHeight: value\n      });\n      afterCommand($editable);\n    };\n\n    /**\n     * unlink\n     *\n     * @type command\n     *\n     * @param {jQuery} $editable\n     */\n    this.unlink = function ($editable) {\n      var rng = range.create();\n      if (rng.isOnAnchor()) {\n        var anchor = dom.ancestor(rng.sc, dom.isAnchor);\n        rng = range.createFromNode(anchor);\n        rng.select();\n\n        beforeCommand($editable);\n        document.execCommand('unlink');\n        afterCommand($editable);\n      }\n    };\n\n    /**\n     * create link (command)\n     *\n     * @param {jQuery} $editable\n     * @param {Object} linkInfo\n     * @param {Object} options\n     */\n    this.createLink = function ($editable, linkInfo, options) {\n      var linkUrl = linkInfo.url;\n      var linkText = linkInfo.text;\n      var isNewWindow = linkInfo.newWindow;\n      var rng = linkInfo.range;\n      var isTextChanged = rng.toString() !== linkText;\n\n      beforeCommand($editable);\n\n      if (options.onCreateLink) {\n        linkUrl = options.onCreateLink(linkUrl);\n      }\n\n      var anchors;\n      if (isTextChanged) {\n        // Create a new link when text changed.\n        var anchor = rng.insertNode($('<A>' + linkText + '</A>')[0]);\n        anchors = [anchor];\n      } else {\n        anchors = style.styleNodes(rng, {\n          nodeName: 'A',\n          expandClosestSibling: true,\n          onlyPartialContains: true\n        });\n      }\n\n      $.each(anchors, function (idx, anchor) {\n        $(anchor).attr('href', linkUrl);\n        if (isNewWindow) {\n          $(anchor).attr('target', '_blank');\n        } else {\n          $(anchor).removeAttr('target');\n        }\n      });\n\n      var startRange = range.createFromNode(list.head(anchors)).collapse(true);\n      var startPoint = startRange.getStartPoint();\n      var endRange = range.createFromNode(list.last(anchors)).collapse();\n      var endPoint = endRange.getEndPoint();\n\n      range.create(\n        startPoint.node,\n        startPoint.offset,\n        endPoint.node,\n        endPoint.offset\n      ).select();\n\n      afterCommand($editable);\n    };\n\n    /**\n     * returns link info\n     *\n     * @return {Object}\n     * @return {WrappedRange} return.range\n     * @return {String} return.text\n     * @return {Boolean} [return.isNewWindow=true]\n     * @return {String} [return.url=\"\"]\n     */\n    this.getLinkInfo = function ($editable) {\n      $editable.focus();\n\n      var rng = range.create().expand(dom.isAnchor);\n\n      // Get the first anchor on range(for edit).\n      var $anchor = $(list.head(rng.nodes(dom.isAnchor)));\n\n      return {\n        range: rng,\n        text: rng.toString(),\n        isNewWindow: $anchor.length ? $anchor.attr('target') === '_blank' : false,\n        url: $anchor.length ? $anchor.attr('href') : ''\n      };\n    };\n\n    /**\n     * setting color\n     *\n     * @param {Node} $editable\n     * @param {Object} sObjColor  color code\n     * @param {String} sObjColor.foreColor foreground color\n     * @param {String} sObjColor.backColor background color\n     */\n    this.color = function ($editable, sObjColor) {\n      var oColor = JSON.parse(sObjColor);\n      var foreColor = oColor.foreColor, backColor = oColor.backColor;\n\n      beforeCommand($editable);\n\n      if (foreColor) { document.execCommand('foreColor', false, foreColor); }\n      if (backColor) { document.execCommand('backColor', false, backColor); }\n\n      afterCommand($editable);\n    };\n\n    /**\n     * insert Table\n     *\n     * @param {Node} $editable\n     * @param {String} sDim dimension of table (ex : \"5x5\")\n     */\n    this.insertTable = function ($editable, sDim) {\n      var dimension = sDim.split('x');\n      beforeCommand($editable);\n\n      var rng = range.create();\n      rng = rng.deleteContents();\n      rng.insertNode(table.createTable(dimension[0], dimension[1]));\n      afterCommand($editable);\n    };\n\n    /**\n     * float me\n     *\n     * @param {jQuery} $editable\n     * @param {String} value\n     * @param {jQuery} $target\n     */\n    this.floatMe = function ($editable, value, $target) {\n      beforeCommand($editable);\n      $target.css('float', value);\n      afterCommand($editable);\n    };\n\n    /**\n     * change image shape\n     *\n     * @param {jQuery} $editable\n     * @param {String} value css class\n     * @param {Node} $target\n     */\n    this.imageShape = function ($editable, value, $target) {\n      beforeCommand($editable);\n\n      $target.removeClass('img-rounded img-circle img-thumbnail');\n\n      if (value) {\n        $target.addClass(value);\n      }\n\n      afterCommand($editable);\n    };\n\n    /**\n     * resize overlay element\n     * @param {jQuery} $editable\n     * @param {String} value\n     * @param {jQuery} $target - target element\n     */\n    this.resize = function ($editable, value, $target) {\n      beforeCommand($editable);\n\n      $target.css({\n        width: value * 100 + '%',\n        height: ''\n      });\n\n      afterCommand($editable);\n    };\n\n    /**\n     * @param {Position} pos\n     * @param {jQuery} $target - target element\n     * @param {Boolean} [bKeepRatio] - keep ratio\n     */\n    this.resizeTo = function (pos, $target, bKeepRatio) {\n      var imageSize;\n      if (bKeepRatio) {\n        var newRatio = pos.y / pos.x;\n        var ratio = $target.data('ratio');\n        imageSize = {\n          width: ratio > newRatio ? pos.x : pos.y / ratio,\n          height: ratio > newRatio ? pos.x * ratio : pos.y\n        };\n      } else {\n        imageSize = {\n          width: pos.x,\n          height: pos.y\n        };\n      }\n\n      $target.css(imageSize);\n    };\n\n    /**\n     * remove media object\n     *\n     * @param {jQuery} $editable\n     * @param {String} value - dummy argument (for keep interface)\n     * @param {jQuery} $target - target element\n     */\n    this.removeMedia = function ($editable, value, $target) {\n      beforeCommand($editable);\n      $target.detach();\n\n      handler.bindCustomEvent(\n        $(), $editable.data('callbacks'), 'media.delete'\n      ).call($target, this.$editable);\n\n      afterCommand($editable);\n    };\n\n    /**\n     * set focus\n     *\n     * @param $editable\n     */\n    this.focus = function ($editable) {\n      $editable.focus();\n\n      // [workaround] for firefox bug http://goo.gl/lVfAaI\n      if (agent.isFF) {\n        range.createFromNode($editable[0].firstChild || $editable[0]).collapse().select();\n      }\n    };\n  };\n\n  /**\n   * @class module.Button\n   *\n   * Button\n   */\n  var Button = function () {\n    /**\n     * update button status\n     *\n     * @param {jQuery} $container\n     * @param {Object} styleInfo\n     */\n    this.update = function ($container, styleInfo) {\n      /**\n       * handle dropdown's check mark (for fontname, fontsize, lineHeight).\n       * @param {jQuery} $btn\n       * @param {Number} value\n       */\n      var checkDropdownMenu = function ($btn, value) {\n        $btn.find('.dropdown-menu li a').each(function () {\n          // always compare string to avoid creating another func.\n          var isChecked = ($(this).data('value') + '') === (value + '');\n          this.className = isChecked ? 'checked' : '';\n        });\n      };\n\n      /**\n       * update button state(active or not).\n       *\n       * @private\n       * @param {String} selector\n       * @param {Function} pred\n       */\n      var btnState = function (selector, pred) {\n        var $btn = $container.find(selector);\n        $btn.toggleClass('active', pred());\n      };\n\n      if (styleInfo.image) {\n        var $img = $(styleInfo.image);\n\n        btnState('button[data-event=\"imageShape\"][data-value=\"img-rounded\"]', function () {\n          return $img.hasClass('img-rounded');\n        });\n        btnState('button[data-event=\"imageShape\"][data-value=\"img-circle\"]', function () {\n          return $img.hasClass('img-circle');\n        });\n        btnState('button[data-event=\"imageShape\"][data-value=\"img-thumbnail\"]', function () {\n          return $img.hasClass('img-thumbnail');\n        });\n        btnState('button[data-event=\"imageShape\"]:not([data-value])', function () {\n          return !$img.is('.img-rounded, .img-circle, .img-thumbnail');\n        });\n\n        var imgFloat = $img.css('float');\n        btnState('button[data-event=\"floatMe\"][data-value=\"left\"]', function () {\n          return imgFloat === 'left';\n        });\n        btnState('button[data-event=\"floatMe\"][data-value=\"right\"]', function () {\n          return imgFloat === 'right';\n        });\n        btnState('button[data-event=\"floatMe\"][data-value=\"none\"]', function () {\n          return imgFloat !== 'left' && imgFloat !== 'right';\n        });\n\n        var style = $img.attr('style');\n        btnState('button[data-event=\"resize\"][data-value=\"1\"]', function () {\n          return !!/(^|\\s)(max-)?width\\s*:\\s*100%/.test(style);\n        });\n        btnState('button[data-event=\"resize\"][data-value=\"0.5\"]', function () {\n          return !!/(^|\\s)(max-)?width\\s*:\\s*50%/.test(style);\n        });\n        btnState('button[data-event=\"resize\"][data-value=\"0.25\"]', function () {\n          return !!/(^|\\s)(max-)?width\\s*:\\s*25%/.test(style);\n        });\n        return;\n      }\n\n      // fontname\n      var $fontname = $container.find('.note-fontname');\n      if ($fontname.length) {\n        var selectedFont = styleInfo['font-family'];\n        if (!!selectedFont) {\n\n          var list = selectedFont.split(',');\n          for (var i = 0, len = list.length; i < len; i++) {\n            selectedFont = list[i].replace(/[\\'\\\"]/g, '').replace(/\\s+$/, '').replace(/^\\s+/, '');\n            if (agent.isFontInstalled(selectedFont)) {\n              break;\n            }\n          }\n          \n          $fontname.find('.note-current-fontname').text(selectedFont);\n          checkDropdownMenu($fontname, selectedFont);\n\n        }\n      }\n\n      // fontsize\n      var $fontsize = $container.find('.note-fontsize');\n      $fontsize.find('.note-current-fontsize').text(styleInfo['font-size']);\n      checkDropdownMenu($fontsize, parseFloat(styleInfo['font-size']));\n\n      // lineheight\n      var $lineHeight = $container.find('.note-height');\n      checkDropdownMenu($lineHeight, parseFloat(styleInfo['line-height']));\n\n      btnState('button[data-event=\"bold\"]', function () {\n        return styleInfo['font-bold'] === 'bold';\n      });\n      btnState('button[data-event=\"italic\"]', function () {\n        return styleInfo['font-italic'] === 'italic';\n      });\n      btnState('button[data-event=\"underline\"]', function () {\n        return styleInfo['font-underline'] === 'underline';\n      });\n      btnState('button[data-event=\"strikethrough\"]', function () {\n        return styleInfo['font-strikethrough'] === 'strikethrough';\n      });\n      btnState('button[data-event=\"superscript\"]', function () {\n        return styleInfo['font-superscript'] === 'superscript';\n      });\n      btnState('button[data-event=\"subscript\"]', function () {\n        return styleInfo['font-subscript'] === 'subscript';\n      });\n      btnState('button[data-event=\"justifyLeft\"]', function () {\n        return styleInfo['text-align'] === 'left' || styleInfo['text-align'] === 'start';\n      });\n      btnState('button[data-event=\"justifyCenter\"]', function () {\n        return styleInfo['text-align'] === 'center';\n      });\n      btnState('button[data-event=\"justifyRight\"]', function () {\n        return styleInfo['text-align'] === 'right';\n      });\n      btnState('button[data-event=\"justifyFull\"]', function () {\n        return styleInfo['text-align'] === 'justify';\n      });\n      btnState('button[data-event=\"insertUnorderedList\"]', function () {\n        return styleInfo['list-style'] === 'unordered';\n      });\n      btnState('button[data-event=\"insertOrderedList\"]', function () {\n        return styleInfo['list-style'] === 'ordered';\n      });\n    };\n\n    /**\n     * update recent color\n     *\n     * @param {Node} button\n     * @param {String} eventName\n     * @param {Mixed} value\n     */\n    this.updateRecentColor = function (button, eventName, value) {\n      var $color = $(button).closest('.note-color');\n      var $recentColor = $color.find('.note-recent-color');\n      var colorInfo = JSON.parse($recentColor.attr('data-value'));\n      colorInfo[eventName] = value;\n      $recentColor.attr('data-value', JSON.stringify(colorInfo));\n      var sKey = eventName === 'backColor' ? 'background-color' : 'color';\n      $recentColor.find('i').css(sKey, value);\n    };\n  };\n\n  /**\n   * @class module.Toolbar\n   *\n   * Toolbar\n   */\n  var Toolbar = function () {\n    var button = new Button();\n\n    this.update = function ($toolbar, styleInfo) {\n      button.update($toolbar, styleInfo);\n    };\n\n    /**\n     * @param {Node} button\n     * @param {String} eventName\n     * @param {String} value\n     */\n    this.updateRecentColor = function (buttonNode, eventName, value) {\n      button.updateRecentColor(buttonNode, eventName, value);\n    };\n\n    /**\n     * activate buttons exclude codeview\n     * @param {jQuery} $toolbar\n     */\n    this.activate = function ($toolbar) {\n      $toolbar.find('button')\n              .not('button[data-event=\"codeview\"]')\n              .removeClass('disabled');\n    };\n\n    /**\n     * deactivate buttons exclude codeview\n     * @param {jQuery} $toolbar\n     */\n    this.deactivate = function ($toolbar) {\n      $toolbar.find('button')\n              .not('button[data-event=\"codeview\"]')\n              .addClass('disabled');\n    };\n\n    /**\n     * @param {jQuery} $container\n     * @param {Boolean} [bFullscreen=false]\n     */\n    this.updateFullscreen = function ($container, bFullscreen) {\n      var $btn = $container.find('button[data-event=\"fullscreen\"]');\n      $btn.toggleClass('active', bFullscreen);\n    };\n\n    /**\n     * @param {jQuery} $container\n     * @param {Boolean} [isCodeview=false]\n     */\n    this.updateCodeview = function ($container, isCodeview) {\n      var $btn = $container.find('button[data-event=\"codeview\"]');\n      $btn.toggleClass('active', isCodeview);\n\n      if (isCodeview) {\n        this.deactivate($container);\n      } else {\n        this.activate($container);\n      }\n    };\n\n    /**\n     * get button in toolbar \n     *\n     * @param {jQuery} $editable\n     * @param {String} name\n     * @return {jQuery}\n     */\n    this.get = function ($editable, name) {\n      var $toolbar = dom.makeLayoutInfo($editable).toolbar();\n\n      return $toolbar.find('[data-name=' + name + ']');\n    };\n\n    /**\n     * set button state\n     * @param {jQuery} $editable\n     * @param {String} name\n     * @param {Boolean} [isActive=true]\n     */\n    this.setButtonState = function ($editable, name, isActive) {\n      isActive = (isActive === false) ? false : true;\n\n      var $button = this.get($editable, name);\n      $button.toggleClass('active', isActive);\n    };\n  };\n\n  var EDITABLE_PADDING = 24;\n\n  var Statusbar = function () {\n    var $document = $(document);\n\n    this.attach = function (layoutInfo, options) {\n      if (!options.disableResizeEditor) {\n        layoutInfo.statusbar().on('mousedown', hStatusbarMousedown);\n      }\n    };\n\n    /**\n     * `mousedown` event handler on statusbar\n     *\n     * @param {MouseEvent} event\n     */\n    var hStatusbarMousedown = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      var $editable = dom.makeLayoutInfo(event.target).editable();\n      var editableTop = $editable.offset().top - $document.scrollTop();\n\n      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\n      var options = layoutInfo.editor().data('options');\n\n      $document.on('mousemove', function (event) {\n        var nHeight = event.clientY - (editableTop + EDITABLE_PADDING);\n\n        nHeight = (options.minHeight > 0) ? Math.max(nHeight, options.minHeight) : nHeight;\n        nHeight = (options.maxHeight > 0) ? Math.min(nHeight, options.maxHeight) : nHeight;\n\n        $editable.height(nHeight);\n      }).one('mouseup', function () {\n        $document.off('mousemove');\n      });\n    };\n  };\n\n  /**\n   * @class module.Popover\n   *\n   * Popover (http://getbootstrap.com/javascript/#popovers)\n   *\n   */\n  var Popover = function () {\n    var button = new Button();\n\n    /**\n     * returns position from placeholder\n     *\n     * @private\n     * @param {Node} placeholder\n     * @param {Boolean} isAirMode\n     * @return {Object}\n     * @return {Number} return.left\n     * @return {Number} return.top\n     */\n    var posFromPlaceholder = function (placeholder, isAirMode) {\n      var $placeholder = $(placeholder);\n      var pos = isAirMode ? $placeholder.offset() : $placeholder.position();\n      var height = $placeholder.outerHeight(true); // include margin\n\n      // popover below placeholder.\n      return {\n        left: pos.left,\n        top: pos.top + height\n      };\n    };\n\n    /**\n     * show popover\n     *\n     * @private\n     * @param {jQuery} popover\n     * @param {Position} pos\n     */\n    var showPopover = function ($popover, pos) {\n      $popover.css({\n        display: 'block',\n        left: pos.left,\n        top: pos.top\n      });\n    };\n\n    var PX_POPOVER_ARROW_OFFSET_X = 20;\n\n    /**\n     * update current state\n     * @param {jQuery} $popover - popover container\n     * @param {Object} styleInfo - style object\n     * @param {Boolean} isAirMode\n     */\n    this.update = function ($popover, styleInfo, isAirMode) {\n      button.update($popover, styleInfo);\n\n      var $linkPopover = $popover.find('.note-link-popover');\n      if (styleInfo.anchor) {\n        var $anchor = $linkPopover.find('a');\n        var href = $(styleInfo.anchor).attr('href');\n        var target = $(styleInfo.anchor).attr('target');\n        $anchor.attr('href', href).html(href);\n        if (!target) {\n          $anchor.removeAttr('target');\n        } else {\n          $anchor.attr('target', '_blank');\n        }\n        showPopover($linkPopover, posFromPlaceholder(styleInfo.anchor, isAirMode));\n      } else {\n        $linkPopover.hide();\n      }\n\n      var $imagePopover = $popover.find('.note-image-popover');\n      if (styleInfo.image) {\n        showPopover($imagePopover, posFromPlaceholder(styleInfo.image, isAirMode));\n      } else {\n        $imagePopover.hide();\n      }\n\n      var $airPopover = $popover.find('.note-air-popover');\n      if (isAirMode && !styleInfo.range.isCollapsed()) {\n        var rect = list.last(styleInfo.range.getClientRects());\n        if (rect) {\n          var bnd = func.rect2bnd(rect);\n          showPopover($airPopover, {\n            left: Math.max(bnd.left + bnd.width / 2 - PX_POPOVER_ARROW_OFFSET_X, 0),\n            top: bnd.top + bnd.height\n          });\n        }\n      } else {\n        $airPopover.hide();\n      }\n    };\n\n    /**\n     * @param {Node} button\n     * @param {String} eventName\n     * @param {String} value\n     */\n    this.updateRecentColor = function (button, eventName, value) {\n      button.updateRecentColor(button, eventName, value);\n    };\n\n    /**\n     * hide all popovers\n     * @param {jQuery} $popover - popover container\n     */\n    this.hide = function ($popover) {\n      $popover.children().hide();\n    };\n  };\n\n  /**\n   * @class module.Handle\n   *\n   * Handle\n   */\n  var Handle = function (handler) {\n    var $document = $(document);\n\n    /**\n     * `mousedown` event handler on $handle\n     *  - controlSizing: resize image\n     *\n     * @param {MouseEvent} event\n     */\n    var hHandleMousedown = function (event) {\n      if (dom.isControlSizing(event.target)) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        var layoutInfo = dom.makeLayoutInfo(event.target),\n            $handle = layoutInfo.handle(),\n            $popover = layoutInfo.popover(),\n            $editable = layoutInfo.editable(),\n            $editor = layoutInfo.editor();\n\n        var target = $handle.find('.note-control-selection').data('target'),\n            $target = $(target), posStart = $target.offset(),\n            scrollTop = $document.scrollTop();\n\n        var isAirMode = $editor.data('options').airMode;\n\n        $document.on('mousemove', function (event) {\n          handler.invoke('editor.resizeTo', {\n            x: event.clientX - posStart.left,\n            y: event.clientY - (posStart.top - scrollTop)\n          }, $target, !event.shiftKey);\n\n          handler.invoke('handle.update', $handle, {image: target}, isAirMode);\n          handler.invoke('popover.update', $popover, {image: target}, isAirMode);\n        }).one('mouseup', function () {\n          $document.off('mousemove');\n          handler.invoke('editor.afterCommand', $editable);\n        });\n\n        if (!$target.data('ratio')) { // original ratio.\n          $target.data('ratio', $target.height() / $target.width());\n        }\n      }\n    };\n\n    this.attach = function (layoutInfo) {\n      layoutInfo.handle().on('mousedown', hHandleMousedown);\n    };\n\n    /**\n     * update handle\n     * @param {jQuery} $handle\n     * @param {Object} styleInfo\n     * @param {Boolean} isAirMode\n     */\n    this.update = function ($handle, styleInfo, isAirMode) {\n      var $selection = $handle.find('.note-control-selection');\n      if (styleInfo.image) {\n        var $image = $(styleInfo.image);\n        var pos = isAirMode ? $image.offset() : $image.position();\n\n        // include margin\n        var imageSize = {\n          w: $image.outerWidth(true),\n          h: $image.outerHeight(true)\n        };\n\n        $selection.css({\n          display: 'block',\n          left: pos.left,\n          top: pos.top,\n          width: imageSize.w,\n          height: imageSize.h\n        }).data('target', styleInfo.image); // save current image element.\n        var sizingText = imageSize.w + 'x' + imageSize.h;\n        $selection.find('.note-control-selection-info').text(sizingText);\n      } else {\n        $selection.hide();\n      }\n    };\n\n    /**\n     * hide\n     *\n     * @param {jQuery} $handle\n     */\n    this.hide = function ($handle) {\n      $handle.children().hide();\n    };\n  };\n\n  var Fullscreen = function (handler) {\n    var $window = $(window);\n    var $scrollbar = $('html, body');\n\n    /**\n     * toggle fullscreen\n     *\n     * @param {Object} layoutInfo\n     */\n    this.toggle = function (layoutInfo) {\n\n      var $editor = layoutInfo.editor(),\n          $toolbar = layoutInfo.toolbar(),\n          $editable = layoutInfo.editable(),\n          $codable = layoutInfo.codable();\n\n      var resize = function (size) {\n        $editable.css('height', size.h);\n        $codable.css('height', size.h);\n        if ($codable.data('cmeditor')) {\n          $codable.data('cmeditor').setsize(null, size.h);\n        }\n      };\n\n      $editor.toggleClass('fullscreen');\n      var isFullscreen = $editor.hasClass('fullscreen');\n      if (isFullscreen) {\n        $editable.data('orgheight', $editable.css('height'));\n\n        $window.on('resize', function () {\n          resize({\n            h: $window.height() - $toolbar.outerHeight()\n          });\n        }).trigger('resize');\n\n        $scrollbar.css('overflow', 'hidden');\n      } else {\n        $window.off('resize');\n        resize({\n          h: $editable.data('orgheight')\n        });\n        $scrollbar.css('overflow', 'visible');\n      }\n\n      handler.invoke('toolbar.updateFullscreen', $toolbar, isFullscreen);\n    };\n  };\n\n\n  var CodeMirror;\n  if (agent.hasCodeMirror) {\n    if (agent.isSupportAmd) {\n      require(['CodeMirror'], function (cm) {\n        CodeMirror = cm;\n      });\n    } else {\n      CodeMirror = window.CodeMirror;\n    }\n  }\n\n  /**\n   * @class Codeview\n   */\n  var Codeview = function (handler) {\n\n    this.sync = function (layoutInfo) {\n      var isCodeview = handler.invoke('codeview.isActivated', layoutInfo);\n      if (isCodeview && agent.hasCodeMirror) {\n        layoutInfo.codable().data('cmEditor').save();\n      }\n    };\n\n    /**\n     * @param {Object} layoutInfo\n     * @return {Boolean}\n     */\n    this.isActivated = function (layoutInfo) {\n      var $editor = layoutInfo.editor();\n      return $editor.hasClass('codeview');\n    };\n\n    /**\n     * toggle codeview\n     *\n     * @param {Object} layoutInfo\n     */\n    this.toggle = function (layoutInfo) {\n      if (this.isActivated(layoutInfo)) {\n        this.deactivate(layoutInfo);\n      } else {\n        this.activate(layoutInfo);\n      }\n    };\n\n    /**\n     * activate code view\n     *\n     * @param {Object} layoutInfo\n     */\n    this.activate = function (layoutInfo) {\n      var $editor = layoutInfo.editor(),\n          $toolbar = layoutInfo.toolbar(),\n          $editable = layoutInfo.editable(),\n          $codable = layoutInfo.codable(),\n          $popover = layoutInfo.popover(),\n          $handle = layoutInfo.handle();\n\n      var options = $editor.data('options');\n\n      $codable.val(dom.html($editable, options.prettifyHtml));\n      $codable.height($editable.height());\n\n      handler.invoke('toolbar.updateCodeview', $toolbar, true);\n      handler.invoke('popover.hide', $popover);\n      handler.invoke('handle.hide', $handle);\n\n      $editor.addClass('codeview');\n\n      $codable.focus();\n\n      // activate CodeMirror as codable\n      if (agent.hasCodeMirror) {\n        var cmEditor = CodeMirror.fromTextArea($codable[0], options.codemirror);\n\n        // CodeMirror TernServer\n        if (options.codemirror.tern) {\n          var server = new CodeMirror.TernServer(options.codemirror.tern);\n          cmEditor.ternServer = server;\n          cmEditor.on('cursorActivity', function (cm) {\n            server.updateArgHints(cm);\n          });\n        }\n\n        // CodeMirror hasn't Padding.\n        cmEditor.setSize(null, $editable.outerHeight());\n        $codable.data('cmEditor', cmEditor);\n      }\n    };\n\n    /**\n     * deactivate code view\n     *\n     * @param {Object} layoutInfo\n     */\n    this.deactivate = function (layoutInfo) {\n      var $editor = layoutInfo.editor(),\n          $toolbar = layoutInfo.toolbar(),\n          $editable = layoutInfo.editable(),\n          $codable = layoutInfo.codable();\n\n      var options = $editor.data('options');\n\n      // deactivate CodeMirror as codable\n      if (agent.hasCodeMirror) {\n        var cmEditor = $codable.data('cmEditor');\n        $codable.val(cmEditor.getValue());\n        cmEditor.toTextArea();\n      }\n\n      $editable.html(dom.value($codable, options.prettifyHtml) || dom.emptyPara);\n      $editable.height(options.height ? $codable.height() : 'auto');\n      $editor.removeClass('codeview');\n\n      $editable.focus();\n\n      handler.invoke('toolbar.updateCodeview', $toolbar, false);\n    };\n  };\n\n  var DragAndDrop = function (handler) {\n    var $document = $(document);\n\n    /**\n     * attach Drag and Drop Events\n     *\n     * @param {Object} layoutInfo - layout Informations\n     * @param {Object} options\n     */\n    this.attach = function (layoutInfo, options) {\n      if (options.airMode || options.disableDragAndDrop) {\n        // prevent default drop event\n        $document.on('drop', function (e) {\n          e.preventDefault();\n        });\n      } else {\n        this.attachDragAndDropEvent(layoutInfo, options);\n      }\n    };\n\n    /**\n     * attach Drag and Drop Events\n     *\n     * @param {Object} layoutInfo - layout Informations\n     * @param {Object} options\n     */\n    this.attachDragAndDropEvent = function (layoutInfo, options) {\n      var collection = $(),\n          $editor = layoutInfo.editor(),\n          $dropzone = layoutInfo.dropzone(),\n          $dropzoneMessage = $dropzone.find('.note-dropzone-message');\n\n      // show dropzone on dragenter when dragging a object to document\n      // -but only if the editor is visible, i.e. has a positive width and height\n      $document.on('dragenter', function (e) {\n        var isCodeview = handler.invoke('codeview.isActivated', layoutInfo);\n        var hasEditorSize = $editor.width() > 0 && $editor.height() > 0;\n        if (!isCodeview && !collection.length && hasEditorSize) {\n          $editor.addClass('dragover');\n          $dropzone.width($editor.width());\n          $dropzone.height($editor.height());\n          $dropzoneMessage.text(options.langInfo.image.dragImageHere);\n        }\n        collection = collection.add(e.target);\n      }).on('dragleave', function (e) {\n        collection = collection.not(e.target);\n        if (!collection.length) {\n          $editor.removeClass('dragover');\n        }\n      }).on('drop', function () {\n        collection = $();\n        $editor.removeClass('dragover');\n      });\n\n      // change dropzone's message on hover.\n      $dropzone.on('dragenter', function () {\n        $dropzone.addClass('hover');\n        $dropzoneMessage.text(options.langInfo.image.dropImage);\n      }).on('dragleave', function () {\n        $dropzone.removeClass('hover');\n        $dropzoneMessage.text(options.langInfo.image.dragImageHere);\n      });\n\n      // attach dropImage\n      $dropzone.on('drop', function (event) {\n        event.preventDefault();\n\n        var dataTransfer = event.originalEvent.dataTransfer;\n        var html = dataTransfer.getData('text/html');\n        var text = dataTransfer.getData('text/plain');\n\n        var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\n\n        if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {\n          layoutInfo.editable().focus();\n          handler.insertImages(layoutInfo, dataTransfer.files);\n        } else if (html) {\n          $(html).each(function () {\n            layoutInfo.editable().focus();\n            handler.invoke('editor.insertNode', layoutInfo.editable(), this);\n          });\n        } else if (text) {\n          layoutInfo.editable().focus();\n          handler.invoke('editor.insertText', layoutInfo.editable(), text);\n        }\n      }).on('dragover', false); // prevent default dragover event\n    };\n  };\n\n  var Clipboard = function (handler) {\n\n    this.attach = function (layoutInfo) {\n      layoutInfo.editable().on('paste', hPasteClipboardImage);\n    };\n\n    /**\n     * paste clipboard image\n     *\n     * @param {Event} event\n     */\n    var hPasteClipboardImage = function (event) {\n      var clipboardData = event.originalEvent.clipboardData;\n      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\n      var $editable = layoutInfo.editable();\n\n      if (!clipboardData || !clipboardData.items || !clipboardData.items.length) {\n        var callbacks = $editable.data('callbacks');\n        // only can run if it has onImageUpload method\n        if (!callbacks.onImageUpload) {\n          return;\n        }\n\n        // save cursor\n        handler.invoke('editor.saveNode', $editable);\n        handler.invoke('editor.saveRange', $editable);\n\n        $editable.html('');\n\n        setTimeout(function () {\n          var $img = $editable.find('img');\n\n          // if img is no in clipboard, insert text or dom\n          if (!$img.length || $img[0].src.indexOf('data:') === -1) {\n            var html = $editable.html();\n\n            handler.invoke('editor.restoreNode', $editable);\n            handler.invoke('editor.restoreRange', $editable);\n\n            handler.invoke('editor.focus', $editable);\n            try {\n              handler.invoke('editor.pasteHTML', $editable, html);\n            } catch (ex) {\n              handler.invoke('editor.insertText', $editable, html);\n            }\n            return;\n          }\n\n          var datauri = $img[0].src;\n\n          var data = atob(datauri.split(',')[1]);\n          var array = new Uint8Array(data.length);\n          for (var i = 0; i < data.length; i++) {\n            array[i] = data.charCodeAt(i);\n          }\n\n          var blob = new Blob([array], { type : 'image/png' });\n          blob.name = 'clipboard.png';\n\n          handler.invoke('editor.restoreNode', $editable);\n          handler.invoke('editor.restoreRange', $editable);\n          handler.insertImages(layoutInfo, [blob]);\n\n          handler.invoke('editor.afterCommand', $editable);\n        }, 0);\n\n        return;\n      }\n\n      var item = list.head(clipboardData.items);\n      var isClipboardImage = item.kind === 'file' && item.type.indexOf('image/') !== -1;\n\n      if (isClipboardImage) {\n        handler.insertImages(layoutInfo, [item.getAsFile()]);\n      }\n\n      handler.invoke('editor.afterCommand', $editable);\n    };\n  };\n\n  var LinkDialog = function (handler) {\n\n    /**\n     * toggle button status\n     *\n     * @private\n     * @param {jQuery} $btn\n     * @param {Boolean} isEnable\n     */\n    var toggleBtn = function ($btn, isEnable) {\n      $btn.toggleClass('disabled', !isEnable);\n      $btn.attr('disabled', !isEnable);\n    };\n\n    /**\n     * bind enter key\n     *\n     * @private\n     * @param {jQuery} $input\n     * @param {jQuery} $btn\n     */\n    var bindEnterKey = function ($input, $btn) {\n      $input.on('keypress', function (event) {\n        if (event.keyCode === key.code.ENTER) {\n          $btn.trigger('click');\n        }\n      });\n    };\n\n    /**\n     * Show link dialog and set event handlers on dialog controls.\n     *\n     * @param {jQuery} $editable\n     * @param {jQuery} $dialog\n     * @param {Object} linkInfo\n     * @return {Promise}\n     */\n    this.showLinkDialog = function ($editable, $dialog, linkInfo) {\n      return $.Deferred(function (deferred) {\n        var $linkDialog = $dialog.find('.note-link-dialog');\n\n        var $linkText = $linkDialog.find('.note-link-text'),\n        $linkUrl = $linkDialog.find('.note-link-url'),\n        $linkBtn = $linkDialog.find('.note-link-btn'),\n        $openInNewWindow = $linkDialog.find('input[type=checkbox]');\n\n        $linkDialog.one('shown.bs.modal', function () {\n          $linkText.val(linkInfo.text);\n\n          $linkText.on('input', function () {\n            // if linktext was modified by keyup,\n            // stop cloning text from linkUrl\n            linkInfo.text = $linkText.val();\n          });\n\n          // if no url was given, copy text to url\n          if (!linkInfo.url) {\n            linkInfo.url = linkInfo.text;\n            toggleBtn($linkBtn, linkInfo.text);\n          }\n\n          $linkUrl.on('input', function () {\n            toggleBtn($linkBtn, $linkUrl.val());\n            // display same link on `Text to display` input\n            // when create a new link\n            if (!linkInfo.text) {\n              $linkText.val($linkUrl.val());\n            }\n          }).val(linkInfo.url).trigger('focus').trigger('select');\n\n          bindEnterKey($linkUrl, $linkBtn);\n          bindEnterKey($linkText, $linkBtn);\n\n          $openInNewWindow.prop('checked', linkInfo.newWindow);\n\n          $linkBtn.one('click', function (event) {\n            event.preventDefault();\n\n            deferred.resolve({\n              range: linkInfo.range,\n              url: $linkUrl.val(),\n              text: $linkText.val(),\n              newWindow: $openInNewWindow.is(':checked')\n            });\n            $linkDialog.modal('hide');\n          });\n        }).one('hidden.bs.modal', function () {\n          // detach events\n          $linkText.off('input keypress');\n          $linkUrl.off('input keypress');\n          $linkBtn.off('click');\n\n          if (deferred.state() === 'pending') {\n            deferred.reject();\n          }\n        }).modal('show');\n      }).promise();\n    };\n\n    /**\n     * @param {Object} layoutInfo\n     */\n    this.show = function (layoutInfo) {\n      var $editor = layoutInfo.editor(),\n          $dialog = layoutInfo.dialog(),\n          $editable = layoutInfo.editable(),\n          $popover = layoutInfo.popover(),\n          linkInfo = handler.invoke('editor.getLinkInfo', $editable);\n\n      var options = $editor.data('options');\n\n      handler.invoke('editor.saveRange', $editable);\n      this.showLinkDialog($editable, $dialog, linkInfo).then(function (linkInfo) {\n        handler.invoke('editor.restoreRange', $editable);\n        handler.invoke('editor.createLink', $editable, linkInfo, options);\n        // hide popover after creating link\n        handler.invoke('popover.hide', $popover);\n      }).fail(function () {\n        handler.invoke('editor.restoreRange', $editable);\n      });\n    };\n  };\n\n  var ImageDialog = function (handler) {\n    /**\n     * toggle button status\n     *\n     * @private\n     * @param {jQuery} $btn\n     * @param {Boolean} isEnable\n     */\n    var toggleBtn = function ($btn, isEnable) {\n      $btn.toggleClass('disabled', !isEnable);\n      $btn.attr('disabled', !isEnable);\n    };\n\n    /**\n     * bind enter key\n     *\n     * @private\n     * @param {jQuery} $input\n     * @param {jQuery} $btn\n     */\n    var bindEnterKey = function ($input, $btn) {\n      $input.on('keypress', function (event) {\n        if (event.keyCode === key.code.ENTER) {\n          $btn.trigger('click');\n        }\n      });\n    };\n\n    this.show = function (layoutInfo) {\n      var $dialog = layoutInfo.dialog(),\n          $editable = layoutInfo.editable();\n\n      handler.invoke('editor.saveRange', $editable);\n      this.showImageDialog($editable, $dialog).then(function (data) {\n        handler.invoke('editor.restoreRange', $editable);\n\n        if (typeof data === 'string') {\n          // image url\n          handler.invoke('editor.insertImage', $editable, data);\n        } else {\n          // array of files\n          handler.insertImages(layoutInfo, data);\n        }\n      }).fail(function () {\n        handler.invoke('editor.restoreRange', $editable);\n      });\n    };\n\n    /**\n     * show image dialog\n     *\n     * @param {jQuery} $editable\n     * @param {jQuery} $dialog\n     * @return {Promise}\n     */\n    this.showImageDialog = function ($editable, $dialog) {\n      return $.Deferred(function (deferred) {\n        var $imageDialog = $dialog.find('.note-image-dialog');\n\n        var $imageInput = $dialog.find('.note-image-input'),\n            $imageUrl = $dialog.find('.note-image-url'),\n            $imageBtn = $dialog.find('.note-image-btn');\n\n        $imageDialog.one('shown.bs.modal', function () {\n          // Cloning imageInput to clear element.\n          $imageInput.replaceWith($imageInput.clone()\n            .on('change', function () {\n              deferred.resolve(this.files || this.value);\n              $imageDialog.modal('hide');\n            })\n            .val('')\n          );\n\n          $imageBtn.click(function (event) {\n            event.preventDefault();\n\n            deferred.resolve($imageUrl.val());\n            $imageDialog.modal('hide');\n          });\n\n          $imageUrl.on('keyup paste', function (event) {\n            var url;\n            \n            if (event.type === 'paste') {\n              url = event.originalEvent.clipboardData.getData('text');\n            } else {\n              url = $imageUrl.val();\n            }\n            \n            toggleBtn($imageBtn, url);\n          }).val('').trigger('focus');\n          bindEnterKey($imageUrl, $imageBtn);\n        }).one('hidden.bs.modal', function () {\n          $imageInput.off('change');\n          $imageUrl.off('keyup paste keypress');\n          $imageBtn.off('click');\n\n          if (deferred.state() === 'pending') {\n            deferred.reject();\n          }\n        }).modal('show');\n      });\n    };\n  };\n\n  var HelpDialog = function (handler) {\n    /**\n     * show help dialog\n     *\n     * @param {jQuery} $editable\n     * @param {jQuery} $dialog\n     * @return {Promise}\n     */\n    this.showHelpDialog = function ($editable, $dialog) {\n      return $.Deferred(function (deferred) {\n        var $helpDialog = $dialog.find('.note-help-dialog');\n\n        $helpDialog.one('hidden.bs.modal', function () {\n          deferred.resolve();\n        }).modal('show');\n      }).promise();\n    };\n\n    /**\n     * @param {Object} layoutInfo\n     */\n    this.show = function (layoutInfo) {\n      var $dialog = layoutInfo.dialog(),\n          $editable = layoutInfo.editable();\n\n      handler.invoke('editor.saveRange', $editable, true);\n      this.showHelpDialog($editable, $dialog).then(function () {\n        handler.invoke('editor.restoreRange', $editable);\n      });\n    };\n  };\n\n\n  /**\n   * @class EventHandler\n   *\n   * EventHandler\n   *  - TODO: new instance per a editor\n   *  - TODO: rename EventHandler\n   */\n  var EventHandler = function () {\n    /**\n     * Modules\n     */\n    var modules = this.modules = {\n      editor: new Editor(this),\n      toolbar: new Toolbar(this),\n      statusbar: new Statusbar(this),\n      popover: new Popover(this),\n      handle: new Handle(this),\n      fullscreen: new Fullscreen(this),\n      codeview: new Codeview(this),\n      dragAndDrop: new DragAndDrop(this),\n      clipboard: new Clipboard(this),\n      linkDialog: new LinkDialog(this),\n      imageDialog: new ImageDialog(this),\n      helpDialog: new HelpDialog(this)\n    };\n\n    // TODO refactor modules and eventHandler\n    //  - remove this method and use custom event from $holder instead\n    this.invoke = function () {\n      var moduleAndMethod = list.head(list.from(arguments));\n      var args = list.tail(list.from(arguments));\n\n      var splits = moduleAndMethod.split('.');\n      var hasSeparator = splits.length > 1;\n      var moduleName = hasSeparator && list.head(splits);\n      var methodName = hasSeparator ? list.last(splits) : list.head(splits);\n\n      var module = this.getModule(moduleName);\n      var method = module[methodName];\n\n      return method && method.apply(module, args);\n    };\n\n    /**\n     * returns module\n     *\n     * @param {String} moduleName - name of module\n     * @return {Module} - defaults is editor\n     */\n    this.getModule = function (moduleName) {\n      return this.modules[moduleName] || this.modules.editor;\n    };\n\n    /**\n     * @param {jQuery} $holder\n     * @param {Object} callbacks\n     * @param {String} eventNamespace\n     * @returns {Function}\n     */\n    var bindCustomEvent = this.bindCustomEvent = function ($holder, callbacks, eventNamespace) {\n      return function () {\n        var callback = callbacks[func.namespaceToCamel(eventNamespace, 'on')];\n        if (callback) {\n          callback(arguments);\n        }\n        return $holder.trigger('summernote.' + eventNamespace, arguments);\n      };\n    };\n\n    /**\n     * insert Images from file array.\n     *\n     * @private\n     * @param {Object} layoutInfo\n     * @param {File[]} files\n     */\n    this.insertImages = function (layoutInfo, files) {\n      var $editor = layoutInfo.editor(),\n          $editable = layoutInfo.editable(),\n          $holder = layoutInfo.holder();\n\n      var callbacks = $editable.data('callbacks');\n      var options = $editor.data('options');\n\n      // If onImageUpload options setted\n      if (callbacks.onImageUpload) {\n        bindCustomEvent($holder, callbacks, 'image.upload')([files]);\n      // else insert Image as dataURL\n      } else {\n        $.each(files, function (idx, file) {\n          var filename = file.name;\n          if (options.maximumImageFileSize && options.maximumImageFileSize < file.size) {\n            bindCustomEvent($holder, callbacks, 'image.upload.error')(options.langInfo.image.maximumFileSizeError);\n          } else {\n            async.readFileAsDataURL(file).then(function (sDataURL) {\n              modules.editor.insertImage($editable, sDataURL, filename);\n            }).fail(function () {\n              bindCustomEvent($holder, callbacks, 'image.upload.error')(options.langInfo.image.maximumFileSizeError);\n            });\n          }\n        });\n      }\n    };\n\n    var commands = {\n      /**\n       * @param {Object} layoutInfo\n       */\n      showLinkDialog: function (layoutInfo) {\n        modules.linkDialog.show(layoutInfo);\n      },\n\n      /**\n       * @param {Object} layoutInfo\n       */\n      showImageDialog: function (layoutInfo) {\n        modules.imageDialog.show(layoutInfo);\n      },\n\n      /**\n       * @param {Object} layoutInfo\n       */\n      showHelpDialog: function (layoutInfo) {\n        modules.helpDialog.show(layoutInfo);\n      },\n\n      /**\n       * @param {Object} layoutInfo\n       */\n      fullscreen: function (layoutInfo) {\n        modules.fullscreen.toggle(layoutInfo);\n      },\n\n      /**\n       * @param {Object} layoutInfo\n       */\n      codeview: function (layoutInfo) {\n        modules.codeview.toggle(layoutInfo);\n      }\n    };\n\n    var hMousedown = function (event) {\n      //preventDefault Selection for FF, IE8+\n      if (dom.isImg(event.target)) {\n        event.preventDefault();\n      }\n    };\n\n    var hToolbarAndPopoverUpdate = function (event) {\n      // delay for range after mouseup\n      setTimeout(function () {\n        var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\n        var styleInfo = modules.editor.currentStyle(event.target);\n        if (!styleInfo) { return; }\n\n        var isAirMode = layoutInfo.editor().data('options').airMode;\n        if (!isAirMode) {\n          modules.toolbar.update(layoutInfo.toolbar(), styleInfo);\n        }\n\n        modules.popover.update(layoutInfo.popover(), styleInfo, isAirMode);\n        modules.handle.update(layoutInfo.handle(), styleInfo, isAirMode);\n      }, 0);\n    };\n\n    var hScroll = function (event) {\n      var layoutInfo = dom.makeLayoutInfo(event.currentTarget || event.target);\n      //hide popover and handle when scrolled\n      modules.popover.hide(layoutInfo.popover());\n      modules.handle.hide(layoutInfo.handle());\n    };\n\n    var hToolbarAndPopoverMousedown = function (event) {\n      // prevent default event when insertTable (FF, Webkit)\n      var $btn = $(event.target).closest('[data-event]');\n      if ($btn.length) {\n        event.preventDefault();\n      }\n    };\n\n    var hToolbarAndPopoverClick = function (event) {\n      var $btn = $(event.target).closest('[data-event]');\n\n      if ($btn.length) {\n        var eventName = $btn.attr('data-event'),\n            value = $btn.attr('data-value'),\n            hide = $btn.attr('data-hide');\n\n        var layoutInfo = dom.makeLayoutInfo(event.target);\n\n        // before command: detect control selection element($target)\n        var $target;\n        if ($.inArray(eventName, ['resize', 'floatMe', 'removeMedia', 'imageShape']) !== -1) {\n          var $selection = layoutInfo.handle().find('.note-control-selection');\n          $target = $($selection.data('target'));\n        }\n\n        // If requested, hide the popover when the button is clicked.\n        // Useful for things like showHelpDialog.\n        if (hide) {\n          $btn.parents('.popover').hide();\n        }\n\n        if ($.isFunction($.summernote.pluginEvents[eventName])) {\n          $.summernote.pluginEvents[eventName](event, modules.editor, layoutInfo, value);\n        } else if (modules.editor[eventName]) { // on command\n          var $editable = layoutInfo.editable();\n          $editable.focus();\n          modules.editor[eventName]($editable, value, $target);\n          event.preventDefault();\n        } else if (commands[eventName]) {\n          commands[eventName].call(this, layoutInfo);\n          event.preventDefault();\n        }\n\n        // after command\n        if ($.inArray(eventName, ['backColor', 'foreColor']) !== -1) {\n          var options = layoutInfo.editor().data('options', options);\n          var module = options.airMode ? modules.popover : modules.toolbar;\n          module.updateRecentColor(list.head($btn), eventName, value);\n        }\n\n        hToolbarAndPopoverUpdate(event);\n      }\n    };\n\n    var PX_PER_EM = 18;\n    var hDimensionPickerMove = function (event, options) {\n      var $picker = $(event.target.parentNode); // target is mousecatcher\n      var $dimensionDisplay = $picker.next();\n      var $catcher = $picker.find('.note-dimension-picker-mousecatcher');\n      var $highlighted = $picker.find('.note-dimension-picker-highlighted');\n      var $unhighlighted = $picker.find('.note-dimension-picker-unhighlighted');\n\n      var posOffset;\n      // HTML5 with jQuery - e.offsetX is undefined in Firefox\n      if (event.offsetX === undefined) {\n        var posCatcher = $(event.target).offset();\n        posOffset = {\n          x: event.pageX - posCatcher.left,\n          y: event.pageY - posCatcher.top\n        };\n      } else {\n        posOffset = {\n          x: event.offsetX,\n          y: event.offsetY\n        };\n      }\n\n      var dim = {\n        c: Math.ceil(posOffset.x / PX_PER_EM) || 1,\n        r: Math.ceil(posOffset.y / PX_PER_EM) || 1\n      };\n\n      $highlighted.css({ width: dim.c + 'em', height: dim.r + 'em' });\n      $catcher.attr('data-value', dim.c + 'x' + dim.r);\n\n      if (3 < dim.c && dim.c < options.insertTableMaxSize.col) {\n        $unhighlighted.css({ width: dim.c + 1 + 'em'});\n      }\n\n      if (3 < dim.r && dim.r < options.insertTableMaxSize.row) {\n        $unhighlighted.css({ height: dim.r + 1 + 'em'});\n      }\n\n      $dimensionDisplay.html(dim.c + ' x ' + dim.r);\n    };\n    \n    /**\n     * bind KeyMap on keydown\n     *\n     * @param {Object} layoutInfo\n     * @param {Object} keyMap\n     */\n    this.bindKeyMap = function (layoutInfo, keyMap) {\n      var $editor = layoutInfo.editor();\n      var $editable = layoutInfo.editable();\n\n      $editable.on('keydown', function (event) {\n        var keys = [];\n\n        // modifier\n        if (event.metaKey) { keys.push('CMD'); }\n        if (event.ctrlKey && !event.altKey) { keys.push('CTRL'); }\n        if (event.shiftKey) { keys.push('SHIFT'); }\n\n        // keycode\n        var keyName = key.nameFromCode[event.keyCode];\n        if (keyName) {\n          keys.push(keyName);\n        }\n\n        var eventName = keyMap[keys.join('+')];\n        if (eventName) {\n          if ($.summernote.pluginEvents[eventName]) {\n            var plugin = $.summernote.pluginEvents[eventName];\n            if ($.isFunction(plugin)) {\n              plugin(event, modules.editor, layoutInfo);\n            }\n          } else if (modules.editor[eventName]) {\n            modules.editor[eventName]($editable, $editor.data('options'));\n            event.preventDefault();\n          } else if (commands[eventName]) {\n            commands[eventName].call(this, layoutInfo);\n            event.preventDefault();\n          }\n        } else if (key.isEdit(event.keyCode)) {\n          modules.editor.afterCommand($editable);\n        }\n      });\n    };\n\n    /**\n     * attach eventhandler\n     *\n     * @param {Object} layoutInfo - layout Informations\n     * @param {Object} options - user options include custom event handlers\n     */\n    this.attach = function (layoutInfo, options) {\n      // handlers for editable\n      if (options.shortcuts) {\n        this.bindKeyMap(layoutInfo, options.keyMap[agent.isMac ? 'mac' : 'pc']);\n      }\n      layoutInfo.editable().on('mousedown', hMousedown);\n      layoutInfo.editable().on('keyup mouseup', hToolbarAndPopoverUpdate);\n      layoutInfo.editable().on('scroll', hScroll);\n      modules.clipboard.attach(layoutInfo, options);\n\n      // handler for handle and popover\n      modules.handle.attach(layoutInfo, options);\n      layoutInfo.popover().on('click', hToolbarAndPopoverClick);\n      layoutInfo.popover().on('mousedown', hToolbarAndPopoverMousedown);\n\n      // handler for drag and drop\n      modules.dragAndDrop.attach(layoutInfo, options);\n\n      // handlers for frame mode (toolbar, statusbar)\n      if (!options.airMode) {\n        // handler for toolbar\n        layoutInfo.toolbar().on('click', hToolbarAndPopoverClick);\n        layoutInfo.toolbar().on('mousedown', hToolbarAndPopoverMousedown);\n\n        // handler for statusbar\n        modules.statusbar.attach(layoutInfo, options);\n      }\n\n      // handler for table dimension\n      var $catcherContainer = options.airMode ? layoutInfo.popover() :\n                                                layoutInfo.toolbar();\n      var $catcher = $catcherContainer.find('.note-dimension-picker-mousecatcher');\n      $catcher.css({\n        width: options.insertTableMaxSize.col + 'em',\n        height: options.insertTableMaxSize.row + 'em'\n      }).on('mousemove', function (event) {\n        hDimensionPickerMove(event, options);\n      });\n\n      // save options on editor\n      layoutInfo.editor().data('options', options);\n\n      // ret styleWithCSS for backColor / foreColor clearing with 'inherit'.\n      if (!agent.isMSIE) {\n        // [workaround] for Firefox\n        //  - protect FF Error: NS_ERROR_FAILURE: Failure\n        setTimeout(function () {\n          document.execCommand('styleWithCSS', 0, options.styleWithSpan);\n        }, 0);\n      }\n\n      // History\n      var history = new History(layoutInfo.editable());\n      layoutInfo.editable().data('NoteHistory', history);\n\n      // All editor status will be saved on editable with jquery's data\n      // for support multiple editor with singleton object.\n      layoutInfo.editable().data('callbacks', {\n        onInit: options.onInit,\n        onFocus: options.onFocus,\n        onBlur: options.onBlur,\n        onKeydown: options.onKeydown,\n        onKeyup: options.onKeyup,\n        onMousedown: options.onMousedown,\n        onEnter: options.onEnter,\n        onPaste: options.onPaste,\n        onBeforeCommand: options.onBeforeCommand,\n        onChange: options.onChange,\n        onImageUpload: options.onImageUpload,\n        onImageUploadError: options.onImageUploadError,\n        onMediaDelete : options.onMediaDelete\n      });\n\n      // Textarea: auto filling the code before form submit.\n      if (dom.isTextarea(list.head(layoutInfo.holder()))) {\n        layoutInfo.holder().closest('form').submit(function () {\n          var contents = layoutInfo.holder().code();\n          layoutInfo.holder().val(contents);\n\n          // callback on submit\n          if (options.onsubmit) {\n            options.onsubmit(contents);\n          }\n        });\n      }\n    };\n\n    /**\n     * attach jquery custom event\n     *\n     * @param {Object} layoutInfo - layout Informations\n     */\n    this.attachCustomEvent = function (layoutInfo, options) {\n      var $holder = layoutInfo.holder();\n      var $editable = layoutInfo.editable();\n      var callbacks = $editable.data('callbacks');\n\n      $editable.focus(bindCustomEvent($holder, callbacks, 'focus'));\n      $editable.blur(bindCustomEvent($holder, callbacks, 'blur'));\n\n      $editable.keydown(function (event) {\n        if (event.keyCode === key.code.ENTER) {\n          bindCustomEvent($holder, callbacks, 'enter').call(this, event);\n        }\n        bindCustomEvent($holder, callbacks, 'keydown').call(this, event);\n      });\n      $editable.keyup(bindCustomEvent($holder, callbacks, 'keyup'));\n\n      $editable.on('mousedown', bindCustomEvent($holder, callbacks, 'mousedown'));\n      $editable.on('mouseup', bindCustomEvent($holder, callbacks, 'mouseup'));\n      $editable.on('scroll', bindCustomEvent($holder, callbacks, 'scroll'));\n\n      $editable.on('paste', bindCustomEvent($holder, callbacks, 'paste'));\n      \n      // [workaround] for old IE - IE8 don't have input events\n      if (agent.isMSIE) {\n        var sDomEvents = 'DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted';\n        $editable.on(sDomEvents, bindCustomEvent($holder, callbacks, 'change'));\n      } else {\n        $editable.on('input', bindCustomEvent($holder, callbacks, 'change'));\n      }\n\n      // callbacks for advanced features (camel)\n      if (!options.airMode) {\n        layoutInfo.toolbar().click(bindCustomEvent($holder, callbacks, 'toolbar.click'));\n        layoutInfo.popover().click(bindCustomEvent($holder, callbacks, 'popover.click'));\n      }\n\n      // Textarea: auto filling the code before form submit.\n      if (dom.isTextarea(list.head($holder))) {\n        $holder.closest('form').submit(function (e) {\n          bindCustomEvent($holder, callbacks, 'submit').call(this, e, $holder.code());\n        });\n      }\n\n      // fire init event\n      bindCustomEvent($holder, callbacks, 'init')(layoutInfo);\n\n      // fire plugin init event\n      for (var i = 0, len = $.summernote.plugins.length; i < len; i++) {\n        if ($.isFunction($.summernote.plugins[i].init)) {\n          $.summernote.plugins[i].init(layoutInfo);\n        }\n      }\n    };\n      \n    this.detach = function (layoutInfo, options) {\n      layoutInfo.holder().off();\n      layoutInfo.editable().off();\n\n      layoutInfo.popover().off();\n      layoutInfo.handle().off();\n      layoutInfo.dialog().off();\n\n      if (!options.airMode) {\n        layoutInfo.dropzone().off();\n        layoutInfo.toolbar().off();\n        layoutInfo.statusbar().off();\n      }\n    };\n  };\n\n  /**\n   * @class Renderer\n   *\n   * renderer\n   *\n   * rendering toolbar and editable\n   */\n  var Renderer = function () {\n\n    /**\n     * bootstrap button template\n     * @private\n     * @param {String} label button name\n     * @param {Object} [options] button options\n     * @param {String} [options.event] data-event\n     * @param {String} [options.className] button's class name\n     * @param {String} [options.value] data-value\n     * @param {String} [options.title] button's title for popup\n     * @param {String} [options.dropdown] dropdown html\n     * @param {String} [options.hide] data-hide\n     */\n    var tplButton = function (label, options) {\n      var event = options.event;\n      var value = options.value;\n      var title = options.title;\n      var className = options.className;\n      var dropdown = options.dropdown;\n      var hide = options.hide;\n\n      return '<button type=\"button\"' +\n                 ' class=\"btn btn-default btn-sm btn-small' +\n                   (className ? ' ' + className : '') +\n                   (dropdown ? ' dropdown-toggle' : '') +\n                 '\"' +\n                 (dropdown ? ' data-toggle=\"dropdown\"' : '') +\n                 (title ? ' title=\"' + title + '\"' : '') +\n                 (event ? ' data-event=\"' + event + '\"' : '') +\n                 (value ? ' data-value=\\'' + value + '\\'' : '') +\n                 (hide ? ' data-hide=\\'' + hide + '\\'' : '') +\n                 ' tabindex=\"-1\">' +\n               label +\n               (dropdown ? ' <span class=\"caret\"></span>' : '') +\n             '</button>' +\n             (dropdown || '');\n    };\n\n    /**\n     * bootstrap icon button template\n     * @private\n     * @param {String} iconClassName\n     * @param {Object} [options]\n     * @param {String} [options.event]\n     * @param {String} [options.value]\n     * @param {String} [options.title]\n     * @param {String} [options.dropdown]\n     */\n    var tplIconButton = function (iconClassName, options) {\n      var label = '<i class=\"' + iconClassName + '\"></i>';\n      return tplButton(label, options);\n    };\n\n    /**\n     * bootstrap popover template\n     * @private\n     * @param {String} className\n     * @param {String} content\n     */\n    var tplPopover = function (className, content) {\n      var $popover = $('<div class=\"' + className + ' popover bottom in\" style=\"display: none;\">' +\n               '<div class=\"arrow\"></div>' +\n               '<div class=\"popover-content\">' +\n               '</div>' +\n             '</div>');\n      \n      $popover.find('.popover-content').append(content);\n      return $popover;\n    };\n\n    /**\n     * bootstrap dialog template\n     *\n     * @param {String} className\n     * @param {String} [title='']\n     * @param {String} body\n     * @param {String} [footer='']\n     */\n    var tplDialog = function (className, title, body, footer) {\n      return '<div class=\"' + className + ' modal\" aria-hidden=\"false\">' +\n               '<div class=\"modal-dialog\">' +\n                 '<div class=\"modal-content\">' +\n                   (title ?\n                   '<div class=\"modal-header\">' +\n                     '<button type=\"button\" class=\"close\" aria-hidden=\"true\" tabindex=\"-1\">&times;</button>' +\n                     '<h4 class=\"modal-title\">' + title + '</h4>' +\n                   '</div>' : ''\n                   ) +\n                   '<div class=\"modal-body\">' + body + '</div>' +\n                   (footer ?\n                   '<div class=\"modal-footer\">' + footer + '</div>' : ''\n                   ) +\n                 '</div>' +\n               '</div>' +\n             '</div>';\n    };\n\n    var tplButtonInfo = {\n      picture: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'picture-o', {\n          event: 'showImageDialog',\n          title: lang.image.image,\n          hide: true\n        });\n      },\n      link: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'link', {\n          event: 'showLinkDialog',\n          title: lang.link.link,\n          hide: true\n        });\n      },\n      table: function (lang, options) {\n        var dropdown = '<ul class=\"note-table dropdown-menu\">' +\n                         '<div class=\"note-dimension-picker\">' +\n                           '<div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"></div>' +\n                           '<div class=\"note-dimension-picker-highlighted\"></div>' +\n                           '<div class=\"note-dimension-picker-unhighlighted\"></div>' +\n                         '</div>' +\n                         '<div class=\"note-dimension-display\"> 1 x 1 </div>' +\n                       '</ul>';\n        return tplIconButton(options.iconPrefix + 'table', {\n          title: lang.table.table,\n          dropdown: dropdown\n        });\n      },\n      style: function (lang, options) {\n        var items = options.styleTags.reduce(function (memo, v) {\n          var label = lang.style[v === 'p' ? 'normal' : v];\n          return memo + '<li><a data-event=\"formatBlock\" href=\"#\" data-value=\"' + v + '\">' +\n                   (\n                     (v === 'p' || v === 'pre') ? label :\n                     '<' + v + '>' + label + '</' + v + '>'\n                   ) +\n                 '</a></li>';\n        }, '');\n\n        return tplIconButton(options.iconPrefix + 'magic', {\n          title: lang.style.style,\n          dropdown: '<ul class=\"dropdown-menu\">' + items + '</ul>'\n        });\n      },\n      fontname: function (lang, options) {\n        var realFontList = [];\n        var items = options.fontNames.reduce(function (memo, v) {\n          if (!agent.isFontInstalled(v) && options.fontNamesIgnoreCheck.indexOf(v) === -1) {\n            return memo;\n          }\n          realFontList.push(v);\n          return memo + '<li><a data-event=\"fontName\" href=\"#\" data-value=\"' + v + '\" style=\"font-family:\\'' + v + '\\'\">' +\n                          '<i class=\"' + options.iconPrefix + 'check\"></i> ' + v +\n                        '</a></li>';\n        }, '');\n\n        var hasDefaultFont = agent.isFontInstalled(options.defaultFontName);\n        var defaultFontName = (hasDefaultFont) ? options.defaultFontName : realFontList[0];\n          \n        var label = '<span class=\"note-current-fontname\">' +\n                        defaultFontName +\n                     '</span>';\n        return tplButton(label, {\n          title: lang.font.name,\n          dropdown: '<ul class=\"dropdown-menu\">' + items + '</ul>'\n        });\n      },\n      fontsize: function (lang, options) {\n        var items = options.fontSizes.reduce(function (memo, v) {\n          return memo + '<li><a data-event=\"fontSize\" href=\"#\" data-value=\"' + v + '\">' +\n                          '<i class=\"fa fa-check\"></i> ' + v +\n                        '</a></li>';\n        }, '');\n\n        var label = '<span class=\"note-current-fontsize\">11</span>';\n        return tplButton(label, {\n          title: lang.font.size,\n          dropdown: '<ul class=\"dropdown-menu\">' + items + '</ul>'\n        });\n      },\n      color: function (lang, options) {\n        var colorButtonLabel = '<i class=\"' + options.iconPrefix + 'font\" style=\"color:black;background-color:yellow;\"></i>';\n        var colorButton = tplButton(colorButtonLabel, {\n          className: 'note-recent-color',\n          title: lang.color.recent,\n          event: 'color',\n          value: '{\"backColor\":\"yellow\"}'\n        });\n\n        var dropdown = '<ul class=\"dropdown-menu\">' +\n                         '<li>' +\n                           '<div class=\"btn-group\">' +\n                             '<div class=\"note-palette-title\">' + lang.color.background + '</div>' +\n                             '<div class=\"note-color-reset\" data-event=\"backColor\"' +\n                               ' data-value=\"inherit\" title=\"' + lang.color.transparent + '\">' +\n                               lang.color.setTransparent +\n                             '</div>' +\n                             '<div class=\"note-color-palette\" data-target-event=\"backColor\"></div>' +\n                           '</div>' +\n                           '<div class=\"btn-group\">' +\n                             '<div class=\"note-palette-title\">' + lang.color.foreground + '</div>' +\n                             '<div class=\"note-color-reset\" data-event=\"foreColor\" data-value=\"inherit\" title=\"' + lang.color.reset + '\">' +\n                               lang.color.resetToDefault +\n                             '</div>' +\n                             '<div class=\"note-color-palette\" data-target-event=\"foreColor\"></div>' +\n                           '</div>' +\n                         '</li>' +\n                       '</ul>';\n\n        var moreButton = tplButton('', {\n          title: lang.color.more,\n          dropdown: dropdown\n        });\n\n        return colorButton + moreButton;\n      },\n      bold: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'bold', {\n          event: 'bold',\n          title: lang.font.bold\n        });\n      },\n      italic: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'italic', {\n          event: 'italic',\n          title: lang.font.italic\n        });\n      },\n      underline: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'underline', {\n          event: 'underline',\n          title: lang.font.underline\n        });\n      },\n      strikethrough: function (lang) {\n        return tplIconButton('fa fa-strikethrough', {\n          event: 'strikethrough',\n          title: lang.font.strikethrough\n        });\n      },\n      superscript: function (lang) {\n        return tplIconButton('fa fa-superscript', {\n          event: 'superscript',\n          title: lang.font.superscript\n        });\n      },\n      subscript: function (lang) {\n        return tplIconButton('fa fa-subscript', {\n          event: 'subscript',\n          title: lang.font.subscript\n        });\n      },\n      clear: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'eraser', {\n          event: 'removeFormat',\n          title: lang.font.clear\n        });\n      },\n      ul: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'list-ul', {\n          event: 'insertUnorderedList',\n          title: lang.lists.unordered\n        });\n      },\n      ol: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'list-ol', {\n          event: 'insertOrderedList',\n          title: lang.lists.ordered\n        });\n      },\n      paragraph: function (lang, options) {\n        var leftButton = tplIconButton(options.iconPrefix + 'align-left', {\n          title: lang.paragraph.left,\n          event: 'justifyLeft'\n        });\n        var centerButton = tplIconButton(options.iconPrefix + 'align-center', {\n          title: lang.paragraph.center,\n          event: 'justifyCenter'\n        });\n        var rightButton = tplIconButton(options.iconPrefix + 'align-right', {\n          title: lang.paragraph.right,\n          event: 'justifyRight'\n        });\n        var justifyButton = tplIconButton(options.iconPrefix + 'align-justify', {\n          title: lang.paragraph.justify,\n          event: 'justifyFull'\n        });\n\n        var outdentButton = tplIconButton(options.iconPrefix + 'outdent', {\n          title: lang.paragraph.outdent,\n          event: 'outdent'\n        });\n        var indentButton = tplIconButton(options.iconPrefix + 'indent', {\n          title: lang.paragraph.indent,\n          event: 'indent'\n        });\n\n        var dropdown = '<div class=\"dropdown-menu\">' +\n                         '<div class=\"note-align btn-group\">' +\n                           leftButton + centerButton + rightButton + justifyButton +\n                         '</div>' +\n                         '<div class=\"note-list btn-group\">' +\n                           indentButton + outdentButton +\n                         '</div>' +\n                       '</div>';\n\n        return tplIconButton(options.iconPrefix + 'align-left', {\n          title: lang.paragraph.paragraph,\n          dropdown: dropdown\n        });\n      },\n      height: function (lang, options) {\n        var items = options.lineHeights.reduce(function (memo, v) {\n          return memo + '<li><a data-event=\"lineHeight\" href=\"#\" data-value=\"' + parseFloat(v) + '\">' +\n                          '<i class=\"' + options.iconPrefix + 'check\"></i> ' + v +\n                        '</a></li>';\n        }, '');\n\n        return tplIconButton(options.iconPrefix + 'text-height', {\n          title: lang.font.height,\n          dropdown: '<ul class=\"dropdown-menu\">' + items + '</ul>'\n        });\n\n      },\n      help: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'question', {\n          event: 'showHelpDialog',\n          title: lang.options.help,\n          hide: true\n        });\n      },\n      fullscreen: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'arrows-alt', {\n          event: 'fullscreen',\n          title: lang.options.fullscreen\n        });\n      },\n      codeview: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'code', {\n          event: 'codeview',\n          title: lang.options.codeview\n        });\n      },\n      undo: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'undo', {\n          event: 'undo',\n          title: lang.history.undo\n        });\n      },\n      redo: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'repeat', {\n          event: 'redo',\n          title: lang.history.redo\n        });\n      },\n      hr: function (lang, options) {\n        return tplIconButton(options.iconPrefix + 'minus', {\n          event: 'insertHorizontalRule',\n          title: lang.hr.insert\n        });\n      }\n    };\n\n    var tplPopovers = function (lang, options) {\n      var tplLinkPopover = function () {\n        var linkButton = tplIconButton(options.iconPrefix + 'edit', {\n          title: lang.link.edit,\n          event: 'showLinkDialog',\n          hide: true\n        });\n        var unlinkButton = tplIconButton(options.iconPrefix + 'unlink', {\n          title: lang.link.unlink,\n          event: 'unlink'\n        });\n        var content = '<a href=\"http://www.google.com\" target=\"_blank\">www.google.com</a>&nbsp;&nbsp;' +\n                      '<div class=\"note-insert btn-group\">' +\n                        linkButton + unlinkButton +\n                      '</div>';\n        return tplPopover('note-link-popover', content);\n      };\n\n      var tplImagePopover = function () {\n        var fullButton = tplButton('<span class=\"note-fontsize-10\">100%</span>', {\n          title: lang.image.resizeFull,\n          event: 'resize',\n          value: '1'\n        });\n        var halfButton = tplButton('<span class=\"note-fontsize-10\">50%</span>', {\n          title: lang.image.resizeHalf,\n          event: 'resize',\n          value: '0.5'\n        });\n        var quarterButton = tplButton('<span class=\"note-fontsize-10\">25%</span>', {\n          title: lang.image.resizeQuarter,\n          event: 'resize',\n          value: '0.25'\n        });\n\n        var leftButton = tplIconButton(options.iconPrefix + 'align-left', {\n          title: lang.image.floatLeft,\n          event: 'floatMe',\n          value: 'left'\n        });\n        var rightButton = tplIconButton(options.iconPrefix + 'align-right', {\n          title: lang.image.floatRight,\n          event: 'floatMe',\n          value: 'right'\n        });\n        var justifyButton = tplIconButton(options.iconPrefix + 'align-justify', {\n          title: lang.image.floatNone,\n          event: 'floatMe',\n          value: 'none'\n        });\n\n        var roundedButton = tplIconButton(options.iconPrefix + 'square', {\n          title: lang.image.shapeRounded,\n          event: 'imageShape',\n          value: 'img-rounded'\n        });\n        var circleButton = tplIconButton(options.iconPrefix + 'circle-o', {\n          title: lang.image.shapeCircle,\n          event: 'imageShape',\n          value: 'img-circle'\n        });\n        var thumbnailButton = tplIconButton(options.iconPrefix + 'picture-o', {\n          title: lang.image.shapeThumbnail,\n          event: 'imageShape',\n          value: 'img-thumbnail'\n        });\n        var noneButton = tplIconButton(options.iconPrefix + 'times', {\n          title: lang.image.shapeNone,\n          event: 'imageShape',\n          value: ''\n        });\n\n        var removeButton = tplIconButton(options.iconPrefix + 'trash-o', {\n          title: lang.image.remove,\n          event: 'removeMedia',\n          value: 'none'\n        });\n\n        var content = '<div class=\"btn-group\">' + fullButton + halfButton + quarterButton + '</div>' +\n                      '<div class=\"btn-group\">' + leftButton + rightButton + justifyButton + '</div>' +\n                      '<div class=\"btn-group\">' + roundedButton + circleButton + thumbnailButton + noneButton + '</div>' +\n                      '<div class=\"btn-group\">' + removeButton + '</div>';\n        return tplPopover('note-image-popover', content);\n      };\n\n      var tplAirPopover = function () {\n        var $content = $('<div />');\n        for (var idx = 0, len = options.airPopover.length; idx < len; idx ++) {\n          var group = options.airPopover[idx];\n          \n          var $group = $('<div class=\"note-' + group[0] + ' btn-group\">');\n          for (var i = 0, lenGroup = group[1].length; i < lenGroup; i++) {\n            var $button = $(tplButtonInfo[group[1][i]](lang, options));\n\n            $button.attr('data-name', group[1][i]);\n            \n            $group.append($button);\n          }\n          $content.append($group);\n        }\n\n        return tplPopover('note-air-popover', $content.children());\n      };\n\n      var $notePopover = $('<div class=\"note-popover\" />');\n      \n      $notePopover.append(tplLinkPopover());\n      $notePopover.append(tplImagePopover());\n      \n      if (options.airMode) {\n        $notePopover.append(tplAirPopover());\n      }\n      \n      return $notePopover;\n    };\n\n    var tplHandles = function () {\n      return '<div class=\"note-handle\">' +\n               '<div class=\"note-control-selection\">' +\n                 '<div class=\"note-control-selection-bg\"></div>' +\n                 '<div class=\"note-control-holder note-control-nw\"></div>' +\n                 '<div class=\"note-control-holder note-control-ne\"></div>' +\n                 '<div class=\"note-control-holder note-control-sw\"></div>' +\n                 '<div class=\"note-control-sizing note-control-se\"></div>' +\n                 '<div class=\"note-control-selection-info\"></div>' +\n               '</div>' +\n             '</div>';\n    };\n\n    /**\n     * shortcut table template\n     * @param {String} title\n     * @param {String} body\n     */\n    var tplShortcut = function (title, keys) {\n      var keyClass = 'note-shortcut-col col-xs-6 note-shortcut-';\n      var body = [];\n\n      for (var i in keys) {\n        if (keys.hasOwnProperty(i)) {\n          body.push(\n            '<div class=\"' + keyClass + 'key\">' + keys[i].kbd + '</div>' +\n            '<div class=\"' + keyClass + 'name\">' + keys[i].text + '</div>'\n            );\n        }\n      }\n\n      return '<div class=\"note-shortcut-row row\"><div class=\"' + keyClass + 'title col-xs-offset-6\">' + title + '</div></div>' +\n             '<div class=\"note-shortcut-row row\">' + body.join('</div><div class=\"note-shortcut-row row\">') + '</div>';\n    };\n\n    var tplShortcutText = function (lang) {\n      var keys = [\n        { kbd: '⌘ + B', text: lang.font.bold },\n        { kbd: '⌘ + I', text: lang.font.italic },\n        { kbd: '⌘ + U', text: lang.font.underline },\n        { kbd: '⌘ + \\\\', text: lang.font.clear }\n      ];\n\n      return tplShortcut(lang.shortcut.textFormatting, keys);\n    };\n\n    var tplShortcutAction = function (lang) {\n      var keys = [\n        { kbd: '⌘ + Z', text: lang.history.undo },\n        { kbd: '⌘ + ⇧ + Z', text: lang.history.redo },\n        { kbd: '⌘ + ]', text: lang.paragraph.indent },\n        { kbd: '⌘ + [', text: lang.paragraph.outdent },\n        { kbd: '⌘ + ENTER', text: lang.hr.insert }\n      ];\n\n      return tplShortcut(lang.shortcut.action, keys);\n    };\n\n    var tplShortcutPara = function (lang) {\n      var keys = [\n        { kbd: '⌘ + ⇧ + L', text: lang.paragraph.left },\n        { kbd: '⌘ + ⇧ + E', text: lang.paragraph.center },\n        { kbd: '⌘ + ⇧ + R', text: lang.paragraph.right },\n        { kbd: '⌘ + ⇧ + J', text: lang.paragraph.justify },\n        { kbd: '⌘ + ⇧ + NUM7', text: lang.lists.ordered },\n        { kbd: '⌘ + ⇧ + NUM8', text: lang.lists.unordered }\n      ];\n\n      return tplShortcut(lang.shortcut.paragraphFormatting, keys);\n    };\n\n    var tplShortcutStyle = function (lang) {\n      var keys = [\n        { kbd: '⌘ + NUM0', text: lang.style.normal },\n        { kbd: '⌘ + NUM1', text: lang.style.h1 },\n        { kbd: '⌘ + NUM2', text: lang.style.h2 },\n        { kbd: '⌘ + NUM3', text: lang.style.h3 },\n        { kbd: '⌘ + NUM4', text: lang.style.h4 },\n        { kbd: '⌘ + NUM5', text: lang.style.h5 },\n        { kbd: '⌘ + NUM6', text: lang.style.h6 }\n      ];\n\n      return tplShortcut(lang.shortcut.documentStyle, keys);\n    };\n\n    var tplExtraShortcuts = function (lang, options) {\n      var extraKeys = options.extraKeys;\n      var keys = [];\n\n      for (var key in extraKeys) {\n        if (extraKeys.hasOwnProperty(key)) {\n          keys.push({ kbd: key, text: extraKeys[key] });\n        }\n      }\n\n      return tplShortcut(lang.shortcut.extraKeys, keys);\n    };\n\n    var tplShortcutTable = function (lang, options) {\n      var colClass = 'class=\"note-shortcut note-shortcut-col col-sm-6 col-xs-12\"';\n      var template = [\n        '<div ' + colClass + '>' + tplShortcutAction(lang, options) + '</div>' +\n        '<div ' + colClass + '>' + tplShortcutText(lang, options) + '</div>',\n        '<div ' + colClass + '>' + tplShortcutStyle(lang, options) + '</div>' +\n        '<div ' + colClass + '>' + tplShortcutPara(lang, options) + '</div>'\n      ];\n\n      if (options.extraKeys) {\n        template.push('<div ' + colClass + '>' + tplExtraShortcuts(lang, options) + '</div>');\n      }\n\n      return '<div class=\"note-shortcut-row row\">' +\n               template.join('</div><div class=\"note-shortcut-row row\">') +\n             '</div>';\n    };\n\n    var replaceMacKeys = function (sHtml) {\n      return sHtml.replace(/⌘/g, 'Ctrl').replace(/⇧/g, 'Shift');\n    };\n\n    var tplDialogInfo = {\n      image: function (lang, options) {\n        var imageLimitation = '';\n        if (options.maximumImageFileSize) {\n          var unit = Math.floor(Math.log(options.maximumImageFileSize) / Math.log(1024));\n          var readableSize = (options.maximumImageFileSize / Math.pow(1024, unit)).toFixed(2) * 1 +\n                             ' ' + ' KMGTP'[unit] + 'B';\n          imageLimitation = '<small>' + lang.image.maximumFileSize + ' : ' + readableSize + '</small>';\n        }\n\n        var body = '<div class=\"form-group row-fluid note-group-select-from-files\">' +\n                     '<label>' + lang.image.selectFromFiles + '</label>' +\n                     '<input class=\"note-image-input\" type=\"file\" name=\"files\" accept=\"image/*\" multiple=\"multiple\" />' +\n                     imageLimitation +\n                   '</div>' +\n                   '<div class=\"form-group row-fluid\">' +\n                     '<label>' + lang.image.url + '</label>' +\n                     '<input class=\"note-image-url form-control span12\" type=\"text\" />' +\n                   '</div>';\n        var footer = '<button href=\"#\" class=\"btn btn-primary note-image-btn disabled\" disabled>' + lang.image.insert + '</button>';\n        return tplDialog('note-image-dialog', lang.image.insert, body, footer);\n      },\n\n      link: function (lang, options) {\n        var body = '<div class=\"form-group row-fluid\">' +\n                     '<label>' + lang.link.textToDisplay + '</label>' +\n                     '<input class=\"note-link-text form-control span12\" type=\"text\" />' +\n                   '</div>' +\n                   '<div class=\"form-group row-fluid\">' +\n                     '<label>' + lang.link.url + '</label>' +\n                     '<input class=\"note-link-url form-control span12\" type=\"text\" />' +\n                   '</div>' +\n                   (!options.disableLinkTarget ?\n                     '<div class=\"checkbox\">' +\n                       '<label>' + '<input type=\"checkbox\" checked> ' +\n                         lang.link.openInNewWindow +\n                       '</label>' +\n                     '</div>' : ''\n                   );\n        var footer = '<button href=\"#\" class=\"btn btn-primary note-link-btn disabled\" disabled>' + lang.link.insert + '</button>';\n        return tplDialog('note-link-dialog', lang.link.insert, body, footer);\n      },\n\n      help: function (lang, options) {\n        var body = '<a class=\"modal-close pull-right\" aria-hidden=\"true\" tabindex=\"-1\">' + lang.shortcut.close + '</a>' +\n                   '<div class=\"title\">' + lang.shortcut.shortcuts + '</div>' +\n                   (agent.isMac ? tplShortcutTable(lang, options) : replaceMacKeys(tplShortcutTable(lang, options))) +\n                   '<p class=\"text-center\">' +\n                     '<a href=\"//summernote.org/\" target=\"_blank\">Summernote 0.6.5</a> · ' +\n                     '<a href=\"//github.com/summernote/summernote\" target=\"_blank\">Project</a> · ' +\n                     '<a href=\"//github.com/summernote/summernote/issues\" target=\"_blank\">Issues</a>' +\n                   '</p>';\n        return tplDialog('note-help-dialog', '', body, '');\n      }\n    };\n\n    var tplDialogs = function (lang, options) {\n      var dialogs = '';\n\n      $.each(tplDialogInfo, function (idx, tplDialog) {\n        dialogs += tplDialog(lang, options);\n      });\n\n      return '<div class=\"note-dialog\">' + dialogs + '</div>';\n    };\n\n    var tplStatusbar = function () {\n      return '<div class=\"note-resizebar\">' +\n               '<div class=\"note-icon-bar\"></div>' +\n               '<div class=\"note-icon-bar\"></div>' +\n               '<div class=\"note-icon-bar\"></div>' +\n             '</div>';\n    };\n\n    var representShortcut = function (str) {\n      if (agent.isMac) {\n        str = str.replace('CMD', '⌘').replace('SHIFT', '⇧');\n      }\n\n      return str.replace('BACKSLASH', '\\\\')\n                .replace('SLASH', '/')\n                .replace('LEFTBRACKET', '[')\n                .replace('RIGHTBRACKET', ']');\n    };\n\n    /**\n     * createTooltip\n     *\n     * @param {jQuery} $container\n     * @param {Object} keyMap\n     * @param {String} [sPlacement]\n     */\n    var createTooltip = function ($container, keyMap, sPlacement) {\n      var invertedKeyMap = func.invertObject(keyMap);\n      var $buttons = $container.find('button');\n\n      $buttons.each(function (i, elBtn) {\n        var $btn = $(elBtn);\n        var sShortcut = invertedKeyMap[$btn.data('event')];\n        if (sShortcut) {\n          $btn.attr('title', function (i, v) {\n            return v + ' (' + representShortcut(sShortcut) + ')';\n          });\n        }\n      // bootstrap tooltip on btn-group bug\n      // https://github.com/twbs/bootstrap/issues/5687\n      }).tooltip({\n        container: 'body',\n        trigger: 'hover',\n        placement: sPlacement || 'top'\n      }).on('click', function () {\n        $(this).tooltip('hide');\n      });\n    };\n\n    // createPalette\n    var createPalette = function ($container, options) {\n      var colorInfo = options.colors;\n      $container.find('.note-color-palette').each(function () {\n        var $palette = $(this), eventName = $palette.attr('data-target-event');\n        var paletteContents = [];\n        for (var row = 0, lenRow = colorInfo.length; row < lenRow; row++) {\n          var colors = colorInfo[row];\n          var buttons = [];\n          for (var col = 0, lenCol = colors.length; col < lenCol; col++) {\n            var color = colors[col];\n            buttons.push(['<button type=\"button\" class=\"note-color-btn\" style=\"background-color:', color,\n                           ';\" data-event=\"', eventName,\n                           '\" data-value=\"', color,\n                           '\" title=\"', color,\n                           '\" data-toggle=\"button\" tabindex=\"-1\"></button>'].join(''));\n          }\n          paletteContents.push('<div class=\"note-color-row\">' + buttons.join('') + '</div>');\n        }\n        $palette.html(paletteContents.join(''));\n      });\n    };\n\n    /**\n     * create summernote layout (air mode)\n     *\n     * @param {jQuery} $holder\n     * @param {Object} options\n     */\n    this.createLayoutByAirMode = function ($holder, options) {\n      var langInfo = options.langInfo;\n      var keyMap = options.keyMap[agent.isMac ? 'mac' : 'pc'];\n      var id = func.uniqueId();\n\n      $holder.addClass('note-air-editor note-editable');\n      $holder.attr({\n        'id': 'note-editor-' + id,\n        'contentEditable': true\n      });\n\n      var body = document.body;\n\n      // create Popover\n      var $popover = $(tplPopovers(langInfo, options));\n      $popover.addClass('note-air-layout');\n      $popover.attr('id', 'note-popover-' + id);\n      $popover.appendTo(body);\n      createTooltip($popover, keyMap);\n      createPalette($popover, options);\n\n      // create Handle\n      var $handle = $(tplHandles());\n      $handle.addClass('note-air-layout');\n      $handle.attr('id', 'note-handle-' + id);\n      $handle.appendTo(body);\n\n      // create Dialog\n      var $dialog = $(tplDialogs(langInfo, options));\n      $dialog.addClass('note-air-layout');\n      $dialog.attr('id', 'note-dialog-' + id);\n      $dialog.find('button.close, a.modal-close').click(function () {\n        $(this).closest('.modal').modal('hide');\n      });\n      $dialog.appendTo(body);\n    };\n\n    /**\n     * create summernote layout (normal mode)\n     *\n     * @param {jQuery} $holder\n     * @param {Object} options\n     */\n    this.createLayoutByFrame = function ($holder, options) {\n      var langInfo = options.langInfo;\n\n      //01. create Editor\n      var $editor = $('<div class=\"note-editor\"></div>');\n      if (options.width) {\n        $editor.width(options.width);\n      }\n\n      //02. statusbar (resizebar)\n      if (options.height > 0) {\n        $('<div class=\"note-statusbar\">' + (options.disableResizeEditor ? '' : tplStatusbar()) + '</div>').prependTo($editor);\n      }\n\n      //03. create Editable\n      var isContentEditable = !$holder.is(':disabled');\n      var $editable = $('<div class=\"note-editable\" contentEditable=\"' + isContentEditable + '\"></div>')\n          .prependTo($editor);\n      if (options.height) {\n        $editable.height(options.height);\n      }\n      if (options.direction) {\n        $editable.attr('dir', options.direction);\n      }\n      var placeholder = $holder.attr('placeholder') || options.placeholder;\n      if (placeholder) {\n        $editable.attr('data-placeholder', placeholder);\n      }\n\n      $editable.html(dom.html($holder));\n\n      //031. create codable\n      $('<textarea class=\"note-codable\"></textarea>').prependTo($editor);\n\n      //04. create Toolbar\n      var $toolbar = $('<div class=\"note-toolbar btn-toolbar\" />');\n      for (var idx = 0, len = options.toolbar.length; idx < len; idx ++) {\n        var groupName = options.toolbar[idx][0];\n        var groupButtons = options.toolbar[idx][1];\n\n        var $group = $('<div class=\"note-' + groupName + ' btn-group\" />');\n        for (var i = 0, btnLength = groupButtons.length; i < btnLength; i++) {\n          var buttonInfo = tplButtonInfo[groupButtons[i]];\n          // continue creating toolbar even if a button doesn't exist\n          if (!$.isFunction(buttonInfo)) { continue; }\n\n          var $button = $(buttonInfo(langInfo, options));\n          $button.attr('data-name', groupButtons[i]);  // set button's alias, becuase to get button element from $toolbar\n          $group.append($button);\n        }\n        $toolbar.append($group);\n      }\n      \n      $toolbar.prependTo($editor);\n      var keyMap = options.keyMap[agent.isMac ? 'mac' : 'pc'];\n      createPalette($toolbar, options);\n      createTooltip($toolbar, keyMap, 'bottom');\n\n      //05. create Popover\n      var $popover = $(tplPopovers(langInfo, options)).prependTo($editor);\n      createPalette($popover, options);\n      createTooltip($popover, keyMap);\n\n      //06. handle(control selection, ...)\n      $(tplHandles()).prependTo($editor);\n\n      //07. create Dialog\n      var $dialog = $(tplDialogs(langInfo, options)).prependTo($editor);\n      $dialog.find('button.close, a.modal-close').click(function () {\n        $(this).closest('.modal').modal('hide');\n      });\n\n      //08. create Dropzone\n      $('<div class=\"note-dropzone\"><div class=\"note-dropzone-message\"></div></div>').prependTo($editor);\n\n      //09. Editor/Holder switch\n      $editor.insertAfter($holder);\n      $holder.hide();\n    };\n\n    this.hasNoteEditor = function ($holder) {\n      return this.noteEditorFromHolder($holder).length > 0;\n    };\n\n    this.noteEditorFromHolder = function ($holder) {\n      if ($holder.hasClass('note-air-editor')) {\n        return $holder;\n      } else if ($holder.next().hasClass('note-editor')) {\n        return $holder.next();\n      } else {\n        return $();\n      }\n    };\n\n    /**\n     * create summernote layout\n     *\n     * @param {jQuery} $holder\n     * @param {Object} options\n     */\n    this.createLayout = function ($holder, options) {\n      if (options.airMode) {\n        this.createLayoutByAirMode($holder, options);\n      } else {\n        this.createLayoutByFrame($holder, options);\n      }\n    };\n\n    /**\n     * returns layoutInfo from holder\n     *\n     * @param {jQuery} $holder - placeholder\n     * @return {Object}\n     */\n    this.layoutInfoFromHolder = function ($holder) {\n      var $editor = this.noteEditorFromHolder($holder);\n      if (!$editor.length) {\n        return;\n      }\n\n      // connect $holder to $editor\n      $editor.data('holder', $holder);\n\n      return dom.buildLayoutInfo($editor);\n    };\n\n    /**\n     * removeLayout\n     *\n     * @param {jQuery} $holder - placeholder\n     * @param {Object} layoutInfo\n     * @param {Object} options\n     *\n     */\n    this.removeLayout = function ($holder, layoutInfo, options) {\n      if (options.airMode) {\n        $holder.removeClass('note-air-editor note-editable')\n               .removeAttr('id contentEditable');\n\n        layoutInfo.popover().remove();\n        layoutInfo.handle().remove();\n        layoutInfo.dialog().remove();\n      } else {\n        $holder.html(layoutInfo.editable().html());\n\n        layoutInfo.editor().remove();\n        $holder.show();\n      }\n    };\n\n    /**\n     *\n     * @return {Object}\n     * @return {function(label, options=):string} return.button {@link #tplButton function to make text button}\n     * @return {function(iconClass, options=):string} return.iconButton {@link #tplIconButton function to make icon button}\n     * @return {function(className, title=, body=, footer=):string} return.dialog {@link #tplDialog function to make dialog}\n     */\n    this.getTemplate = function () {\n      return {\n        button: tplButton,\n        iconButton: tplIconButton,\n        dialog: tplDialog\n      };\n    };\n\n    /**\n     * add button information\n     *\n     * @param {String} name button name\n     * @param {Function} buttonInfo function to make button, reference to {@link #tplButton},{@link #tplIconButton}\n     */\n    this.addButtonInfo = function (name, buttonInfo) {\n      tplButtonInfo[name] = buttonInfo;\n    };\n\n    /**\n     *\n     * @param {String} name\n     * @param {Function} dialogInfo function to make dialog, reference to {@link #tplDialog}\n     */\n    this.addDialogInfo = function (name, dialogInfo) {\n      tplDialogInfo[name] = dialogInfo;\n    };\n  };\n\n\n  // jQuery namespace for summernote\n  /**\n   * @class $.summernote \n   * \n   * summernote attribute  \n   * \n   * @mixin defaults\n   * @singleton  \n   * \n   */\n  $.summernote = $.summernote || {};\n\n  // extends default settings\n  //  - $.summernote.version\n  //  - $.summernote.options\n  //  - $.summernote.lang\n  $.extend($.summernote, defaults);\n\n  var renderer = new Renderer();\n  var eventHandler = new EventHandler();\n\n  $.extend($.summernote, {\n    /** @property {Renderer} */\n    renderer: renderer,\n    /** @property {EventHandler} */\n    eventHandler: eventHandler,\n    /** \n     * @property {Object} core \n     * @property {core.agent} core.agent \n     * @property {core.dom} core.dom\n     * @property {core.range} core.range \n     */\n    core: {\n      agent: agent,\n      dom: dom,\n      range: range\n    },\n    /** \n     * @property {Object} \n     * pluginEvents event list for plugins\n     * event has name and callback function.\n     * \n     * ``` \n     * $.summernote.addPlugin({\n     *     events : {\n     *          'hello' : function(layoutInfo, value, $target) {\n     *              console.log('event name is hello, value is ' + value );\n     *          }\n     *     }     \n     * })\n     * ```\n     * \n     * * event name is data-event property.\n     * * layoutInfo is a summernote layout information.\n     * * value is data-value property.\n     */\n    pluginEvents: {},\n\n    plugins : []\n  });\n\n  /**\n   * @method addPlugin\n   *\n   * add Plugin in Summernote \n   * \n   * Summernote can make a own plugin.\n   *\n   * ### Define plugin\n   * ```\n   * // get template function  \n   * var tmpl = $.summernote.renderer.getTemplate();\n   * \n   * // add a button   \n   * $.summernote.addPlugin({\n   *     buttons : {\n   *        // \"hello\"  is button's namespace.      \n   *        \"hello\" : function(lang, options) {\n   *            // make icon button by template function          \n   *            return tmpl.iconButton('fa fa-header', {\n   *                // callback function name when button clicked \n   *                event : 'hello',\n   *                // set data-value property                 \n   *                value : 'hello',                \n   *                hide : true\n   *            });           \n   *        }\n   *     \n   *     }, \n   *     \n   *     events : {\n   *        \"hello\" : function(layoutInfo, value) {\n   *            // here is event code \n   *        }\n   *     }     \n   * });\n   * ``` \n   * ### Use a plugin in toolbar\n   * \n   * ``` \n   *    $(\"#editor\").summernote({\n   *    ...\n   *    toolbar : [\n   *        // display hello plugin in toolbar     \n   *        ['group', [ 'hello' ]]\n   *    ]\n   *    ...    \n   *    });\n   * ```\n   *  \n   *  \n   * @param {Object} plugin\n   * @param {Object} [plugin.buttons] define plugin button. for detail, see to Renderer.addButtonInfo\n   * @param {Object} [plugin.dialogs] define plugin dialog. for detail, see to Renderer.addDialogInfo\n   * @param {Object} [plugin.events] add event in $.summernote.pluginEvents \n   * @param {Object} [plugin.langs] update $.summernote.lang\n   * @param {Object} [plugin.options] update $.summernote.options\n   */\n  $.summernote.addPlugin = function (plugin) {\n\n    // save plugin list\n    $.summernote.plugins.push(plugin);\n\n    if (plugin.buttons) {\n      $.each(plugin.buttons, function (name, button) {\n        renderer.addButtonInfo(name, button);\n      });\n    }\n\n    if (plugin.dialogs) {\n      $.each(plugin.dialogs, function (name, dialog) {\n        renderer.addDialogInfo(name, dialog);\n      });\n    }\n\n    if (plugin.events) {\n      $.each(plugin.events, function (name, event) {\n        $.summernote.pluginEvents[name] = event;\n      });\n    }\n\n    if (plugin.langs) {\n      $.each(plugin.langs, function (locale, lang) {\n        if ($.summernote.lang[locale]) {\n          $.extend($.summernote.lang[locale], lang);\n        }\n      });\n    }\n\n    if (plugin.options) {\n      $.extend($.summernote.options, plugin.options);\n    }\n  };\n\n  /*\n   * extend $.fn\n   */\n  $.fn.extend({\n    /**\n     * @method\n     * Initialize summernote\n     *  - create editor layout and attach Mouse and keyboard events.\n     * \n     * ```\n     * $(\"#summernote\").summernote( { options ..} );\n     * ```\n     *   \n     * @member $.fn\n     * @param {Object|String} options reference to $.summernote.options\n     * @return {this}\n     */\n    summernote: function () {\n      // check first argument's type\n      //  - {String}: External API call {{module}}.{{method}}\n      //  - {Object}: init options\n      var type = $.type(list.head(arguments));\n      var isExternalAPICalled = type === 'string';\n      var isInitOptions = type === 'object';\n\n      // extend default options with custom user options\n      var options = isInitOptions ? list.head(arguments) : {};\n      options = $.extend({}, $.summernote.options, options);\n\n      // Include langInfo in options for later use, e.g. for image drag-n-drop\n      // Setup language info with en-US as default\n      options.langInfo = $.extend(true, {}, $.summernote.lang['en-US'], $.summernote.lang[options.lang]);\n\n      this.each(function (idx, holder) {\n        var $holder = $(holder);\n\n        // if layout isn't created yet, createLayout and attach events\n        if (!renderer.hasNoteEditor($holder)) {\n          renderer.createLayout($holder, options);\n\n          var layoutInfo = renderer.layoutInfoFromHolder($holder);\n\n          eventHandler.attach(layoutInfo, options);\n          eventHandler.attachCustomEvent(layoutInfo, options);\n\n        }\n      });\n\n      // callback on init\n      if (!isExternalAPICalled && this.length && options.oninit) {\n        options.oninit();\n      }\n\n      var $first = this.first();\n      if ($first.length) {\n        var layoutInfo = renderer.layoutInfoFromHolder($first);\n\n        // external API\n        if (isExternalAPICalled) {\n          var moduleAndMethod = list.head(list.from(arguments));\n          var args = list.tail(list.from(arguments));\n\n          // TODO now external API only works for editor\n          var params = [moduleAndMethod, layoutInfo.editable()].concat(args);\n          return eventHandler.invoke.apply(eventHandler, params);\n        } else if (options.focus) {\n          // focus on first editable element for initialize editor\n          layoutInfo.editable().focus();\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * @method \n     * \n     * get the HTML contents of note or set the HTML contents of note.\n     *\n     * * get contents \n     * ```\n     * var content = $(\"#summernote\").code();\n     * ```\n     * * set contents \n     *\n     * ```\n     * $(\"#summernote\").code(html);\n     * ```\n     *\n     * @member $.fn \n     * @param {String} [html] - HTML contents(optional, set)\n     * @return {this|String} - context(set) or HTML contents of note(get).\n     */\n    code: function (html) {\n      // get the HTML contents of note\n      if (html === undefined) {\n        var $holder = this.first();\n        if (!$holder.length) {\n          return;\n        }\n\n        var layoutInfo = renderer.layoutInfoFromHolder($holder);\n        var $editable = layoutInfo && layoutInfo.editable();\n\n        if ($editable && $editable.length) {\n          var isCodeview = eventHandler.invoke('codeview.isActivated', layoutInfo);\n          eventHandler.invoke('codeview.sync', layoutInfo);\n          return isCodeview ? layoutInfo.codable().val() :\n                              layoutInfo.editable().html();\n        }\n        return dom.value($holder);\n      }\n\n      // set the HTML contents of note\n      this.each(function (i, holder) {\n        var layoutInfo = renderer.layoutInfoFromHolder($(holder));\n        var $editable = layoutInfo && layoutInfo.editable();\n        if ($editable) {\n          $editable.html(html);\n        }\n      });\n\n      return this;\n    },\n\n    /**\n     * @method\n     * \n     * destroy Editor Layout and detach Key and Mouse Event\n     *\n     * @member $.fn\n     * @return {this}\n     */\n    destroy: function () {\n      this.each(function (idx, holder) {\n        var $holder = $(holder);\n\n        if (!renderer.hasNoteEditor($holder)) {\n          return;\n        }\n\n        var info = renderer.layoutInfoFromHolder($holder);\n        var options = info.editor().data('options');\n\n        eventHandler.detach(info, options);\n        renderer.removeLayout($holder, info, options);\n      });\n\n      return this;\n    }\n  });\n}));\n"]}